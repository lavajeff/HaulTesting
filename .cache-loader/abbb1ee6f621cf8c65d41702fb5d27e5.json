{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/AssetSourceResolver.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/AssetSourceResolver.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var PixelRatio=require('PixelRatio');var Platform=require('Platform');var assetPathUtils=require('../../local-cli/bundle/assetPathUtils');var invariant=require('fbjs/lib/invariant');function getScaledAssetPath(asset){var scale=AssetSourceResolver.pickScale(asset.scales,PixelRatio.get());var scaleSuffix=scale===1?'':'@'+scale+'x';var assetDir=assetPathUtils.getBasePath(asset);return assetDir+'/'+asset.name+scaleSuffix+'.'+asset.type;}function getAssetPathInDrawableFolder(asset){var scale=AssetSourceResolver.pickScale(asset.scales,PixelRatio.get());var drawbleFolder=assetPathUtils.getAndroidResourceFolderName(asset,scale);var fileName=assetPathUtils.getAndroidResourceIdentifier(asset);return drawbleFolder+'/'+fileName+'.'+asset.type;}var AssetSourceResolver=function(){function AssetSourceResolver(serverUrl,jsbundleUrl,asset){(0,_classCallCheck2.default)(this,AssetSourceResolver);this.serverUrl=serverUrl;this.jsbundleUrl=jsbundleUrl;this.asset=asset;}(0,_createClass2.default)(AssetSourceResolver,[{key:\"isLoadedFromServer\",value:function isLoadedFromServer(){return!!this.serverUrl;}},{key:\"isLoadedFromFileSystem\",value:function isLoadedFromFileSystem(){return!!(this.jsbundleUrl&&this.jsbundleUrl.startsWith('file://'));}},{key:\"defaultAsset\",value:function defaultAsset(){if(this.isLoadedFromServer()){return this.assetServerURL();}if(Platform.OS==='android'){return this.isLoadedFromFileSystem()?this.drawableFolderInBundle():this.resourceIdentifierWithoutScale();}else{return this.scaledAssetURLNearBundle();}}},{key:\"assetServerURL\",value:function assetServerURL(){invariant(!!this.serverUrl,'need server to load from');return this.fromSource(this.serverUrl+getScaledAssetPath(this.asset)+'?platform='+Platform.OS+'&hash='+this.asset.hash);}},{key:\"scaledAssetPath\",value:function scaledAssetPath(){return this.fromSource(getScaledAssetPath(this.asset));}},{key:\"scaledAssetURLNearBundle\",value:function scaledAssetURLNearBundle(){var path=this.jsbundleUrl||'file://';return this.fromSource(path+getScaledAssetPath(this.asset));}},{key:\"resourceIdentifierWithoutScale\",value:function resourceIdentifierWithoutScale(){invariant(Platform.OS==='android','resource identifiers work on Android');return this.fromSource(assetPathUtils.getAndroidResourceIdentifier(this.asset));}},{key:\"drawableFolderInBundle\",value:function drawableFolderInBundle(){var path=this.jsbundleUrl||'file://';return this.fromSource(path+getAssetPathInDrawableFolder(this.asset));}},{key:\"fromSource\",value:function fromSource(source){return{__packager_asset:true,width:this.asset.width,height:this.asset.height,uri:source,scale:AssetSourceResolver.pickScale(this.asset.scales,PixelRatio.get())};}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}],[{key:\"pickScale\",value:function pickScale(scales,deviceScale){for(var i=0;i<scales.length;i++){if(scales[i]>=deviceScale){return scales[i];}}return scales[scales.length-1]||1;}}]);return AssetSourceResolver;}();module.exports=AssetSourceResolver;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(getScaledAssetPath,\"getScaledAssetPath\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/AssetSourceResolver.js\");reactHotLoader.register(getAssetPathInDrawableFolder,\"getAssetPathInDrawableFolder\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/AssetSourceResolver.js\");reactHotLoader.register(AssetSourceResolver,\"AssetSourceResolver\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/AssetSourceResolver.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/AssetSourceResolver.js"],"names":["PixelRatio","require","Platform","assetPathUtils","invariant","getScaledAssetPath","asset","scale","AssetSourceResolver","pickScale","scales","get","scaleSuffix","assetDir","getBasePath","name","type","getAssetPathInDrawableFolder","drawbleFolder","getAndroidResourceFolderName","fileName","getAndroidResourceIdentifier","serverUrl","jsbundleUrl","startsWith","isLoadedFromServer","assetServerURL","OS","isLoadedFromFileSystem","drawableFolderInBundle","resourceIdentifierWithoutScale","scaledAssetURLNearBundle","fromSource","hash","path","source","__packager_asset","width","height","uri","deviceScale","i","length","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nexport type ResolvedAssetSource = {|\n  +__packager_asset: boolean,\n  +width: ?number,\n  +height: ?number,\n  +uri: string,\n  +scale: number,\n|};\n\nimport type {PackagerAsset} from 'AssetRegistry';\n\nconst PixelRatio = require('PixelRatio');\nconst Platform = require('Platform');\n\nconst assetPathUtils = require('../../local-cli/bundle/assetPathUtils');\nconst invariant = require('fbjs/lib/invariant');\n\n/**\n * Returns a path like 'assets/AwesomeModule/icon@2x.png'\n */\nfunction getScaledAssetPath(asset): string {\n  const scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());\n  const scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  const assetDir = assetPathUtils.getBasePath(asset);\n  return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;\n}\n\n/**\n * Returns a path like 'drawable-mdpi/icon.png'\n */\nfunction getAssetPathInDrawableFolder(asset): string {\n  const scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());\n  const drawbleFolder = assetPathUtils.getAndroidResourceFolderName(\n    asset,\n    scale,\n  );\n  const fileName = assetPathUtils.getAndroidResourceIdentifier(asset);\n  return drawbleFolder + '/' + fileName + '.' + asset.type;\n}\n\nclass AssetSourceResolver {\n  serverUrl: ?string;\n  // where the jsbundle is being run from\n  jsbundleUrl: ?string;\n  // the asset to resolve\n  asset: PackagerAsset;\n\n  constructor(serverUrl: ?string, jsbundleUrl: ?string, asset: PackagerAsset) {\n    this.serverUrl = serverUrl;\n    this.jsbundleUrl = jsbundleUrl;\n    this.asset = asset;\n  }\n\n  isLoadedFromServer(): boolean {\n    return !!this.serverUrl;\n  }\n\n  isLoadedFromFileSystem(): boolean {\n    return !!(this.jsbundleUrl && this.jsbundleUrl.startsWith('file://'));\n  }\n\n  defaultAsset(): ResolvedAssetSource {\n    if (this.isLoadedFromServer()) {\n      return this.assetServerURL();\n    }\n\n    if (Platform.OS === 'android') {\n      return this.isLoadedFromFileSystem()\n        ? this.drawableFolderInBundle()\n        : this.resourceIdentifierWithoutScale();\n    } else {\n      return this.scaledAssetURLNearBundle();\n    }\n  }\n\n  /**\n   * Returns an absolute URL which can be used to fetch the asset\n   * from the devserver\n   */\n  assetServerURL(): ResolvedAssetSource {\n    invariant(!!this.serverUrl, 'need server to load from');\n    return this.fromSource(\n      this.serverUrl +\n        getScaledAssetPath(this.asset) +\n        '?platform=' +\n        Platform.OS +\n        '&hash=' +\n        this.asset.hash,\n    );\n  }\n\n  /**\n   * Resolves to just the scaled asset filename\n   * E.g. 'assets/AwesomeModule/icon@2x.png'\n   */\n  scaledAssetPath(): ResolvedAssetSource {\n    return this.fromSource(getScaledAssetPath(this.asset));\n  }\n\n  /**\n   * Resolves to where the bundle is running from, with a scaled asset filename\n   * E.g. 'file:///sdcard/bundle/assets/AwesomeModule/icon@2x.png'\n   */\n  scaledAssetURLNearBundle(): ResolvedAssetSource {\n    const path = this.jsbundleUrl || 'file://';\n    return this.fromSource(path + getScaledAssetPath(this.asset));\n  }\n\n  /**\n   * The default location of assets bundled with the app, located by\n   * resource identifier\n   * The Android resource system picks the correct scale.\n   * E.g. 'assets_awesomemodule_icon'\n   */\n  resourceIdentifierWithoutScale(): ResolvedAssetSource {\n    invariant(\n      Platform.OS === 'android',\n      'resource identifiers work on Android',\n    );\n    return this.fromSource(\n      assetPathUtils.getAndroidResourceIdentifier(this.asset),\n    );\n  }\n\n  /**\n   * If the jsbundle is running from a sideload location, this resolves assets\n   * relative to its location\n   * E.g. 'file:///sdcard/AwesomeModule/drawable-mdpi/icon.png'\n   */\n  drawableFolderInBundle(): ResolvedAssetSource {\n    const path = this.jsbundleUrl || 'file://';\n    return this.fromSource(path + getAssetPathInDrawableFolder(this.asset));\n  }\n\n  fromSource(source: string): ResolvedAssetSource {\n    return {\n      __packager_asset: true,\n      width: this.asset.width,\n      height: this.asset.height,\n      uri: source,\n      scale: AssetSourceResolver.pickScale(this.asset.scales, PixelRatio.get()),\n    };\n  }\n\n  static pickScale(scales: Array<number>, deviceScale: number): number {\n    // Packager guarantees that `scales` array is sorted\n    for (let i = 0; i < scales.length; i++) {\n      if (scales[i] >= deviceScale) {\n        return scales[i];\n      }\n    }\n\n    // If nothing matches, device scale is larger than any available\n    // scales, so we return the biggest one. Unless the array is empty,\n    // in which case we default to 1\n    return scales[scales.length - 1] || 1;\n  }\n}\n\nmodule.exports = AssetSourceResolver;\n"]}]}
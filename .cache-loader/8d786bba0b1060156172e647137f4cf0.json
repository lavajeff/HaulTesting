{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/UTFSequence.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/UTFSequence.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');var UTFSequence=deepFreezeAndThrowOnMutationInDev({BOM:\"\\uFEFF\",BULLET:\"\\u2022\",BULLET_SP:\"\\xA0\\u2022\\xA0\",MIDDOT:\"\\xB7\",MIDDOT_SP:\"\\xA0\\xB7\\xA0\",MIDDOT_KATAKANA:\"\\u30FB\",MDASH:\"\\u2014\",MDASH_SP:\"\\xA0\\u2014\\xA0\",NDASH:\"\\u2013\",NDASH_SP:\"\\xA0\\u2013\\xA0\",NBSP:\"\\xA0\",PIZZA:\"\\uD83C\\uDF55\",TRIANGLE_LEFT:\"\\u25C0\",TRIANGLE_RIGHT:\"\\u25B6\"});module.exports=UTFSequence;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(UTFSequence,\"UTFSequence\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/UTFSequence.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/UTFSequence.js"],"names":["deepFreezeAndThrowOnMutationInDev","require","UTFSequence","BOM","BULLET","BULLET_SP","MIDDOT","MIDDOT_SP","MIDDOT_KATAKANA","MDASH","MDASH_SP","NDASH","NDASH_SP","NBSP","PIZZA","TRIANGLE_LEFT","TRIANGLE_RIGHT","module","exports"],"mappings":"AAUA,a,0GAEA,GAAMA,CAAAA,iCAAiC,CAAGC,OAAO,CAAC,mCAAD,CAAjD,CASA,GAAMC,CAAAA,WAAW,CAAGF,iCAAiC,CAAC,CACpDG,GAAG,CAAE,QAD+C,CAEpDC,MAAM,CAAE,QAF4C,CAGpDC,SAAS,CAAE,gBAHyC,CAIpDC,MAAM,CAAE,MAJ4C,CAKpDC,SAAS,CAAE,cALyC,CAMpDC,eAAe,CAAE,QANmC,CAOpDC,KAAK,CAAE,QAP6C,CAQpDC,QAAQ,CAAE,gBAR0C,CASpDC,KAAK,CAAE,QAT6C,CAUpDC,QAAQ,CAAE,gBAV0C,CAWpDC,IAAI,CAAE,MAX8C,CAYpDC,KAAK,CAAE,cAZ6C,CAapDC,aAAa,CAAE,QAbqC,CAcpDC,cAAc,CAAE,QAdoC,CAAD,CAArD,CAiBAC,MAAM,CAACC,OAAP,CAAiBhB,WAAjB,C,gLAjBMA,W","sourcesContent":["/**\n * Copyright (c) 2016-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst deepFreezeAndThrowOnMutationInDev = require('deepFreezeAndThrowOnMutationInDev');\n\n/**\n * A collection of Unicode sequences for various characters and emoji.\n *\n *  - More explicit than using the sequences directly in code.\n *  - Source code should be limitted to ASCII.\n *  - Less chance of typos.\n */\nconst UTFSequence = deepFreezeAndThrowOnMutationInDev({\n  BOM: '\\ufeff', // byte order mark\n  BULLET: '\\u2022', // bullet: &#8226;\n  BULLET_SP: '\\u00A0\\u2022\\u00A0', // &nbsp;&#8226;&nbsp;\n  MIDDOT: '\\u00B7', // normal middle dot: &middot;\n  MIDDOT_SP: '\\u00A0\\u00B7\\u00A0', // &nbsp;&middot;&nbsp;\n  MIDDOT_KATAKANA: '\\u30FB', // katakana middle dot\n  MDASH: '\\u2014', // em dash: &mdash;\n  MDASH_SP: '\\u00A0\\u2014\\u00A0', // &nbsp;&mdash;&nbsp;\n  NDASH: '\\u2013', // en dash: &ndash;\n  NDASH_SP: '\\u00A0\\u2013\\u00A0', // &nbsp;&ndash;&nbsp;\n  NBSP: '\\u00A0', // non-breaking space: &nbsp;\n  PIZZA: '\\uD83C\\uDF55',\n  TRIANGLE_LEFT: '\\u25c0', // black left-pointing triangle\n  TRIANGLE_RIGHT: '\\u25b6', // black right-pointing triangle\n});\n\nmodule.exports = UTFSequence;\n"]}]}
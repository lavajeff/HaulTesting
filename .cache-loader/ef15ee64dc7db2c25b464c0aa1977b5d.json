{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _jsxFileName=\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js\";(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var ColorPropType=require('ColorPropType');var NativeMethodsMixin=require('NativeMethodsMixin');var PropTypes=require('prop-types');var Platform=require('Platform');var React=require('React');var ReactNativeViewAttributes=require('ReactNativeViewAttributes');var StyleSheet=require('StyleSheet');var Touchable=require('Touchable');var TouchableWithoutFeedback=require('TouchableWithoutFeedback');var View=require('View');var ViewPropTypes=require('ViewPropTypes');var createReactClass=require('create-react-class');var ensurePositiveDelayProps=require('ensurePositiveDelayProps');var DEFAULT_PROPS={activeOpacity:0.85,delayPressOut:100,underlayColor:'black'};var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30};var TouchableHighlight=createReactClass({displayName:'TouchableHighlight',propTypes:(0,_objectSpread2.default)({},TouchableWithoutFeedback.propTypes,{activeOpacity:PropTypes.number,underlayColor:ColorPropType,style:ViewPropTypes.style,onShowUnderlay:PropTypes.func,onHideUnderlay:PropTypes.func,hasTVPreferredFocus:PropTypes.bool,tvParallaxProperties:PropTypes.object,testOnly_pressed:PropTypes.bool}),mixins:[NativeMethodsMixin,Touchable.Mixin],getDefaultProps:function getDefaultProps(){return DEFAULT_PROPS;},getInitialState:function getInitialState(){this._isMounted=false;if(this.props.testOnly_pressed){return(0,_objectSpread2.default)({},this.touchableGetInitialState(),{extraChildStyle:{opacity:this.props.activeOpacity},extraUnderlayStyle:{backgroundColor:this.props.underlayColor}});}else{return(0,_objectSpread2.default)({},this.touchableGetInitialState(),{extraChildStyle:null,extraUnderlayStyle:null});}},componentDidMount:function componentDidMount(){this._isMounted=true;ensurePositiveDelayProps(this.props);},componentWillUnmount:function componentWillUnmount(){this._isMounted=false;clearTimeout(this._hideTimeout);},UNSAFE_componentWillReceiveProps:function UNSAFE_componentWillReceiveProps(nextProps){ensurePositiveDelayProps(nextProps);},viewConfig:{uiViewClassName:'RCTView',validAttributes:ReactNativeViewAttributes.RCTView},touchableHandleActivePressIn:function touchableHandleActivePressIn(e){clearTimeout(this._hideTimeout);this._hideTimeout=null;this._showUnderlay();this.props.onPressIn&&this.props.onPressIn(e);},touchableHandleActivePressOut:function touchableHandleActivePressOut(e){if(!this._hideTimeout){this._hideUnderlay();}this.props.onPressOut&&this.props.onPressOut(e);},touchableHandlePress:function touchableHandlePress(e){clearTimeout(this._hideTimeout);if(!Platform.isTV){this._showUnderlay();this._hideTimeout=setTimeout(this._hideUnderlay,this.props.delayPressOut);}this.props.onPress&&this.props.onPress(e);},touchableHandleLongPress:function touchableHandleLongPress(e){this.props.onLongPress&&this.props.onLongPress(e);},touchableGetPressRectOffset:function touchableGetPressRectOffset(){return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET;},touchableGetHitSlop:function touchableGetHitSlop(){return this.props.hitSlop;},touchableGetHighlightDelayMS:function touchableGetHighlightDelayMS(){return this.props.delayPressIn;},touchableGetLongPressDelayMS:function touchableGetLongPressDelayMS(){return this.props.delayLongPress;},touchableGetPressOutDelayMS:function touchableGetPressOutDelayMS(){return this.props.delayPressOut;},_showUnderlay:function _showUnderlay(){if(!this._isMounted||!this._hasPressHandler()){return;}this.setState({extraChildStyle:{opacity:this.props.activeOpacity},extraUnderlayStyle:{backgroundColor:this.props.underlayColor}});this.props.onShowUnderlay&&this.props.onShowUnderlay();},_hideUnderlay:function _hideUnderlay(){clearTimeout(this._hideTimeout);this._hideTimeout=null;if(this.props.testOnly_pressed){return;}if(this._hasPressHandler()){this.setState({extraChildStyle:null,extraUnderlayStyle:null});this.props.onHideUnderlay&&this.props.onHideUnderlay();}},_hasPressHandler:function _hasPressHandler(){return!!(this.props.onPress||this.props.onPressIn||this.props.onPressOut||this.props.onLongPress);},render:function render(){var child=React.Children.only(this.props.children);return React.createElement(View,{accessible:this.props.accessible!==false,accessibilityLabel:this.props.accessibilityLabel,accessibilityHint:this.props.accessibilityHint,accessibilityRole:this.props.accessibilityRole,accessibilityStates:this.props.accessibilityStates,style:StyleSheet.compose(this.props.style,this.state.extraUnderlayStyle),onLayout:this.props.onLayout,hitSlop:this.props.hitSlop,isTVSelectable:true,tvParallaxProperties:this.props.tvParallaxProperties,hasTVPreferredFocus:this.props.hasTVPreferredFocus,onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,onResponderGrant:this.touchableHandleResponderGrant,onResponderMove:this.touchableHandleResponderMove,onResponderRelease:this.touchableHandleResponderRelease,onResponderTerminate:this.touchableHandleResponderTerminate,nativeID:this.props.nativeID,testID:this.props.testID,__source:{fileName:_jsxFileName,lineNumber:348}},React.cloneElement(child,{style:StyleSheet.compose(child.props.style,this.state.extraChildStyle)}),Touchable.renderDebugView({color:'green',hitSlop:this.props.hitSlop}));}});module.exports=TouchableHighlight;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(DEFAULT_PROPS,\"DEFAULT_PROPS\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js\");reactHotLoader.register(PRESS_RETENTION_OFFSET,\"PRESS_RETENTION_OFFSET\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js\");reactHotLoader.register(TouchableHighlight,\"TouchableHighlight\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js"],"names":["ColorPropType","require","NativeMethodsMixin","PropTypes","Platform","React","ReactNativeViewAttributes","StyleSheet","Touchable","TouchableWithoutFeedback","View","ViewPropTypes","createReactClass","ensurePositiveDelayProps","DEFAULT_PROPS","activeOpacity","delayPressOut","underlayColor","PRESS_RETENTION_OFFSET","top","left","right","bottom","TouchableHighlight","displayName","propTypes","number","style","onShowUnderlay","func","onHideUnderlay","hasTVPreferredFocus","bool","tvParallaxProperties","object","testOnly_pressed","mixins","Mixin","getDefaultProps","getInitialState","_isMounted","props","touchableGetInitialState","extraChildStyle","opacity","extraUnderlayStyle","backgroundColor","componentDidMount","componentWillUnmount","clearTimeout","_hideTimeout","UNSAFE_componentWillReceiveProps","nextProps","viewConfig","uiViewClassName","validAttributes","RCTView","touchableHandleActivePressIn","e","_showUnderlay","onPressIn","touchableHandleActivePressOut","_hideUnderlay","onPressOut","touchableHandlePress","isTV","setTimeout","onPress","touchableHandleLongPress","onLongPress","touchableGetPressRectOffset","pressRetentionOffset","touchableGetHitSlop","hitSlop","touchableGetHighlightDelayMS","delayPressIn","touchableGetLongPressDelayMS","delayLongPress","touchableGetPressOutDelayMS","_hasPressHandler","setState","render","child","Children","only","children","accessible","accessibilityLabel","accessibilityHint","accessibilityRole","accessibilityStates","compose","state","onLayout","touchableHandleStartShouldSetResponder","touchableHandleResponderTerminationRequest","touchableHandleResponderGrant","touchableHandleResponderMove","touchableHandleResponderRelease","touchableHandleResponderTerminate","nativeID","testID","cloneElement","renderDebugView","color","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst ColorPropType = require('ColorPropType');\nconst NativeMethodsMixin = require('NativeMethodsMixin');\nconst PropTypes = require('prop-types');\nconst Platform = require('Platform');\nconst React = require('React');\nconst ReactNativeViewAttributes = require('ReactNativeViewAttributes');\nconst StyleSheet = require('StyleSheet');\nconst Touchable = require('Touchable');\nconst TouchableWithoutFeedback = require('TouchableWithoutFeedback');\nconst View = require('View');\nconst ViewPropTypes = require('ViewPropTypes');\n\nconst createReactClass = require('create-react-class');\nconst ensurePositiveDelayProps = require('ensurePositiveDelayProps');\n\nimport type {PressEvent} from 'CoreEventTypes';\nimport type {Props as TouchableWithoutFeedbackProps} from 'TouchableWithoutFeedback';\nimport type {ViewStyleProp} from 'StyleSheet';\nimport type {ColorValue} from 'StyleSheetTypes';\n\nconst DEFAULT_PROPS = {\n  activeOpacity: 0.85,\n  delayPressOut: 100,\n  underlayColor: 'black',\n};\n\nconst PRESS_RETENTION_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\ntype IOSProps = $ReadOnly<{|\n  hasTVPreferredFocus?: ?boolean,\n  tvParallaxProperties?: ?Object,\n|}>;\n\ntype Props = $ReadOnly<{|\n  ...TouchableWithoutFeedbackProps,\n  ...IOSProps,\n\n  activeOpacity?: ?number,\n  underlayColor?: ?ColorValue,\n  style?: ?ViewStyleProp,\n  onShowUnderlay?: ?Function,\n  onHideUnderlay?: ?Function,\n  testOnly_pressed?: ?boolean,\n|}>;\n\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, which allows\n * the underlay color to show through, darkening or tinting the view.\n *\n * The underlay comes from wrapping the child in a new View, which can affect\n * layout, and sometimes cause unwanted visual artifacts if not used correctly,\n * for example if the backgroundColor of the wrapped view isn't explicitly set\n * to an opaque color.\n *\n * TouchableHighlight must have one child (not zero or more than one).\n * If you wish to have several child components, wrap them in a View.\n *\n * Example:\n *\n * ```\n * renderButton: function() {\n *   return (\n *     <TouchableHighlight onPress={this._onPressButton}>\n *       <Image\n *         style={styles.button}\n *         source={require('./myButton.png')}\n *       />\n *     </TouchableHighlight>\n *   );\n * },\n * ```\n *\n *\n * ### Example\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react'\n * import {\n *   AppRegistry,\n *   StyleSheet,\n *   TouchableHighlight,\n *   Text,\n *   View,\n * } from 'react-native'\n *\n * class App extends Component {\n *   constructor(props) {\n *     super(props)\n *     this.state = { count: 0 }\n *   }\n *\n *   onPress = () => {\n *     this.setState({\n *       count: this.state.count+1\n *     })\n *   }\n *\n *  render() {\n *     return (\n *       <View style={styles.container}>\n *         <TouchableHighlight\n *          style={styles.button}\n *          onPress={this.onPress}\n *         >\n *          <Text> Touch Here </Text>\n *         </TouchableHighlight>\n *         <View style={[styles.countContainer]}>\n *           <Text style={[styles.countText]}>\n *             { this.state.count !== 0 ? this.state.count: null}\n *           </Text>\n *         </View>\n *       </View>\n *     )\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'center',\n *     paddingHorizontal: 10\n *   },\n *   button: {\n *     alignItems: 'center',\n *     backgroundColor: '#DDDDDD',\n *     padding: 10\n *   },\n *   countContainer: {\n *     alignItems: 'center',\n *     padding: 10\n *   },\n *   countText: {\n *     color: '#FF00FF'\n *   }\n * })\n *\n * AppRegistry.registerComponent('App', () => App)\n * ```\n *\n */\n\nconst TouchableHighlight = ((createReactClass({\n  displayName: 'TouchableHighlight',\n  propTypes: {\n    ...TouchableWithoutFeedback.propTypes,\n    /**\n     * Determines what the opacity of the wrapped view should be when touch is\n     * active.\n     */\n    activeOpacity: PropTypes.number,\n    /**\n     * The color of the underlay that will show through when the touch is\n     * active.\n     */\n    underlayColor: ColorPropType,\n    /**\n     * Style to apply to the container/underlay. Most commonly used to make sure\n     * rounded corners match the wrapped component.\n     */\n    style: ViewPropTypes.style,\n    /**\n     * Called immediately after the underlay is shown\n     */\n    onShowUnderlay: PropTypes.func,\n    /**\n     * Called immediately after the underlay is hidden\n     */\n    onHideUnderlay: PropTypes.func,\n    /**\n     * *(Apple TV only)* TV preferred focus (see documentation for the View component).\n     *\n     * @platform ios\n     */\n    hasTVPreferredFocus: PropTypes.bool,\n    /**\n     * *(Apple TV only)* Object with properties to control Apple TV parallax effects.\n     *\n     * enabled: If true, parallax effects are enabled.  Defaults to true.\n     * shiftDistanceX: Defaults to 2.0.\n     * shiftDistanceY: Defaults to 2.0.\n     * tiltAngle: Defaults to 0.05.\n     * magnification: Defaults to 1.0.\n     * pressMagnification: Defaults to 1.0.\n     * pressDuration: Defaults to 0.3.\n     * pressDelay: Defaults to 0.0.\n     *\n     * @platform ios\n     */\n    tvParallaxProperties: PropTypes.object,\n    /**\n     * Handy for snapshot tests.\n     */\n    testOnly_pressed: PropTypes.bool,\n  },\n\n  mixins: [NativeMethodsMixin, Touchable.Mixin],\n\n  getDefaultProps: () => DEFAULT_PROPS,\n\n  getInitialState: function() {\n    this._isMounted = false;\n    if (this.props.testOnly_pressed) {\n      return {\n        ...this.touchableGetInitialState(),\n        extraChildStyle: {\n          opacity: this.props.activeOpacity,\n        },\n        extraUnderlayStyle: {\n          backgroundColor: this.props.underlayColor,\n        },\n      };\n    } else {\n      return {\n        ...this.touchableGetInitialState(),\n        extraChildStyle: null,\n        extraUnderlayStyle: null,\n      };\n    }\n  },\n\n  componentDidMount: function() {\n    this._isMounted = true;\n    ensurePositiveDelayProps(this.props);\n  },\n\n  componentWillUnmount: function() {\n    this._isMounted = false;\n    clearTimeout(this._hideTimeout);\n  },\n\n  UNSAFE_componentWillReceiveProps: function(nextProps) {\n    ensurePositiveDelayProps(nextProps);\n  },\n\n  viewConfig: {\n    uiViewClassName: 'RCTView',\n    validAttributes: ReactNativeViewAttributes.RCTView,\n  },\n\n  /**\n   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are\n   * defined on your component.\n   */\n  touchableHandleActivePressIn: function(e: PressEvent) {\n    clearTimeout(this._hideTimeout);\n    this._hideTimeout = null;\n    this._showUnderlay();\n    this.props.onPressIn && this.props.onPressIn(e);\n  },\n\n  touchableHandleActivePressOut: function(e: PressEvent) {\n    if (!this._hideTimeout) {\n      this._hideUnderlay();\n    }\n    this.props.onPressOut && this.props.onPressOut(e);\n  },\n\n  touchableHandlePress: function(e: PressEvent) {\n    clearTimeout(this._hideTimeout);\n    if (!Platform.isTV) {\n      this._showUnderlay();\n      this._hideTimeout = setTimeout(\n        this._hideUnderlay,\n        this.props.delayPressOut,\n      );\n    }\n    this.props.onPress && this.props.onPress(e);\n  },\n\n  touchableHandleLongPress: function(e: PressEvent) {\n    this.props.onLongPress && this.props.onLongPress(e);\n  },\n\n  touchableGetPressRectOffset: function() {\n    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop: function() {\n    return this.props.hitSlop;\n  },\n\n  touchableGetHighlightDelayMS: function() {\n    return this.props.delayPressIn;\n  },\n\n  touchableGetLongPressDelayMS: function() {\n    return this.props.delayLongPress;\n  },\n\n  touchableGetPressOutDelayMS: function() {\n    return this.props.delayPressOut;\n  },\n\n  _showUnderlay: function() {\n    if (!this._isMounted || !this._hasPressHandler()) {\n      return;\n    }\n    this.setState({\n      extraChildStyle: {\n        opacity: this.props.activeOpacity,\n      },\n      extraUnderlayStyle: {\n        backgroundColor: this.props.underlayColor,\n      },\n    });\n    this.props.onShowUnderlay && this.props.onShowUnderlay();\n  },\n\n  _hideUnderlay: function() {\n    clearTimeout(this._hideTimeout);\n    this._hideTimeout = null;\n    if (this.props.testOnly_pressed) {\n      return;\n    }\n    if (this._hasPressHandler()) {\n      this.setState({\n        extraChildStyle: null,\n        extraUnderlayStyle: null,\n      });\n      this.props.onHideUnderlay && this.props.onHideUnderlay();\n    }\n  },\n\n  _hasPressHandler: function() {\n    return !!(\n      this.props.onPress ||\n      this.props.onPressIn ||\n      this.props.onPressOut ||\n      this.props.onLongPress\n    );\n  },\n\n  render: function() {\n    const child = React.Children.only(this.props.children);\n    return (\n      <View\n        accessible={this.props.accessible !== false}\n        accessibilityLabel={this.props.accessibilityLabel}\n        accessibilityHint={this.props.accessibilityHint}\n        accessibilityRole={this.props.accessibilityRole}\n        accessibilityStates={this.props.accessibilityStates}\n        style={StyleSheet.compose(\n          this.props.style,\n          this.state.extraUnderlayStyle,\n        )}\n        onLayout={this.props.onLayout}\n        hitSlop={this.props.hitSlop}\n        isTVSelectable={true}\n        tvParallaxProperties={this.props.tvParallaxProperties}\n        hasTVPreferredFocus={this.props.hasTVPreferredFocus}\n        onStartShouldSetResponder={this.touchableHandleStartShouldSetResponder}\n        onResponderTerminationRequest={\n          this.touchableHandleResponderTerminationRequest\n        }\n        onResponderGrant={this.touchableHandleResponderGrant}\n        onResponderMove={this.touchableHandleResponderMove}\n        onResponderRelease={this.touchableHandleResponderRelease}\n        onResponderTerminate={this.touchableHandleResponderTerminate}\n        nativeID={this.props.nativeID}\n        testID={this.props.testID}>\n        {React.cloneElement(child, {\n          style: StyleSheet.compose(\n            child.props.style,\n            this.state.extraChildStyle,\n          ),\n        })}\n        {Touchable.renderDebugView({\n          color: 'green',\n          hitSlop: this.props.hitSlop,\n        })}\n      </View>\n    );\n  },\n}): any): React.ComponentType<Props>);\n\nmodule.exports = TouchableHighlight;\n"]}]}
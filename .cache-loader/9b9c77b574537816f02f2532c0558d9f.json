{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/HeapCapture.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/HeapCapture.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var HeapCapture={captureHeap:function captureHeap(path){var error=null;try{global.nativeCaptureHeap(path);console.log('HeapCapture.captureHeap succeeded: '+path);}catch(e){console.log('HeapCapture.captureHeap error: '+e.toString());error=e.toString();}require('NativeModules').JSCHeapCapture.captureComplete(path,error);}};module.exports=HeapCapture;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(HeapCapture,\"HeapCapture\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/HeapCapture.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/HeapCapture.js"],"names":["HeapCapture","captureHeap","path","error","global","nativeCaptureHeap","console","log","e","toString","require","JSCHeapCapture","captureComplete","module","exports"],"mappings":"AAUA,a,0GAEA,GAAMA,CAAAA,WAAW,CAAG,CAClBC,WAAW,CAAE,qBAASC,IAAT,CAAuB,CAClC,GAAIC,CAAAA,KAAK,CAAG,IAAZ,CACA,GAAI,CACFC,MAAM,CAACC,iBAAP,CAAyBH,IAAzB,EACAI,OAAO,CAACC,GAAR,CAAY,sCAAwCL,IAApD,EACD,CAAC,MAAOM,CAAP,CAAU,CACVF,OAAO,CAACC,GAAR,CAAY,kCAAoCC,CAAC,CAACC,QAAF,EAAhD,EACAN,KAAK,CAAGK,CAAC,CAACC,QAAF,EAAR,CACD,CACDC,OAAO,CAAC,eAAD,CAAP,CAAyBC,cAAzB,CAAwCC,eAAxC,CAAwDV,IAAxD,CAA8DC,KAA9D,EACD,CAXiB,CAApB,CAcAU,MAAM,CAACC,OAAP,CAAiBd,WAAjB,C,gLAdMA,W","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst HeapCapture = {\n  captureHeap: function(path: string) {\n    let error = null;\n    try {\n      global.nativeCaptureHeap(path);\n      console.log('HeapCapture.captureHeap succeeded: ' + path);\n    } catch (e) {\n      console.log('HeapCapture.captureHeap error: ' + e.toString());\n      error = e.toString();\n    }\n    require('NativeModules').JSCHeapCapture.captureComplete(path, error);\n  },\n};\n\nmodule.exports = HeapCapture;\n"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/BugReporting/BugReporting.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/BugReporting/BugReporting.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');var Map=require('Map');var infoLog=require('infoLog');function defaultExtras(){BugReporting.addFileSource('react_hierarchy.txt',function(){return require('dumpReactTree')();});}var BugReporting=function(){function BugReporting(){(0,_classCallCheck2.default)(this,BugReporting);}(0,_createClass2.default)(BugReporting,null,[{key:\"_maybeInit\",value:function _maybeInit(){if(!BugReporting._subscription){BugReporting._subscription=RCTDeviceEventEmitter.addListener('collectBugExtraData',BugReporting.collectExtraData,null);defaultExtras();}if(!BugReporting._redboxSubscription){BugReporting._redboxSubscription=RCTDeviceEventEmitter.addListener('collectRedBoxExtraData',BugReporting.collectExtraData,null);}}},{key:\"addSource\",value:function addSource(key,callback){return this._addSource(key,callback,BugReporting._extraSources);}},{key:\"addFileSource\",value:function addFileSource(key,callback){return this._addSource(key,callback,BugReporting._fileSources);}},{key:\"_addSource\",value:function _addSource(key,callback,source){BugReporting._maybeInit();if(source.has(key)){console.warn(\"BugReporting.add* called multiple times for same key '\"+key+\"'\");}source.set(key,callback);return{remove:function remove(){source.delete(key);}};}},{key:\"collectExtraData\",value:function collectExtraData(){var extraData={};for(var _iterator=BugReporting._extraSources,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref3;if(_isArray){if(_i>=_iterator.length)break;_ref3=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref3=_i.value;}var _ref7=_ref3;var _ref2=(0,_slicedToArray2.default)(_ref7,2);var _key3=_ref2[0];var _callback2=_ref2[1];extraData[_key3]=_callback2();}var fileData={};for(var _iterator2=BugReporting._fileSources,_isArray2=Array.isArray(_iterator2),_i2=0,_iterator2=_isArray2?_iterator2:_iterator2[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref6;if(_isArray2){if(_i2>=_iterator2.length)break;_ref6=_iterator2[_i2++];}else{_i2=_iterator2.next();if(_i2.done)break;_ref6=_i2.value;}var _ref8=_ref6;var _ref5=(0,_slicedToArray2.default)(_ref8,2);var _key4=_ref5[0];var _callback3=_ref5[1];fileData[_key4]=_callback3();}infoLog('BugReporting extraData:',extraData);var BugReportingNativeModule=require('NativeModules').BugReporting;BugReportingNativeModule&&BugReportingNativeModule.setExtraData&&BugReportingNativeModule.setExtraData(extraData,fileData);var RedBoxNativeModule=require('NativeModules').RedBox;RedBoxNativeModule&&RedBoxNativeModule.setExtraData&&RedBoxNativeModule.setExtraData(extraData,'From BugReporting.js');return{extras:extraData,files:fileData};}}]);return BugReporting;}();BugReporting._extraSources=new Map();BugReporting._fileSources=new Map();BugReporting._subscription=null;BugReporting._redboxSubscription=null;module.exports=BugReporting;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(defaultExtras,\"defaultExtras\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/BugReporting/BugReporting.js\");reactHotLoader.register(BugReporting,\"BugReporting\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/BugReporting/BugReporting.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/BugReporting/BugReporting.js"],"names":["RCTDeviceEventEmitter","require","Map","infoLog","defaultExtras","BugReporting","addFileSource","_subscription","addListener","collectExtraData","_redboxSubscription","key","callback","_addSource","_extraSources","_fileSources","source","_maybeInit","has","console","warn","set","remove","delete","extraData","fileData","BugReportingNativeModule","setExtraData","RedBoxNativeModule","RedBox","extras","files","module","exports"],"mappings":"AAUA,a,+cAEA,GAAMA,CAAAA,qBAAqB,CAAGC,OAAO,CAAC,uBAAD,CAArC,CACA,GAAMC,CAAAA,GAAG,CAAGD,OAAO,CAAC,KAAD,CAAnB,CACA,GAAME,CAAAA,OAAO,CAAGF,OAAO,CAAC,SAAD,CAAvB,CAQA,QAASG,CAAAA,aAAT,EAAyB,CACvBC,YAAY,CAACC,aAAb,CAA2B,qBAA3B,CAAkD,iBAChDL,CAAAA,OAAO,CAAC,eAAD,CAAP,EADgD,EAAlD,EAGD,C,GAQKI,CAAAA,Y,+KAMgB,CAClB,GAAI,CAACA,YAAY,CAACE,aAAlB,CAAiC,CAC/BF,YAAY,CAACE,aAAb,CAA6BP,qBAAqB,CAACQ,WAAtB,CAC3B,qBAD2B,CAE3BH,YAAY,CAACI,gBAFc,CAG3B,IAH2B,CAA7B,CAKAL,aAAa,GACd,CAED,GAAI,CAACC,YAAY,CAACK,mBAAlB,CAAuC,CACrCL,YAAY,CAACK,mBAAb,CAAmCV,qBAAqB,CAACQ,WAAtB,CACjC,wBADiC,CAEjCH,YAAY,CAACI,gBAFoB,CAGjC,IAHiC,CAAnC,CAKD,CACF,C,4CAWCE,G,CACAC,Q,CACsB,CACtB,MAAO,MAAKC,UAAL,CAAgBF,GAAhB,CAAqBC,QAArB,CAA+BP,YAAY,CAACS,aAA5C,CAAP,CACD,C,oDAWCH,G,CACAC,Q,CACsB,CACtB,MAAO,MAAKC,UAAL,CAAgBF,GAAhB,CAAqBC,QAArB,CAA+BP,YAAY,CAACU,YAA5C,CAAP,CACD,C,8CAGCJ,G,CACAC,Q,CACAI,M,CACsB,CACtBX,YAAY,CAACY,UAAb,GACA,GAAID,MAAM,CAACE,GAAP,CAAWP,GAAX,CAAJ,CAAqB,CACnBQ,OAAO,CAACC,IAAR,0DAC2DT,GAD3D,MAGD,CACDK,MAAM,CAACK,GAAP,CAAWV,GAAX,CAAgBC,QAAhB,EACA,MAAO,CACLU,MAAM,CAAE,iBAAM,CACZN,MAAM,CAACO,MAAP,CAAcZ,GAAd,EACD,CAHI,CAAP,CAKD,C,2DAQoC,CACnC,GAAMa,CAAAA,SAAoB,CAAG,EAA7B,CACA,kBAA8BnB,YAAY,CAACS,aAA3C,4IAA0D,yMAA9CH,CAAAA,KAA8C,aAAzCC,CAAAA,UAAyC,UACxDY,SAAS,CAACb,KAAD,CAAT,CAAiBC,UAAQ,EAAzB,CACD,CACD,GAAMa,CAAAA,QAAmB,CAAG,EAA5B,CACA,mBAA8BpB,YAAY,CAACU,YAA3C,mJAAyD,kNAA7CJ,CAAAA,KAA6C,aAAxCC,CAAAA,UAAwC,UACvDa,QAAQ,CAACd,KAAD,CAAR,CAAgBC,UAAQ,EAAxB,CACD,CACDT,OAAO,CAAC,yBAAD,CAA4BqB,SAA5B,CAAP,CACA,GAAME,CAAAA,wBAAwB,CAAGzB,OAAO,CAAC,eAAD,CAAP,CAAyBI,YAA1D,CACAqB,wBAAwB,EACtBA,wBAAwB,CAACC,YAD3B,EAEED,wBAAwB,CAACC,YAAzB,CAAsCH,SAAtC,CAAiDC,QAAjD,CAFF,CAIA,GAAMG,CAAAA,kBAAkB,CAAG3B,OAAO,CAAC,eAAD,CAAP,CAAyB4B,MAApD,CACAD,kBAAkB,EAChBA,kBAAkB,CAACD,YADrB,EAEEC,kBAAkB,CAACD,YAAnB,CAAgCH,SAAhC,CAA2C,sBAA3C,CAFF,CAIA,MAAO,CAACM,MAAM,CAAEN,SAAT,CAAoBO,KAAK,CAAEN,QAA3B,CAAP,CACD,C,4BArGGpB,Y,CACGS,a,CAA6C,GAAIZ,CAAAA,GAAJ,E,CADhDG,Y,CAEGU,Y,CAA4C,GAAIb,CAAAA,GAAJ,E,CAF/CG,Y,CAGGE,a,CAAsC,I,CAHzCF,Y,CAIGK,mB,CAA4C,I,CAoGrDsB,MAAM,CAACC,OAAP,CAAiB5B,YAAjB,C,gLApHSD,a,wIAYHC,Y","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst RCTDeviceEventEmitter = require('RCTDeviceEventEmitter');\nconst Map = require('Map');\nconst infoLog = require('infoLog');\n\nimport type EmitterSubscription from 'EmitterSubscription';\n\ntype ExtraData = {[key: string]: string};\ntype SourceCallback = () => string;\ntype DebugData = {extras: ExtraData, files: ExtraData};\n\nfunction defaultExtras() {\n  BugReporting.addFileSource('react_hierarchy.txt', () =>\n    require('dumpReactTree')(),\n  );\n}\n\n/**\n * A simple class for collecting bug report data. Components can add sources that will be queried when a bug report\n * is created via `collectExtraData`. For example, a list component might add a source that provides the list of rows\n * that are currently visible on screen. Components should also remember to call `remove()` on the object that is\n * returned by `addSource` when they are unmounted.\n */\nclass BugReporting {\n  static _extraSources: Map<string, SourceCallback> = new Map();\n  static _fileSources: Map<string, SourceCallback> = new Map();\n  static _subscription: ?EmitterSubscription = null;\n  static _redboxSubscription: ?EmitterSubscription = null;\n\n  static _maybeInit() {\n    if (!BugReporting._subscription) {\n      BugReporting._subscription = RCTDeviceEventEmitter.addListener(\n        'collectBugExtraData',\n        BugReporting.collectExtraData,\n        null,\n      );\n      defaultExtras();\n    }\n\n    if (!BugReporting._redboxSubscription) {\n      BugReporting._redboxSubscription = RCTDeviceEventEmitter.addListener(\n        'collectRedBoxExtraData',\n        BugReporting.collectExtraData,\n        null,\n      );\n    }\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addSource(\n    key: string,\n    callback: SourceCallback,\n  ): {remove: () => void} {\n    return this._addSource(key, callback, BugReporting._extraSources);\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addFileSource(\n    key: string,\n    callback: SourceCallback,\n  ): {remove: () => void} {\n    return this._addSource(key, callback, BugReporting._fileSources);\n  }\n\n  static _addSource(\n    key: string,\n    callback: SourceCallback,\n    source: Map<string, SourceCallback>,\n  ): {remove: () => void} {\n    BugReporting._maybeInit();\n    if (source.has(key)) {\n      console.warn(\n        `BugReporting.add* called multiple times for same key '${key}'`,\n      );\n    }\n    source.set(key, callback);\n    return {\n      remove: () => {\n        source.delete(key);\n      },\n    };\n  }\n\n  /**\n   * This can be called from a native bug reporting flow, or from JS code.\n   *\n   * If available, this will call `NativeModules.BugReporting.setExtraData(extraData)`\n   * after collecting `extraData`.\n   */\n  static collectExtraData(): DebugData {\n    const extraData: ExtraData = {};\n    for (const [key, callback] of BugReporting._extraSources) {\n      extraData[key] = callback();\n    }\n    const fileData: ExtraData = {};\n    for (const [key, callback] of BugReporting._fileSources) {\n      fileData[key] = callback();\n    }\n    infoLog('BugReporting extraData:', extraData);\n    const BugReportingNativeModule = require('NativeModules').BugReporting;\n    BugReportingNativeModule &&\n      BugReportingNativeModule.setExtraData &&\n      BugReportingNativeModule.setExtraData(extraData, fileData);\n\n    const RedBoxNativeModule = require('NativeModules').RedBox;\n    RedBoxNativeModule &&\n      RedBoxNativeModule.setExtraData &&\n      RedBoxNativeModule.setExtraData(extraData, 'From BugReporting.js');\n\n    return {extras: extraData, files: fileData};\n  }\n}\n\nmodule.exports = BugReporting;\n"]}]}
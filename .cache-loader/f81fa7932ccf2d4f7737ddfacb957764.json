{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/local-cli/bundle/assetPathUtils.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/local-cli/bundle/assetPathUtils.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();function getAndroidAssetSuffix(scale){switch(scale){case 0.75:return'ldpi';case 1:return'mdpi';case 1.5:return'hdpi';case 2:return'xhdpi';case 3:return'xxhdpi';case 4:return'xxxhdpi';}throw new Error('no such scale');}var drawableFileTypes=new Set(['gif','jpeg','jpg','png','svg','webp','xml']);function getAndroidResourceFolderName(asset,scale){if(!drawableFileTypes.has(asset.type)){return'raw';}var suffix=getAndroidAssetSuffix(scale);if(!suffix){throw new Error(\"Don't know which android drawable suffix to use for asset: \"+JSON.stringify(asset));}var androidFolder='drawable-'+suffix;return androidFolder;}function getAndroidResourceIdentifier(asset){var folderPath=getBasePath(asset);return(folderPath+'/'+asset.name).toLowerCase().replace(/\\//g,'_').replace(/([^a-z0-9_])/g,'').replace(/^assets_/,'');}function getBasePath(asset){var basePath=asset.httpServerLocation;if(basePath[0]==='/'){basePath=basePath.substr(1);}return basePath;}module.exports={getAndroidAssetSuffix:getAndroidAssetSuffix,getAndroidResourceFolderName:getAndroidResourceFolderName,getAndroidResourceIdentifier:getAndroidResourceIdentifier,getBasePath:getBasePath};;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(getAndroidAssetSuffix,\"getAndroidAssetSuffix\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/local-cli/bundle/assetPathUtils.js\");reactHotLoader.register(drawableFileTypes,\"drawableFileTypes\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/local-cli/bundle/assetPathUtils.js\");reactHotLoader.register(getAndroidResourceFolderName,\"getAndroidResourceFolderName\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/local-cli/bundle/assetPathUtils.js\");reactHotLoader.register(getAndroidResourceIdentifier,\"getAndroidResourceIdentifier\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/local-cli/bundle/assetPathUtils.js\");reactHotLoader.register(getBasePath,\"getBasePath\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/local-cli/bundle/assetPathUtils.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/local-cli/bundle/assetPathUtils.js"],"names":["getAndroidAssetSuffix","scale","Error","drawableFileTypes","Set","getAndroidResourceFolderName","asset","has","type","suffix","JSON","stringify","androidFolder","getAndroidResourceIdentifier","folderPath","getBasePath","name","toLowerCase","replace","basePath","httpServerLocation","substr","module","exports"],"mappings":"AAUA,a,0GAQA,QAASA,CAAAA,qBAAT,CAA+BC,KAA/B,CAAsD,CACpD,OAAQA,KAAR,EACE,IAAK,KAAL,CACE,MAAO,MAAP,CACF,IAAK,EAAL,CACE,MAAO,MAAP,CACF,IAAK,IAAL,CACE,MAAO,MAAP,CACF,IAAK,EAAL,CACE,MAAO,OAAP,CACF,IAAK,EAAL,CACE,MAAO,QAAP,CACF,IAAK,EAAL,CACE,MAAO,SAAP,CAZJ,CAcA,KAAM,IAAIC,CAAAA,KAAJ,CAAU,eAAV,CAAN,CACD,CAGD,GAAMC,CAAAA,iBAAiB,CAAG,GAAIC,CAAAA,GAAJ,CAAQ,CAChC,KADgC,CAEhC,MAFgC,CAGhC,KAHgC,CAIhC,KAJgC,CAKhC,KALgC,CAMhC,MANgC,CAOhC,KAPgC,CAAR,CAA1B,CAUA,QAASC,CAAAA,4BAAT,CAAsCC,KAAtC,CAA4DL,KAA5D,CAA2E,CACzE,GAAI,CAACE,iBAAiB,CAACI,GAAlB,CAAsBD,KAAK,CAACE,IAA5B,CAAL,CAAwC,CACtC,MAAO,KAAP,CACD,CACD,GAAIC,CAAAA,MAAM,CAAGT,qBAAqB,CAACC,KAAD,CAAlC,CACA,GAAI,CAACQ,MAAL,CAAa,CACX,KAAM,IAAIP,CAAAA,KAAJ,CACJ,8DACEQ,IAAI,CAACC,SAAL,CAAeL,KAAf,CAFE,CAAN,CAID,CACD,GAAMM,CAAAA,aAAa,CAAG,YAAcH,MAApC,CACA,MAAOG,CAAAA,aAAP,CACD,CAED,QAASC,CAAAA,4BAAT,CAAsCP,KAAtC,CAA4D,CAC1D,GAAIQ,CAAAA,UAAU,CAAGC,WAAW,CAACT,KAAD,CAA5B,CACA,MAAO,CAACQ,UAAU,CAAG,GAAb,CAAmBR,KAAK,CAACU,IAA1B,EACJC,WADI,GAEJC,OAFI,CAEI,KAFJ,CAEW,GAFX,EAGJA,OAHI,CAGI,eAHJ,CAGqB,EAHrB,EAIJA,OAJI,CAII,UAJJ,CAIgB,EAJhB,CAAP,CAKD,CAED,QAASH,CAAAA,WAAT,CAAqBT,KAArB,CAA2C,CACzC,GAAIa,CAAAA,QAAQ,CAAGb,KAAK,CAACc,kBAArB,CACA,GAAID,QAAQ,CAAC,CAAD,CAAR,GAAgB,GAApB,CAAyB,CACvBA,QAAQ,CAAGA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,CAAX,CACD,CACD,MAAOF,CAAAA,QAAP,CACD,CAEDG,MAAM,CAACC,OAAP,CAAiB,CACfvB,qBAAqB,CAAEA,qBADR,CAEfK,4BAA4B,CAAEA,4BAFf,CAGfQ,4BAA4B,CAAEA,4BAHf,CAIfE,WAAW,CAAEA,WAJE,CAAjB,C,gLA7DSf,qB,4IAmBHG,iB,wIAUGE,4B,mJAeAQ,4B,mJASAE,W","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nimport type {PackagerAsset} from '../../Libraries/Image/AssetRegistry';\n\n/**\n * FIXME: using number to represent discrete scale numbers is fragile in essence because of\n * floating point numbers imprecision.\n */\nfunction getAndroidAssetSuffix(scale: number): string {\n  switch (scale) {\n    case 0.75:\n      return 'ldpi';\n    case 1:\n      return 'mdpi';\n    case 1.5:\n      return 'hdpi';\n    case 2:\n      return 'xhdpi';\n    case 3:\n      return 'xxhdpi';\n    case 4:\n      return 'xxxhdpi';\n  }\n  throw new Error('no such scale');\n}\n\n// See https://developer.android.com/guide/topics/resources/drawable-resource.html\nconst drawableFileTypes = new Set([\n  'gif',\n  'jpeg',\n  'jpg',\n  'png',\n  'svg',\n  'webp',\n  'xml',\n]);\n\nfunction getAndroidResourceFolderName(asset: PackagerAsset, scale: number) {\n  if (!drawableFileTypes.has(asset.type)) {\n    return 'raw';\n  }\n  var suffix = getAndroidAssetSuffix(scale);\n  if (!suffix) {\n    throw new Error(\n      \"Don't know which android drawable suffix to use for asset: \" +\n        JSON.stringify(asset),\n    );\n  }\n  const androidFolder = 'drawable-' + suffix;\n  return androidFolder;\n}\n\nfunction getAndroidResourceIdentifier(asset: PackagerAsset) {\n  var folderPath = getBasePath(asset);\n  return (folderPath + '/' + asset.name)\n    .toLowerCase()\n    .replace(/\\//g, '_') // Encode folder structure in file name\n    .replace(/([^a-z0-9_])/g, '') // Remove illegal chars\n    .replace(/^assets_/, ''); // Remove \"assets_\" prefix\n}\n\nfunction getBasePath(asset: PackagerAsset) {\n  var basePath = asset.httpServerLocation;\n  if (basePath[0] === '/') {\n    basePath = basePath.substr(1);\n  }\n  return basePath;\n}\n\nmodule.exports = {\n  getAndroidAssetSuffix: getAndroidAssetSuffix,\n  getAndroidResourceFolderName: getAndroidResourceFolderName,\n  getAndroidResourceIdentifier: getAndroidResourceIdentifier,\n  getBasePath: getBasePath,\n};\n"]}]}
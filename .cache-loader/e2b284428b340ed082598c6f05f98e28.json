{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Inspector/InspectorPanel.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Inspector/InspectorPanel.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _jsxFileName=\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Inspector/InspectorPanel.js\";(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var ElementProperties=require('ElementProperties');var NetworkOverlay=require('NetworkOverlay');var PerformanceOverlay=require('PerformanceOverlay');var React=require('React');var PropTypes=require('prop-types');var ScrollView=require('ScrollView');var StyleSheet=require('StyleSheet');var Text=require('Text');var TouchableHighlight=require('TouchableHighlight');var View=require('View');var InspectorPanel=function(_React$Component){(0,_inherits2.default)(InspectorPanel,_React$Component);function InspectorPanel(){(0,_classCallCheck2.default)(this,InspectorPanel);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(InspectorPanel).apply(this,arguments));}(0,_createClass2.default)(InspectorPanel,[{key:\"renderWaiting\",value:function renderWaiting(){if(this.props.inspecting){return React.createElement(Text,{style:styles.waitingText,__source:{fileName:_jsxFileName,lineNumber:28}},\"Tap something to inspect it\");}return React.createElement(Text,{style:styles.waitingText,__source:{fileName:_jsxFileName,lineNumber:31}},\"Nothing is inspected\");}},{key:\"render\",value:function render(){var contents;if(this.props.inspected){contents=React.createElement(ScrollView,{style:styles.properties,__source:{fileName:_jsxFileName,lineNumber:38}},React.createElement(ElementProperties,{style:this.props.inspected.style,frame:this.props.inspected.frame,source:this.props.inspected.source,hierarchy:this.props.hierarchy,selection:this.props.selection,setSelection:this.props.setSelection,__source:{fileName:_jsxFileName,lineNumber:39}}));}else if(this.props.perfing){contents=React.createElement(PerformanceOverlay,{__source:{fileName:_jsxFileName,lineNumber:50}});}else if(this.props.networking){contents=React.createElement(NetworkOverlay,{__source:{fileName:_jsxFileName,lineNumber:52}});}else{contents=React.createElement(View,{style:styles.waiting,__source:{fileName:_jsxFileName,lineNumber:54}},this.renderWaiting());}return React.createElement(View,{style:styles.container,__source:{fileName:_jsxFileName,lineNumber:57}},!this.props.devtoolsIsOpen&&contents,React.createElement(View,{style:styles.buttonRow,__source:{fileName:_jsxFileName,lineNumber:59}},React.createElement(Button,{title:'Inspect',pressed:this.props.inspecting,onClick:this.props.setInspecting,__source:{fileName:_jsxFileName,lineNumber:60}}),React.createElement(Button,{title:'Perf',pressed:this.props.perfing,onClick:this.props.setPerfing,__source:{fileName:_jsxFileName,lineNumber:65}}),React.createElement(Button,{title:'Network',pressed:this.props.networking,onClick:this.props.setNetworking,__source:{fileName:_jsxFileName,lineNumber:70}}),React.createElement(Button,{title:'Touchables',pressed:this.props.touchTargeting,onClick:this.props.setTouchTargeting,__source:{fileName:_jsxFileName,lineNumber:75}})));}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return InspectorPanel;}(React.Component);InspectorPanel.propTypes={devtoolsIsOpen:PropTypes.bool,inspecting:PropTypes.bool,setInspecting:PropTypes.func,inspected:PropTypes.object,perfing:PropTypes.bool,setPerfing:PropTypes.func,touchTargeting:PropTypes.bool,setTouchTargeting:PropTypes.func,networking:PropTypes.bool,setNetworking:PropTypes.func};var Button=function(_React$Component2){(0,_inherits2.default)(Button,_React$Component2);function Button(){(0,_classCallCheck2.default)(this,Button);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(Button).apply(this,arguments));}(0,_createClass2.default)(Button,[{key:\"render\",value:function render(){var _this=this;return React.createElement(TouchableHighlight,{onPress:function onPress(){return _this.props.onClick(!_this.props.pressed);},style:[styles.button,this.props.pressed&&styles.buttonPressed],__source:{fileName:_jsxFileName,lineNumber:102}},React.createElement(Text,{style:styles.buttonText,__source:{fileName:_jsxFileName,lineNumber:105}},this.props.title));}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return Button;}(React.Component);var styles=StyleSheet.create({buttonRow:{flexDirection:'row'},button:{backgroundColor:'rgba(0, 0, 0, 0.3)',margin:2,height:30,justifyContent:'center',alignItems:'center'},buttonPressed:{backgroundColor:'rgba(255, 255, 255, 0.3)'},buttonText:{textAlign:'center',color:'white',margin:5},container:{backgroundColor:'rgba(0, 0, 0, 0.7)'},properties:{height:200},waiting:{height:100},waitingText:{fontSize:20,textAlign:'center',marginVertical:20,color:'white'}});module.exports=InspectorPanel;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(InspectorPanel,\"InspectorPanel\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Inspector/InspectorPanel.js\");reactHotLoader.register(Button,\"Button\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Inspector/InspectorPanel.js\");reactHotLoader.register(styles,\"styles\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Inspector/InspectorPanel.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Inspector/InspectorPanel.js"],"names":["ElementProperties","require","NetworkOverlay","PerformanceOverlay","React","PropTypes","ScrollView","StyleSheet","Text","TouchableHighlight","View","InspectorPanel","props","inspecting","styles","waitingText","contents","inspected","properties","style","frame","source","hierarchy","selection","setSelection","perfing","networking","waiting","renderWaiting","container","devtoolsIsOpen","buttonRow","setInspecting","setPerfing","setNetworking","touchTargeting","setTouchTargeting","Component","propTypes","bool","func","object","Button","onClick","pressed","button","buttonPressed","buttonText","title","create","flexDirection","backgroundColor","margin","height","justifyContent","alignItems","textAlign","color","fontSize","marginVertical","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst ElementProperties = require('ElementProperties');\nconst NetworkOverlay = require('NetworkOverlay');\nconst PerformanceOverlay = require('PerformanceOverlay');\nconst React = require('React');\nconst PropTypes = require('prop-types');\nconst ScrollView = require('ScrollView');\nconst StyleSheet = require('StyleSheet');\nconst Text = require('Text');\nconst TouchableHighlight = require('TouchableHighlight');\nconst View = require('View');\n\nclass InspectorPanel extends React.Component<$FlowFixMeProps> {\n  renderWaiting() {\n    if (this.props.inspecting) {\n      return (\n        <Text style={styles.waitingText}>Tap something to inspect it</Text>\n      );\n    }\n    return <Text style={styles.waitingText}>Nothing is inspected</Text>;\n  }\n\n  render() {\n    let contents;\n    if (this.props.inspected) {\n      contents = (\n        <ScrollView style={styles.properties}>\n          <ElementProperties\n            style={this.props.inspected.style}\n            frame={this.props.inspected.frame}\n            source={this.props.inspected.source}\n            hierarchy={this.props.hierarchy}\n            selection={this.props.selection}\n            setSelection={this.props.setSelection}\n          />\n        </ScrollView>\n      );\n    } else if (this.props.perfing) {\n      contents = <PerformanceOverlay />;\n    } else if (this.props.networking) {\n      contents = <NetworkOverlay />;\n    } else {\n      contents = <View style={styles.waiting}>{this.renderWaiting()}</View>;\n    }\n    return (\n      <View style={styles.container}>\n        {!this.props.devtoolsIsOpen && contents}\n        <View style={styles.buttonRow}>\n          <Button\n            title={'Inspect'}\n            pressed={this.props.inspecting}\n            onClick={this.props.setInspecting}\n          />\n          <Button\n            title={'Perf'}\n            pressed={this.props.perfing}\n            onClick={this.props.setPerfing}\n          />\n          <Button\n            title={'Network'}\n            pressed={this.props.networking}\n            onClick={this.props.setNetworking}\n          />\n          <Button\n            title={'Touchables'}\n            pressed={this.props.touchTargeting}\n            onClick={this.props.setTouchTargeting}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nInspectorPanel.propTypes = {\n  devtoolsIsOpen: PropTypes.bool,\n  inspecting: PropTypes.bool,\n  setInspecting: PropTypes.func,\n  inspected: PropTypes.object,\n  perfing: PropTypes.bool,\n  setPerfing: PropTypes.func,\n  touchTargeting: PropTypes.bool,\n  setTouchTargeting: PropTypes.func,\n  networking: PropTypes.bool,\n  setNetworking: PropTypes.func,\n};\n\nclass Button extends React.Component<$FlowFixMeProps> {\n  render() {\n    return (\n      <TouchableHighlight\n        onPress={() => this.props.onClick(!this.props.pressed)}\n        style={[styles.button, this.props.pressed && styles.buttonPressed]}>\n        <Text style={styles.buttonText}>{this.props.title}</Text>\n      </TouchableHighlight>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  buttonRow: {\n    flexDirection: 'row',\n  },\n  button: {\n    backgroundColor: 'rgba(0, 0, 0, 0.3)',\n    margin: 2,\n    height: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonPressed: {\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\n  },\n  buttonText: {\n    textAlign: 'center',\n    color: 'white',\n    margin: 5,\n  },\n  container: {\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n  },\n  properties: {\n    height: 200,\n  },\n  waiting: {\n    height: 100,\n  },\n  waitingText: {\n    fontSize: 20,\n    textAlign: 'center',\n    marginVertical: 20,\n    color: 'white',\n  },\n});\n\nmodule.exports = InspectorPanel;\n"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/ColorPropType.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/ColorPropType.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var normalizeColor=require('normalizeColor');var colorPropType=function colorPropType(isRequired,props,propName,componentName,location,propFullName){var color=props[propName];if(color===undefined||color===null){if(isRequired){return new Error('Required '+location+' `'+(propFullName||propName)+'` was not specified in `'+componentName+'`.');}return;}if(typeof color==='number'){return;}if(normalizeColor(color)===null){return new Error('Invalid '+location+' `'+(propFullName||propName)+'` supplied to `'+componentName+'`: '+color+'\\n'+\"Valid color formats are\\n  - '#f0f' (#rgb)\\n  - '#f0fc' (#rgba)\\n  - '#ff00ff' (#rrggbb)\\n  - '#ff00ff00' (#rrggbbaa)\\n  - 'rgb(255, 255, 255)'\\n  - 'rgba(255, 255, 255, 1.0)'\\n  - 'hsl(360, 100%, 100%)'\\n  - 'hsla(360, 100%, 100%, 1.0)'\\n  - 'transparent'\\n  - 'red'\\n  - 0xff00ff00 (0xrrggbbaa)\\n\");}};var ColorPropType=colorPropType.bind(null,false);ColorPropType.isRequired=colorPropType.bind(null,true);module.exports=ColorPropType;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(colorPropType,\"colorPropType\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/ColorPropType.js\");reactHotLoader.register(ColorPropType,\"ColorPropType\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/ColorPropType.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/ColorPropType.js"],"names":["normalizeColor","require","colorPropType","isRequired","props","propName","componentName","location","propFullName","color","undefined","Error","ColorPropType","bind","module","exports"],"mappings":"AASA,a,0GAEA,GAAMA,CAAAA,cAAc,CAAGC,OAAO,CAAC,gBAAD,CAA9B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CACpBC,UADoB,CAEpBC,KAFoB,CAGpBC,QAHoB,CAIpBC,aAJoB,CAKpBC,QALoB,CAMpBC,YANoB,CAOpB,CACA,GAAMC,CAAAA,KAAK,CAAGL,KAAK,CAACC,QAAD,CAAnB,CACA,GAAII,KAAK,GAAKC,SAAV,EAAuBD,KAAK,GAAK,IAArC,CAA2C,CACzC,GAAIN,UAAJ,CAAgB,CACd,MAAO,IAAIQ,CAAAA,KAAJ,CACL,YACEJ,QADF,CAEE,IAFF,EAGGC,YAAY,EAAIH,QAHnB,EAIE,0BAJF,CAKEC,aALF,CAME,IAPG,CAAP,CASD,CACD,OACD,CAED,GAAI,MAAOG,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAI7B,OACD,CAED,GAAIT,cAAc,CAACS,KAAD,CAAd,GAA0B,IAA9B,CAAoC,CAClC,MAAO,IAAIE,CAAAA,KAAJ,CACL,WACEJ,QADF,CAEE,IAFF,EAGGC,YAAY,EAAIH,QAHnB,EAIE,iBAJF,CAKEC,aALF,CAME,KANF,CAOEG,KAPF,CAQE,IARF,6SADK,CAAP,CAwBD,CACF,CAzDD,CA2DA,GAAMG,CAAAA,aAAa,CAAGV,aAAa,CAACW,IAAd,CAAmB,IAAnB,CAAyB,KAAzB,CAAtB,CACAD,aAAa,CAACT,UAAd,CAA2BD,aAAa,CAACW,IAAd,CAAmB,IAAnB,CAAyB,IAAzB,CAA3B,CAEAC,MAAM,CAACC,OAAP,CAAiBH,aAAjB,C,gLA9DMV,a,uIA2DAU,a","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst normalizeColor = require('normalizeColor');\n\nconst colorPropType = function(\n  isRequired,\n  props,\n  propName,\n  componentName,\n  location,\n  propFullName,\n) {\n  const color = props[propName];\n  if (color === undefined || color === null) {\n    if (isRequired) {\n      return new Error(\n        'Required ' +\n          location +\n          ' `' +\n          (propFullName || propName) +\n          '` was not specified in `' +\n          componentName +\n          '`.',\n      );\n    }\n    return;\n  }\n\n  if (typeof color === 'number') {\n    // Developers should not use a number, but we are using the prop type\n    // both for user provided colors and for transformed ones. This isn't ideal\n    // and should be fixed but will do for now...\n    return;\n  }\n\n  if (normalizeColor(color) === null) {\n    return new Error(\n      'Invalid ' +\n        location +\n        ' `' +\n        (propFullName || propName) +\n        '` supplied to `' +\n        componentName +\n        '`: ' +\n        color +\n        '\\n' +\n        `Valid color formats are\n  - '#f0f' (#rgb)\n  - '#f0fc' (#rgba)\n  - '#ff00ff' (#rrggbb)\n  - '#ff00ff00' (#rrggbbaa)\n  - 'rgb(255, 255, 255)'\n  - 'rgba(255, 255, 255, 1.0)'\n  - 'hsl(360, 100%, 100%)'\n  - 'hsla(360, 100%, 100%, 1.0)'\n  - 'transparent'\n  - 'red'\n  - 0xff00ff00 (0xrrggbbaa)\n`,\n    );\n  }\n};\n\nconst ColorPropType = colorPropType.bind(null, false /* isRequired */);\nColorPropType.isRequired = colorPropType.bind(null, true /* isRequired */);\n\nmodule.exports = ColorPropType;\n"]}]}
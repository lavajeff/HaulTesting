{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf3=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _jsxFileName=\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\";(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var ActivityIndicator=require('ActivityIndicator');var EdgeInsetsPropType=require('EdgeInsetsPropType');var Linking=require('Linking');var PropTypes=require('prop-types');var React=require('React');var ReactNative=require('ReactNative');var ScrollView=require('ScrollView');var StyleSheet=require('StyleSheet');var Text=require('Text');var UIManager=require('UIManager');var View=require('View');var ViewPropTypes=require('ViewPropTypes');var WebViewShared=require('WebViewShared');var deprecatedPropType=require('deprecatedPropType');var invariant=require('fbjs/lib/invariant');var keyMirror=require('fbjs/lib/keyMirror');var processDecelerationRate=require('processDecelerationRate');var requireNativeComponent=require('requireNativeComponent');var resolveAssetSource=require('resolveAssetSource');var RCTWebViewManager=require('NativeModules').WebViewManager;var RCTWKWebViewManager=require('NativeModules').WKWebViewManager;var BGWASH='rgba(255,255,255,0.8)';var RCT_WEBVIEW_REF='webview';var WebViewState=keyMirror({IDLE:null,LOADING:null,ERROR:null});var NavigationType=keyMirror({click:true,formsubmit:true,backforward:true,reload:true,formresubmit:true,other:true});var JSNavigationScheme='react-js-navigation';var DataDetectorTypes=['phoneNumber','link','address','calendarEvent','trackingNumber','flightNumber','lookupSuggestion','none','all'];var defaultRenderLoading=function defaultRenderLoading(){return React.createElement(View,{style:styles.loadingView,__source:{fileName:_jsxFileName,lineNumber:78}},React.createElement(ActivityIndicator,{__source:{fileName:_jsxFileName,lineNumber:79}}));};var defaultRenderError=function defaultRenderError(errorDomain,errorCode,errorDesc){return React.createElement(View,{style:styles.errorContainer,__source:{fileName:_jsxFileName,lineNumber:83}},React.createElement(Text,{style:styles.errorTextTitle,__source:{fileName:_jsxFileName,lineNumber:84}},\"Error loading page\"),React.createElement(Text,{style:styles.errorText,__source:{fileName:_jsxFileName,lineNumber:85}},'Domain: '+errorDomain),React.createElement(Text,{style:styles.errorText,__source:{fileName:_jsxFileName,lineNumber:86}},'Error Code: '+errorCode),React.createElement(Text,{style:styles.errorText,__source:{fileName:_jsxFileName,lineNumber:87}},'Description: '+errorDesc));};var WebView=function(_React$Component){(0,_inherits2.default)(WebView,_React$Component);function WebView(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,WebView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf3.default)(WebView)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={viewState:WebViewState.IDLE,lastErrorEvent:null,startInLoadingState:true};_this.goForward=function(){UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(),_this._getCommands().goForward,null);};_this.goBack=function(){UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(),_this._getCommands().goBack,null);};_this.reload=function(){_this.setState({viewState:WebViewState.LOADING});UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(),_this._getCommands().reload,null);};_this.stopLoading=function(){UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(),_this._getCommands().stopLoading,null);};_this.postMessage=function(data){UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(),_this._getCommands().postMessage,[String(data)]);};_this.injectJavaScript=function(data){UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(),_this._getCommands().injectJavaScript,[data]);};_this._updateNavigationState=function(event){if(_this.props.onNavigationStateChange){_this.props.onNavigationStateChange(event.nativeEvent);}};_this.getWebViewHandle=function(){return ReactNative.findNodeHandle(_this.refs[RCT_WEBVIEW_REF]);};_this._onLoadingStart=function(event){var onLoadStart=_this.props.onLoadStart;onLoadStart&&onLoadStart(event);_this._updateNavigationState(event);};_this._onLoadingError=function(event){event.persist();var _this$props=_this.props,onError=_this$props.onError,onLoadEnd=_this$props.onLoadEnd;onError&&onError(event);onLoadEnd&&onLoadEnd(event);console.warn('Encountered an error loading page',event.nativeEvent);_this.setState({lastErrorEvent:event.nativeEvent,viewState:WebViewState.ERROR});};_this._onLoadingFinish=function(event){var _this$props2=_this.props,onLoad=_this$props2.onLoad,onLoadEnd=_this$props2.onLoadEnd;onLoad&&onLoad(event);onLoadEnd&&onLoadEnd(event);_this.setState({viewState:WebViewState.IDLE});_this._updateNavigationState(event);};_this._onMessage=function(event){var onMessage=_this.props.onMessage;onMessage&&onMessage(event);};return _this;}(0,_createClass2.default)(WebView,[{key:\"UNSAFE_componentWillMount\",value:function UNSAFE_componentWillMount(){if(this.props.startInLoadingState){this.setState({viewState:WebViewState.LOADING});}if(this.props.useWebKit===true&&this.props.scalesPageToFit!==undefined){console.warn('The scalesPageToFit property is not supported when useWebKit = true');}}},{key:\"render\",value:function render(){var _this2=this;var otherView=null;var scalesPageToFit;if(this.props.useWebKit){scalesPageToFit=this.props.scalesPageToFit;}else{var _this$props$scalesPag=this.props.scalesPageToFit;scalesPageToFit=_this$props$scalesPag===void 0?true:_this$props$scalesPag;}if(this.state.viewState===WebViewState.LOADING){otherView=(this.props.renderLoading||defaultRenderLoading)();}else if(this.state.viewState===WebViewState.ERROR){var errorEvent=this.state.lastErrorEvent;invariant(errorEvent!=null,'lastErrorEvent expected to be non-null');otherView=(this.props.renderError||defaultRenderError)(errorEvent.domain,errorEvent.code,errorEvent.description);}else if(this.state.viewState!==WebViewState.IDLE){console.error('RCTWebView invalid state encountered: '+this.state.loading);}var webViewStyles=[styles.container,styles.webView,this.props.style];if(this.state.viewState===WebViewState.LOADING||this.state.viewState===WebViewState.ERROR){webViewStyles.push(styles.hidden);}var nativeConfig=this.props.nativeConfig||{};var viewManager=nativeConfig.viewManager;if(this.props.useWebKit){viewManager=viewManager||RCTWKWebViewManager;}else{viewManager=viewManager||RCTWebViewManager;}var compiledWhitelist=['about:blank'].concat((0,_toConsumableArray2.default)(this.props.originWhitelist||[])).map(WebViewShared.originWhitelistToRegex);var onShouldStartLoadWithRequest=function onShouldStartLoadWithRequest(event){var shouldStart=true;var url=event.nativeEvent.url;var origin=WebViewShared.extractOrigin(url);var passesWhitelist=compiledWhitelist.some(function(x){return new RegExp(x).test(origin);});shouldStart=shouldStart&&passesWhitelist;if(!passesWhitelist){Linking.openURL(url);}if(_this2.props.onShouldStartLoadWithRequest){shouldStart=shouldStart&&_this2.props.onShouldStartLoadWithRequest(event.nativeEvent);}viewManager.startLoadWithResult(!!shouldStart,event.nativeEvent.lockIdentifier);};var decelerationRate=processDecelerationRate(this.props.decelerationRate);var source=this.props.source||{};if(this.props.html){source.html=this.props.html;}else if(this.props.url){source.uri=this.props.url;}var messagingEnabled=typeof this.props.onMessage==='function';var NativeWebView=nativeConfig.component;if(this.props.useWebKit){NativeWebView=NativeWebView||RCTWKWebView;}else{NativeWebView=NativeWebView||RCTWebView;}var webView=React.createElement(NativeWebView,(0,_extends2.default)({ref:RCT_WEBVIEW_REF,key:\"webViewKey\",style:webViewStyles,source:resolveAssetSource(source),injectedJavaScript:this.props.injectedJavaScript,bounces:this.props.bounces,scrollEnabled:this.props.scrollEnabled,decelerationRate:decelerationRate,contentInset:this.props.contentInset,automaticallyAdjustContentInsets:this.props.automaticallyAdjustContentInsets,onLoadingStart:this._onLoadingStart,onLoadingFinish:this._onLoadingFinish,onLoadingError:this._onLoadingError,messagingEnabled:messagingEnabled,onMessage:this._onMessage,onShouldStartLoadWithRequest:onShouldStartLoadWithRequest,scalesPageToFit:scalesPageToFit,allowsInlineMediaPlayback:this.props.allowsInlineMediaPlayback,mediaPlaybackRequiresUserAction:this.props.mediaPlaybackRequiresUserAction,dataDetectorTypes:this.props.dataDetectorTypes},nativeConfig.props,{__source:{fileName:_jsxFileName,lineNumber:525}}));return React.createElement(View,{style:styles.container,__source:{fileName:_jsxFileName,lineNumber:555}},webView,otherView);}},{key:\"_getCommands\",value:function _getCommands(){if(!this.props.useWebKit){return UIManager.RCTWebView.Commands;}return UIManager.RCTWKWebView.Commands;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(!(prevProps.useWebKit&&this.props.useWebKit)){return;}this._showRedboxOnPropChanges(prevProps,'allowsInlineMediaPlayback');this._showRedboxOnPropChanges(prevProps,'mediaPlaybackRequiresUserAction');this._showRedboxOnPropChanges(prevProps,'dataDetectorTypes');if(this.props.scalesPageToFit!==undefined){console.warn('The scalesPageToFit property is not supported when useWebKit = true');}}},{key:\"_showRedboxOnPropChanges\",value:function _showRedboxOnPropChanges(prevProps,propName){if(this.props[propName]!==prevProps[propName]){console.error(\"Changes to property \"+propName+\" do nothing after the initial render.\");}}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return WebView;}(React.Component);WebView.JSNavigationScheme=JSNavigationScheme;WebView.NavigationType=NavigationType;WebView.propTypes=(0,_objectSpread2.default)({},ViewPropTypes,{html:deprecatedPropType(PropTypes.string,'Use the `source` prop instead.'),url:deprecatedPropType(PropTypes.string,'Use the `source` prop instead.'),source:PropTypes.oneOfType([PropTypes.shape({uri:PropTypes.string,method:PropTypes.string,headers:PropTypes.object,body:PropTypes.string}),PropTypes.shape({html:PropTypes.string,baseUrl:PropTypes.string}),PropTypes.number]),useWebKit:PropTypes.bool,renderError:PropTypes.func,renderLoading:PropTypes.func,onLoad:PropTypes.func,onLoadEnd:PropTypes.func,onLoadStart:PropTypes.func,onError:PropTypes.func,bounces:PropTypes.bool,decelerationRate:PropTypes.oneOfType([PropTypes.oneOf(['fast','normal']),PropTypes.number]),scrollEnabled:PropTypes.bool,automaticallyAdjustContentInsets:PropTypes.bool,contentInset:EdgeInsetsPropType,onNavigationStateChange:PropTypes.func,onMessage:PropTypes.func,startInLoadingState:PropTypes.bool,style:ViewPropTypes.style,dataDetectorTypes:PropTypes.oneOfType([PropTypes.oneOf(DataDetectorTypes),PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes))]),javaScriptEnabled:PropTypes.bool,thirdPartyCookiesEnabled:PropTypes.bool,domStorageEnabled:PropTypes.bool,injectedJavaScript:PropTypes.string,userAgent:PropTypes.string,scalesPageToFit:PropTypes.bool,onShouldStartLoadWithRequest:PropTypes.func,allowsInlineMediaPlayback:PropTypes.bool,mediaPlaybackRequiresUserAction:PropTypes.bool,originWhitelist:PropTypes.arrayOf(PropTypes.string),injectJavaScript:PropTypes.func,mixedContentMode:PropTypes.oneOf(['never','always','compatibility']),nativeConfig:PropTypes.shape({component:PropTypes.any,props:PropTypes.object,viewManager:PropTypes.object})});WebView.defaultProps={originWhitelist:WebViewShared.defaultOriginWhitelist};var RCTWebView=requireNativeComponent('RCTWebView',WebView,WebView.extraNativeComponentConfig);var RCTWKWebView=requireNativeComponent('RCTWKWebView',WebView,WebView.extraNativeComponentConfig);var styles=StyleSheet.create({container:{flex:1},errorContainer:{flex:1,justifyContent:'center',alignItems:'center',backgroundColor:BGWASH},errorText:{fontSize:14,textAlign:'center',marginBottom:2},errorTextTitle:{fontSize:15,fontWeight:'500',marginBottom:10},hidden:{height:0,flex:0},loadingView:{backgroundColor:BGWASH,flex:1,justifyContent:'center',alignItems:'center',height:100},webView:{backgroundColor:'#ffffff'}});module.exports=WebView;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(RCTWebViewManager,\"RCTWebViewManager\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\");reactHotLoader.register(RCTWKWebViewManager,\"RCTWKWebViewManager\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\");reactHotLoader.register(BGWASH,\"BGWASH\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\");reactHotLoader.register(RCT_WEBVIEW_REF,\"RCT_WEBVIEW_REF\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\");reactHotLoader.register(WebViewState,\"WebViewState\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\");reactHotLoader.register(NavigationType,\"NavigationType\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\");reactHotLoader.register(JSNavigationScheme,\"JSNavigationScheme\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\");reactHotLoader.register(DataDetectorTypes,\"DataDetectorTypes\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\");reactHotLoader.register(defaultRenderLoading,\"defaultRenderLoading\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\");reactHotLoader.register(defaultRenderError,\"defaultRenderError\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\");reactHotLoader.register(WebView,\"WebView\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\");reactHotLoader.register(RCTWebView,\"RCTWebView\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\");reactHotLoader.register(RCTWKWebView,\"RCTWKWebView\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\");reactHotLoader.register(styles,\"styles\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js"],"names":["ActivityIndicator","require","EdgeInsetsPropType","Linking","PropTypes","React","ReactNative","ScrollView","StyleSheet","Text","UIManager","View","ViewPropTypes","WebViewShared","deprecatedPropType","invariant","keyMirror","processDecelerationRate","requireNativeComponent","resolveAssetSource","RCTWebViewManager","WebViewManager","RCTWKWebViewManager","WKWebViewManager","BGWASH","RCT_WEBVIEW_REF","WebViewState","IDLE","LOADING","ERROR","NavigationType","click","formsubmit","backforward","reload","formresubmit","other","JSNavigationScheme","DataDetectorTypes","defaultRenderLoading","styles","loadingView","defaultRenderError","errorDomain","errorCode","errorDesc","errorContainer","errorTextTitle","errorText","WebView","state","viewState","lastErrorEvent","startInLoadingState","goForward","dispatchViewManagerCommand","getWebViewHandle","_getCommands","goBack","setState","stopLoading","postMessage","data","String","injectJavaScript","_updateNavigationState","event","props","onNavigationStateChange","nativeEvent","findNodeHandle","refs","_onLoadingStart","onLoadStart","_onLoadingError","persist","onError","onLoadEnd","console","warn","_onLoadingFinish","onLoad","_onMessage","onMessage","useWebKit","scalesPageToFit","undefined","otherView","renderLoading","errorEvent","renderError","domain","code","description","error","loading","webViewStyles","container","webView","style","push","hidden","nativeConfig","viewManager","compiledWhitelist","originWhitelist","map","originWhitelistToRegex","onShouldStartLoadWithRequest","shouldStart","url","origin","extractOrigin","passesWhitelist","some","x","RegExp","test","openURL","startLoadWithResult","lockIdentifier","decelerationRate","source","html","uri","messagingEnabled","NativeWebView","component","RCTWKWebView","RCTWebView","injectedJavaScript","bounces","scrollEnabled","contentInset","automaticallyAdjustContentInsets","allowsInlineMediaPlayback","mediaPlaybackRequiresUserAction","dataDetectorTypes","Commands","prevProps","_showRedboxOnPropChanges","propName","Component","propTypes","string","oneOfType","shape","method","headers","object","body","baseUrl","number","bool","func","oneOf","arrayOf","javaScriptEnabled","thirdPartyCookiesEnabled","domStorageEnabled","userAgent","mixedContentMode","any","defaultProps","defaultOriginWhitelist","extraNativeComponentConfig","create","flex","justifyContent","alignItems","backgroundColor","fontSize","textAlign","marginBottom","fontWeight","height","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @noflow\n */\n\n'use strict';\n\nconst ActivityIndicator = require('ActivityIndicator');\nconst EdgeInsetsPropType = require('EdgeInsetsPropType');\nconst Linking = require('Linking');\nconst PropTypes = require('prop-types');\nconst React = require('React');\nconst ReactNative = require('ReactNative');\nconst ScrollView = require('ScrollView');\nconst StyleSheet = require('StyleSheet');\nconst Text = require('Text');\nconst UIManager = require('UIManager');\nconst View = require('View');\nconst ViewPropTypes = require('ViewPropTypes');\nconst WebViewShared = require('WebViewShared');\n\nconst deprecatedPropType = require('deprecatedPropType');\nconst invariant = require('fbjs/lib/invariant');\nconst keyMirror = require('fbjs/lib/keyMirror');\nconst processDecelerationRate = require('processDecelerationRate');\nconst requireNativeComponent = require('requireNativeComponent');\nconst resolveAssetSource = require('resolveAssetSource');\n\nconst RCTWebViewManager = require('NativeModules').WebViewManager;\nconst RCTWKWebViewManager = require('NativeModules').WKWebViewManager;\n\nconst BGWASH = 'rgba(255,255,255,0.8)';\nconst RCT_WEBVIEW_REF = 'webview';\n\nconst WebViewState = keyMirror({\n  IDLE: null,\n  LOADING: null,\n  ERROR: null,\n});\n\nconst NavigationType = keyMirror({\n  click: true,\n  formsubmit: true,\n  backforward: true,\n  reload: true,\n  formresubmit: true,\n  other: true,\n});\n\nconst JSNavigationScheme = 'react-js-navigation';\n\ntype ErrorEvent = {\n  domain: any,\n  code: any,\n  description: any,\n};\n\ntype Event = Object;\n\nconst DataDetectorTypes = [\n  'phoneNumber',\n  'link',\n  'address',\n  'calendarEvent',\n  'trackingNumber',\n  'flightNumber',\n  'lookupSuggestion',\n  'none',\n  'all',\n];\n\nconst defaultRenderLoading = () => (\n  <View style={styles.loadingView}>\n    <ActivityIndicator />\n  </View>\n);\nconst defaultRenderError = (errorDomain, errorCode, errorDesc) => (\n  <View style={styles.errorContainer}>\n    <Text style={styles.errorTextTitle}>Error loading page</Text>\n    <Text style={styles.errorText}>{'Domain: ' + errorDomain}</Text>\n    <Text style={styles.errorText}>{'Error Code: ' + errorCode}</Text>\n    <Text style={styles.errorText}>{'Description: ' + errorDesc}</Text>\n  </View>\n);\n\n/**\n * `WebView` renders web content in a native view.\n *\n *```\n * import React, { Component } from 'react';\n * import { WebView } from 'react-native';\n *\n * class MyWeb extends Component {\n *   render() {\n *     return (\n *       <WebView\n *         source={{uri: 'https://github.com/facebook/react-native'}}\n *         style={{marginTop: 20}}\n *       />\n *     );\n *   }\n * }\n *```\n *\n * You can use this component to navigate back and forth in the web view's\n * history and configure various properties for the web content.\n */\nclass WebView extends React.Component {\n  static JSNavigationScheme = JSNavigationScheme;\n  static NavigationType = NavigationType;\n  static propTypes = {\n    ...ViewPropTypes,\n\n    html: deprecatedPropType(\n      PropTypes.string,\n      'Use the `source` prop instead.',\n    ),\n\n    url: deprecatedPropType(PropTypes.string, 'Use the `source` prop instead.'),\n\n    /**\n     * Loads static html or a uri (with optional headers) in the WebView.\n     */\n    source: PropTypes.oneOfType([\n      PropTypes.shape({\n        /*\n         * The URI to load in the `WebView`. Can be a local or remote file.\n         */\n        uri: PropTypes.string,\n        /*\n         * The HTTP Method to use. Defaults to GET if not specified.\n         * NOTE: On Android, only GET and POST are supported.\n         */\n        method: PropTypes.string,\n        /*\n         * Additional HTTP headers to send with the request.\n         * NOTE: On Android, this can only be used with GET requests.\n         */\n        headers: PropTypes.object,\n        /*\n         * The HTTP body to send with the request. This must be a valid\n         * UTF-8 string, and will be sent exactly as specified, with no\n         * additional encoding (e.g. URL-escaping or base64) applied.\n         * NOTE: On Android, this can only be used with POST requests.\n         */\n        body: PropTypes.string,\n      }),\n      PropTypes.shape({\n        /*\n         * A static HTML page to display in the WebView.\n         */\n        html: PropTypes.string,\n        /*\n         * The base URL to be used for any relative links in the HTML.\n         */\n        baseUrl: PropTypes.string,\n      }),\n      /*\n       * Used internally by packager.\n       */\n      PropTypes.number,\n    ]),\n\n    /**\n     * If true, use WKWebView instead of UIWebView.\n     * @platform ios\n     */\n    useWebKit: PropTypes.bool,\n\n    /**\n     * Function that returns a view to show if there's an error.\n     */\n    renderError: PropTypes.func, // view to show if there's an error\n    /**\n     * Function that returns a loading indicator.\n     */\n    renderLoading: PropTypes.func,\n    /**\n     * Function that is invoked when the `WebView` has finished loading.\n     */\n    onLoad: PropTypes.func,\n    /**\n     * Function that is invoked when the `WebView` load succeeds or fails.\n     */\n    onLoadEnd: PropTypes.func,\n    /**\n     * Function that is invoked when the `WebView` starts loading.\n     */\n    onLoadStart: PropTypes.func,\n    /**\n     * Function that is invoked when the `WebView` load fails.\n     */\n    onError: PropTypes.func,\n    /**\n     * Boolean value that determines whether the web view bounces\n     * when it reaches the edge of the content. The default value is `true`.\n     * @platform ios\n     */\n    bounces: PropTypes.bool,\n    /**\n     * A floating-point number that determines how quickly the scroll view\n     * decelerates after the user lifts their finger. You may also use the\n     * string shortcuts `\"normal\"` and `\"fast\"` which match the underlying iOS\n     * settings for `UIScrollViewDecelerationRateNormal` and\n     * `UIScrollViewDecelerationRateFast` respectively:\n     *\n     *   - normal: 0.998\n     *   - fast: 0.99 (the default for iOS web view)\n     * @platform ios\n     */\n    decelerationRate: PropTypes.oneOfType([\n      PropTypes.oneOf(['fast', 'normal']),\n      PropTypes.number,\n    ]),\n    /**\n     * Boolean value that determines whether scrolling is enabled in the\n     * `WebView`. The default value is `true`.\n     * @platform ios\n     */\n    scrollEnabled: PropTypes.bool,\n    /**\n     * Controls whether to adjust the content inset for web views that are\n     * placed behind a navigation bar, tab bar, or toolbar. The default value\n     * is `true`.\n     */\n    automaticallyAdjustContentInsets: PropTypes.bool,\n    /**\n     * The amount by which the web view content is inset from the edges of\n     * the scroll view. Defaults to {top: 0, left: 0, bottom: 0, right: 0}.\n     * @platform ios\n     */\n    contentInset: EdgeInsetsPropType,\n    /**\n     * Function that is invoked when the `WebView` loading starts or ends.\n     */\n    onNavigationStateChange: PropTypes.func,\n    /**\n     * A function that is invoked when the webview calls `window.postMessage`.\n     * Setting this property will inject a `postMessage` global into your\n     * webview, but will still call pre-existing values of `postMessage`.\n     *\n     * `window.postMessage` accepts one argument, `data`, which will be\n     * available on the event object, `event.nativeEvent.data`. `data`\n     * must be a string.\n     */\n    onMessage: PropTypes.func,\n    /**\n     * Boolean value that forces the `WebView` to show the loading view\n     * on the first load.\n     */\n    startInLoadingState: PropTypes.bool,\n    /**\n     * The style to apply to the `WebView`.\n     */\n    style: ViewPropTypes.style,\n\n    /**\n     * Determines the types of data converted to clickable URLs in the web view's content.\n     * By default only phone numbers are detected.\n     *\n     * You can provide one type or an array of many types.\n     *\n     * Possible values for `dataDetectorTypes` are:\n     *\n     * - `'phoneNumber'`\n     * - `'link'`\n     * - `'address'`\n     * - `'calendarEvent'`\n     * - `'none'`\n     * - `'all'`\n     *\n     * With the new WebKit implementation, we have three new values:\n     * - `'trackingNumber'`,\n     * - `'flightNumber'`,\n     * - `'lookupSuggestion'`,\n     *\n     * @platform ios\n     */\n    dataDetectorTypes: PropTypes.oneOfType([\n      PropTypes.oneOf(DataDetectorTypes),\n      PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes)),\n    ]),\n\n    /**\n     * Boolean value to enable JavaScript in the `WebView`. Used on Android only\n     * as JavaScript is enabled by default on iOS. The default value is `true`.\n     * @platform android\n     */\n    javaScriptEnabled: PropTypes.bool,\n\n    /**\n     * Boolean value to enable third party cookies in the `WebView`. Used on\n     * Android Lollipop and above only as third party cookies are enabled by\n     * default on Android Kitkat and below and on iOS. The default value is `true`.\n     * @platform android\n     */\n    thirdPartyCookiesEnabled: PropTypes.bool,\n\n    /**\n     * Boolean value to control whether DOM Storage is enabled. Used only in\n     * Android.\n     * @platform android\n     */\n    domStorageEnabled: PropTypes.bool,\n\n    /**\n     * Set this to provide JavaScript that will be injected into the web page\n     * when the view loads.\n     */\n    injectedJavaScript: PropTypes.string,\n\n    /**\n     * Sets the user-agent for the `WebView`.\n     * @platform android\n     */\n    userAgent: PropTypes.string,\n\n    /**\n     * Boolean that controls whether the web content is scaled to fit\n     * the view and enables the user to change the scale. The default value\n     * is `true`.\n     *\n     * On iOS, when `useWebKit=true`, this prop will not work.\n     */\n    scalesPageToFit: PropTypes.bool,\n\n    /**\n     * Function that allows custom handling of any web view requests. Return\n     * `true` from the function to continue loading the request and `false`\n     * to stop loading.\n     * @platform ios\n     */\n    onShouldStartLoadWithRequest: PropTypes.func,\n\n    /**\n     * Boolean that determines whether HTML5 videos play inline or use the\n     * native full-screen controller. The default value is `false`.\n     *\n     * **NOTE** : In order for video to play inline, not only does this\n     * property need to be set to `true`, but the video element in the HTML\n     * document must also include the `webkit-playsinline` attribute.\n     * @platform ios\n     */\n    allowsInlineMediaPlayback: PropTypes.bool,\n\n    /**\n     * Boolean that determines whether HTML5 audio and video requires the user\n     * to tap them before they start playing. The default value is `true`.\n     */\n    mediaPlaybackRequiresUserAction: PropTypes.bool,\n\n    /**\n     * List of origin strings to allow being navigated to. The strings allow\n     * wildcards and get matched against *just* the origin (not the full URL).\n     * If the user taps to navigate to a new page but the new page is not in\n     * this whitelist, we will open the URL in Safari.\n     * The default whitelisted origins are \"http://*\" and \"https://*\".\n     */\n    originWhitelist: PropTypes.arrayOf(PropTypes.string),\n\n    /**\n     * Function that accepts a string that will be passed to the WebView and\n     * executed immediately as JavaScript.\n     */\n    injectJavaScript: PropTypes.func,\n\n    /**\n     * Specifies the mixed content mode. i.e WebView will allow a secure origin to load content from any other origin.\n     *\n     * Possible values for `mixedContentMode` are:\n     *\n     * - `'never'` (default) - WebView will not allow a secure origin to load content from an insecure origin.\n     * - `'always'` - WebView will allow a secure origin to load content from any other origin, even if that origin is insecure.\n     * - `'compatibility'` -  WebView will attempt to be compatible with the approach of a modern web browser with regard to mixed content.\n     * @platform android\n     */\n    mixedContentMode: PropTypes.oneOf(['never', 'always', 'compatibility']),\n\n    /**\n     * Override the native component used to render the WebView. Enables a custom native\n     * WebView which uses the same JavaScript as the original WebView.\n     */\n    nativeConfig: PropTypes.shape({\n      /*\n       * The native component used to render the WebView.\n       */\n      component: PropTypes.any,\n      /*\n       * Set props directly on the native component WebView. Enables custom props which the\n       * original WebView doesn't pass through.\n       */\n      props: PropTypes.object,\n      /*\n       * Set the ViewManager to use for communication with the native side.\n       * @platform ios\n       */\n      viewManager: PropTypes.object,\n    }),\n  };\n\n  static defaultProps = {\n    originWhitelist: WebViewShared.defaultOriginWhitelist,\n  };\n\n  state = {\n    viewState: WebViewState.IDLE,\n    lastErrorEvent: (null: ?ErrorEvent),\n    startInLoadingState: true,\n  };\n\n  UNSAFE_componentWillMount() {\n    if (this.props.startInLoadingState) {\n      this.setState({viewState: WebViewState.LOADING});\n    }\n\n    if (\n      this.props.useWebKit === true &&\n      this.props.scalesPageToFit !== undefined\n    ) {\n      console.warn(\n        'The scalesPageToFit property is not supported when useWebKit = true',\n      );\n    }\n  }\n\n  render() {\n    let otherView = null;\n\n    let scalesPageToFit;\n\n    if (this.props.useWebKit) {\n      ({scalesPageToFit} = this.props);\n    } else {\n      ({scalesPageToFit = true} = this.props);\n    }\n\n    if (this.state.viewState === WebViewState.LOADING) {\n      otherView = (this.props.renderLoading || defaultRenderLoading)();\n    } else if (this.state.viewState === WebViewState.ERROR) {\n      const errorEvent = this.state.lastErrorEvent;\n      invariant(errorEvent != null, 'lastErrorEvent expected to be non-null');\n      otherView = (this.props.renderError || defaultRenderError)(\n        errorEvent.domain,\n        errorEvent.code,\n        errorEvent.description,\n      );\n    } else if (this.state.viewState !== WebViewState.IDLE) {\n      console.error(\n        'RCTWebView invalid state encountered: ' + this.state.loading,\n      );\n    }\n\n    const webViewStyles = [styles.container, styles.webView, this.props.style];\n    if (\n      this.state.viewState === WebViewState.LOADING ||\n      this.state.viewState === WebViewState.ERROR\n    ) {\n      // if we're in either LOADING or ERROR states, don't show the webView\n      webViewStyles.push(styles.hidden);\n    }\n\n    const nativeConfig = this.props.nativeConfig || {};\n\n    let viewManager = nativeConfig.viewManager;\n\n    if (this.props.useWebKit) {\n      viewManager = viewManager || RCTWKWebViewManager;\n    } else {\n      viewManager = viewManager || RCTWebViewManager;\n    }\n\n    const compiledWhitelist = [\n      'about:blank',\n      ...(this.props.originWhitelist || []),\n    ].map(WebViewShared.originWhitelistToRegex);\n    const onShouldStartLoadWithRequest = (event: Event) => {\n      let shouldStart = true;\n      const {url} = event.nativeEvent;\n      const origin = WebViewShared.extractOrigin(url);\n      const passesWhitelist = compiledWhitelist.some(x =>\n        new RegExp(x).test(origin),\n      );\n      shouldStart = shouldStart && passesWhitelist;\n      if (!passesWhitelist) {\n        Linking.openURL(url);\n      }\n      if (this.props.onShouldStartLoadWithRequest) {\n        shouldStart =\n          shouldStart &&\n          this.props.onShouldStartLoadWithRequest(event.nativeEvent);\n      }\n      viewManager.startLoadWithResult(\n        !!shouldStart,\n        event.nativeEvent.lockIdentifier,\n      );\n    };\n\n    const decelerationRate = processDecelerationRate(\n      this.props.decelerationRate,\n    );\n\n    const source = this.props.source || {};\n    if (this.props.html) {\n      source.html = this.props.html;\n    } else if (this.props.url) {\n      source.uri = this.props.url;\n    }\n\n    const messagingEnabled = typeof this.props.onMessage === 'function';\n\n    let NativeWebView = nativeConfig.component;\n\n    if (this.props.useWebKit) {\n      NativeWebView = NativeWebView || RCTWKWebView;\n    } else {\n      NativeWebView = NativeWebView || RCTWebView;\n    }\n\n    const webView = (\n      <NativeWebView\n        ref={RCT_WEBVIEW_REF}\n        key=\"webViewKey\"\n        style={webViewStyles}\n        source={resolveAssetSource(source)}\n        injectedJavaScript={this.props.injectedJavaScript}\n        bounces={this.props.bounces}\n        scrollEnabled={this.props.scrollEnabled}\n        decelerationRate={decelerationRate}\n        contentInset={this.props.contentInset}\n        automaticallyAdjustContentInsets={\n          this.props.automaticallyAdjustContentInsets\n        }\n        onLoadingStart={this._onLoadingStart}\n        onLoadingFinish={this._onLoadingFinish}\n        onLoadingError={this._onLoadingError}\n        messagingEnabled={messagingEnabled}\n        onMessage={this._onMessage}\n        onShouldStartLoadWithRequest={onShouldStartLoadWithRequest}\n        scalesPageToFit={scalesPageToFit}\n        allowsInlineMediaPlayback={this.props.allowsInlineMediaPlayback}\n        mediaPlaybackRequiresUserAction={\n          this.props.mediaPlaybackRequiresUserAction\n        }\n        dataDetectorTypes={this.props.dataDetectorTypes}\n        {...nativeConfig.props}\n      />\n    );\n\n    return (\n      <View style={styles.container}>\n        {webView}\n        {otherView}\n      </View>\n    );\n  }\n\n  _getCommands() {\n    if (!this.props.useWebKit) {\n      return UIManager.RCTWebView.Commands;\n    }\n\n    return UIManager.RCTWKWebView.Commands;\n  }\n\n  /**\n   * Go forward one page in the web view's history.\n   */\n  goForward = () => {\n    UIManager.dispatchViewManagerCommand(\n      this.getWebViewHandle(),\n      this._getCommands().goForward,\n      null,\n    );\n  };\n\n  /**\n   * Go back one page in the web view's history.\n   */\n  goBack = () => {\n    UIManager.dispatchViewManagerCommand(\n      this.getWebViewHandle(),\n      this._getCommands().goBack,\n      null,\n    );\n  };\n\n  /**\n   * Reloads the current page.\n   */\n  reload = () => {\n    this.setState({viewState: WebViewState.LOADING});\n    UIManager.dispatchViewManagerCommand(\n      this.getWebViewHandle(),\n      this._getCommands().reload,\n      null,\n    );\n  };\n\n  /**\n   * Stop loading the current page.\n   */\n  stopLoading = () => {\n    UIManager.dispatchViewManagerCommand(\n      this.getWebViewHandle(),\n      this._getCommands().stopLoading,\n      null,\n    );\n  };\n\n  /**\n   * Posts a message to the web view, which will emit a `message` event.\n   * Accepts one argument, `data`, which must be a string.\n   *\n   * In your webview, you'll need to something like the following.\n   *\n   * ```js\n   * document.addEventListener('message', e => { document.title = e.data; });\n   * ```\n   */\n  postMessage = data => {\n    UIManager.dispatchViewManagerCommand(\n      this.getWebViewHandle(),\n      this._getCommands().postMessage,\n      [String(data)],\n    );\n  };\n\n  /**\n   * Injects a javascript string into the referenced WebView. Deliberately does not\n   * return a response because using eval() to return a response breaks this method\n   * on pages with a Content Security Policy that disallows eval(). If you need that\n   * functionality, look into postMessage/onMessage.\n   */\n  injectJavaScript = data => {\n    UIManager.dispatchViewManagerCommand(\n      this.getWebViewHandle(),\n      this._getCommands().injectJavaScript,\n      [data],\n    );\n  };\n\n  /**\n   * We return an event with a bunch of fields including:\n   *  url, title, loading, canGoBack, canGoForward\n   */\n  _updateNavigationState = (event: Event) => {\n    if (this.props.onNavigationStateChange) {\n      this.props.onNavigationStateChange(event.nativeEvent);\n    }\n  };\n\n  /**\n   * Returns the native `WebView` node.\n   */\n  getWebViewHandle = (): any => {\n    return ReactNative.findNodeHandle(this.refs[RCT_WEBVIEW_REF]);\n  };\n\n  _onLoadingStart = (event: Event) => {\n    const onLoadStart = this.props.onLoadStart;\n    onLoadStart && onLoadStart(event);\n    this._updateNavigationState(event);\n  };\n\n  _onLoadingError = (event: Event) => {\n    event.persist(); // persist this event because we need to store it\n    const {onError, onLoadEnd} = this.props;\n    onError && onError(event);\n    onLoadEnd && onLoadEnd(event);\n    console.warn('Encountered an error loading page', event.nativeEvent);\n\n    this.setState({\n      lastErrorEvent: event.nativeEvent,\n      viewState: WebViewState.ERROR,\n    });\n  };\n\n  _onLoadingFinish = (event: Event) => {\n    const {onLoad, onLoadEnd} = this.props;\n    onLoad && onLoad(event);\n    onLoadEnd && onLoadEnd(event);\n    this.setState({\n      viewState: WebViewState.IDLE,\n    });\n    this._updateNavigationState(event);\n  };\n\n  _onMessage = (event: Event) => {\n    const {onMessage} = this.props;\n    onMessage && onMessage(event);\n  };\n\n  componentDidUpdate(prevProps) {\n    if (!(prevProps.useWebKit && this.props.useWebKit)) {\n      return;\n    }\n\n    this._showRedboxOnPropChanges(prevProps, 'allowsInlineMediaPlayback');\n    this._showRedboxOnPropChanges(prevProps, 'mediaPlaybackRequiresUserAction');\n    this._showRedboxOnPropChanges(prevProps, 'dataDetectorTypes');\n\n    if (this.props.scalesPageToFit !== undefined) {\n      console.warn(\n        'The scalesPageToFit property is not supported when useWebKit = true',\n      );\n    }\n  }\n\n  _showRedboxOnPropChanges(prevProps, propName: string) {\n    if (this.props[propName] !== prevProps[propName]) {\n      console.error(\n        `Changes to property ${propName} do nothing after the initial render.`,\n      );\n    }\n  }\n}\n\nconst RCTWebView = requireNativeComponent(\n  'RCTWebView',\n  WebView,\n  WebView.extraNativeComponentConfig,\n);\nconst RCTWKWebView = requireNativeComponent(\n  'RCTWKWebView',\n  WebView,\n  WebView.extraNativeComponentConfig,\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: BGWASH,\n  },\n  errorText: {\n    fontSize: 14,\n    textAlign: 'center',\n    marginBottom: 2,\n  },\n  errorTextTitle: {\n    fontSize: 15,\n    fontWeight: '500',\n    marginBottom: 10,\n  },\n  hidden: {\n    height: 0,\n    flex: 0, // disable 'flex:1' when hiding a View\n  },\n  loadingView: {\n    backgroundColor: BGWASH,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 100,\n  },\n  webView: {\n    backgroundColor: '#ffffff',\n  },\n});\n\nmodule.exports = WebView;\n"]}]}
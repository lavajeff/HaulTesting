{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/CameraRoll/ImagePickerIOS.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/CameraRoll/ImagePickerIOS.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var RCTImagePicker=require('NativeModules').ImagePickerIOS;var ImagePickerIOS={canRecordVideos:function canRecordVideos(callback){return RCTImagePicker.canRecordVideos(callback);},canUseCamera:function canUseCamera(callback){return RCTImagePicker.canUseCamera(callback);},openCameraDialog:function openCameraDialog(config,successCallback,cancelCallback){config=(0,_objectSpread2.default)({videoMode:false},config);return RCTImagePicker.openCameraDialog(config,successCallback,cancelCallback);},openSelectDialog:function openSelectDialog(config,successCallback,cancelCallback){config=(0,_objectSpread2.default)({showImages:true,showVideos:false},config);return RCTImagePicker.openSelectDialog(config,successCallback,cancelCallback);}};module.exports=ImagePickerIOS;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(RCTImagePicker,\"RCTImagePicker\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/CameraRoll/ImagePickerIOS.js\");reactHotLoader.register(ImagePickerIOS,\"ImagePickerIOS\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/CameraRoll/ImagePickerIOS.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/CameraRoll/ImagePickerIOS.js"],"names":["RCTImagePicker","require","ImagePickerIOS","canRecordVideos","callback","canUseCamera","openCameraDialog","config","successCallback","cancelCallback","videoMode","openSelectDialog","showImages","showVideos","module","exports"],"mappings":"AAUA,a,uRAEA,GAAMA,CAAAA,cAAc,CAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,cAAhD,CAEA,GAAMA,CAAAA,cAAc,CAAG,CACrBC,eAAe,CAAE,yBAASC,QAAT,CAA6B,CAC5C,MAAOJ,CAAAA,cAAc,CAACG,eAAf,CAA+BC,QAA/B,CAAP,CACD,CAHoB,CAIrBC,YAAY,CAAE,sBAASD,QAAT,CAA6B,CACzC,MAAOJ,CAAAA,cAAc,CAACK,YAAf,CAA4BD,QAA5B,CAAP,CACD,CANoB,CAOrBE,gBAAgB,CAAE,0BAChBC,MADgB,CAEhBC,eAFgB,CAGhBC,cAHgB,CAIhB,CACAF,MAAM,6BACJG,SAAS,CAAE,KADP,EAEDH,MAFC,CAAN,CAIA,MAAOP,CAAAA,cAAc,CAACM,gBAAf,CACLC,MADK,CAELC,eAFK,CAGLC,cAHK,CAAP,CAKD,CArBoB,CAsBrBE,gBAAgB,CAAE,0BAChBJ,MADgB,CAEhBC,eAFgB,CAGhBC,cAHgB,CAIhB,CACAF,MAAM,6BACJK,UAAU,CAAE,IADR,CAEJC,UAAU,CAAE,KAFR,EAGDN,MAHC,CAAN,CAKA,MAAOP,CAAAA,cAAc,CAACW,gBAAf,CACLJ,MADK,CAELC,eAFK,CAGLC,cAHK,CAAP,CAKD,CArCoB,CAAvB,CAwCAK,MAAM,CAACC,OAAP,CAAiBb,cAAjB,C,gLA1CMF,c,yIAEAE,c","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst RCTImagePicker = require('NativeModules').ImagePickerIOS;\n\nconst ImagePickerIOS = {\n  canRecordVideos: function(callback: Function) {\n    return RCTImagePicker.canRecordVideos(callback);\n  },\n  canUseCamera: function(callback: Function) {\n    return RCTImagePicker.canUseCamera(callback);\n  },\n  openCameraDialog: function(\n    config: Object,\n    successCallback: Function,\n    cancelCallback: Function,\n  ) {\n    config = {\n      videoMode: false,\n      ...config,\n    };\n    return RCTImagePicker.openCameraDialog(\n      config,\n      successCallback,\n      cancelCallback,\n    );\n  },\n  openSelectDialog: function(\n    config: Object,\n    successCallback: Function,\n    cancelCallback: Function,\n  ) {\n    config = {\n      showImages: true,\n      showVideos: false,\n      ...config,\n    };\n    return RCTImagePicker.openSelectDialog(\n      config,\n      successCallback,\n      cancelCallback,\n    );\n  },\n};\n\nmodule.exports = ImagePickerIOS;\n"]}]}
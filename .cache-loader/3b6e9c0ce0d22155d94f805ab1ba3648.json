{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Linking/Linking.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Linking/Linking.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var NativeEventEmitter=require('NativeEventEmitter');var NativeModules=require('NativeModules');var Platform=require('Platform');var invariant=require('fbjs/lib/invariant');var LinkingManager=Platform.OS==='android'?NativeModules.IntentAndroid:NativeModules.LinkingManager;var Linking=function(_NativeEventEmitter){(0,_inherits2.default)(Linking,_NativeEventEmitter);function Linking(){(0,_classCallCheck2.default)(this,Linking);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(Linking).call(this,LinkingManager));}(0,_createClass2.default)(Linking,[{key:\"addEventListener\",value:function addEventListener(type,handler){this.addListener(type,handler);}},{key:\"removeEventListener\",value:function removeEventListener(type,handler){this.removeListener(type,handler);}},{key:\"openURL\",value:function openURL(url){this._validateURL(url);return LinkingManager.openURL(url);}},{key:\"canOpenURL\",value:function canOpenURL(url){this._validateURL(url);return LinkingManager.canOpenURL(url);}},{key:\"getInitialURL\",value:function getInitialURL(){return LinkingManager.getInitialURL();}},{key:\"_validateURL\",value:function _validateURL(url){invariant(typeof url==='string','Invalid URL: should be a string. Was: '+url);invariant(url,'Invalid URL: cannot be empty');}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return Linking;}(NativeEventEmitter);module.exports=new Linking();;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(LinkingManager,\"LinkingManager\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Linking/Linking.js\");reactHotLoader.register(Linking,\"Linking\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Linking/Linking.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Linking/Linking.js"],"names":["NativeEventEmitter","require","NativeModules","Platform","invariant","LinkingManager","OS","IntentAndroid","Linking","type","handler","addListener","removeListener","url","_validateURL","openURL","canOpenURL","getInitialURL","module","exports"],"mappings":"AAUA,a,upBAEA,GAAMA,CAAAA,kBAAkB,CAAGC,OAAO,CAAC,oBAAD,CAAlC,CACA,GAAMC,CAAAA,aAAa,CAAGD,OAAO,CAAC,eAAD,CAA7B,CACA,GAAME,CAAAA,QAAQ,CAAGF,OAAO,CAAC,UAAD,CAAxB,CAEA,GAAMG,CAAAA,SAAS,CAAGH,OAAO,CAAC,oBAAD,CAAzB,CAEA,GAAMI,CAAAA,cAAc,CAClBF,QAAQ,CAACG,EAAT,GAAgB,SAAhB,CACIJ,aAAa,CAACK,aADlB,CAEIL,aAAa,CAACG,cAHpB,C,GAWMG,CAAAA,O,mFACJ,kBAAc,+IACNH,cADM,GAEb,C,2FAQgBI,I,CAAcC,O,CAAmB,CAChD,KAAKC,WAAL,CAAiBF,IAAjB,CAAuBC,OAAvB,EACD,C,gEAOmBD,I,CAAcC,O,CAAmB,CACnD,KAAKE,cAAL,CAAoBH,IAApB,CAA0BC,OAA1B,EACD,C,wCAOOG,G,CAA2B,CACjC,KAAKC,YAAL,CAAkBD,GAAlB,EACA,MAAOR,CAAAA,cAAc,CAACU,OAAf,CAAuBF,GAAvB,CAAP,CACD,C,8CAOUA,G,CAA+B,CACxC,KAAKC,YAAL,CAAkBD,GAAlB,EACA,MAAOR,CAAAA,cAAc,CAACW,UAAf,CAA0BH,GAA1B,CAAP,CACD,C,qDAQiC,CAChC,MAAOR,CAAAA,cAAc,CAACY,aAAf,EAAP,CACD,C,kDAEYJ,G,CAAa,CACxBT,SAAS,CACP,MAAOS,CAAAA,GAAP,GAAe,QADR,CAEP,yCAA2CA,GAFpC,CAAT,CAIAT,SAAS,CAACS,GAAD,CAAM,8BAAN,CAAT,CACD,C,+IA5DmBb,kB,EA+DtBkB,MAAM,CAACC,OAAP,CAAiB,GAAIX,CAAAA,OAAJ,EAAjB,C,gLA1EMH,c,+HAWAG,O","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst NativeEventEmitter = require('NativeEventEmitter');\nconst NativeModules = require('NativeModules');\nconst Platform = require('Platform');\n\nconst invariant = require('fbjs/lib/invariant');\n\nconst LinkingManager =\n  Platform.OS === 'android'\n    ? NativeModules.IntentAndroid\n    : NativeModules.LinkingManager;\n\n/**\n * `Linking` gives you a general interface to interact with both incoming\n * and outgoing app links.\n *\n * See https://facebook.github.io/react-native/docs/linking.html\n */\nclass Linking extends NativeEventEmitter {\n  constructor() {\n    super(LinkingManager);\n  }\n\n  /**\n   * Add a handler to Linking changes by listening to the `url` event type\n   * and providing the handler\n   *\n   * See https://facebook.github.io/react-native/docs/linking.html#addeventlistener\n   */\n  addEventListener(type: string, handler: Function) {\n    this.addListener(type, handler);\n  }\n\n  /**\n   * Remove a handler by passing the `url` event type and the handler.\n   *\n   * See https://facebook.github.io/react-native/docs/linking.html#removeeventlistener\n   */\n  removeEventListener(type: string, handler: Function) {\n    this.removeListener(type, handler);\n  }\n\n  /**\n   * Try to open the given `url` with any of the installed apps.\n   *\n   * See https://facebook.github.io/react-native/docs/linking.html#openurl\n   */\n  openURL(url: string): Promise<any> {\n    this._validateURL(url);\n    return LinkingManager.openURL(url);\n  }\n\n  /**\n   * Determine whether or not an installed app can handle a given URL.\n   *\n   * See https://facebook.github.io/react-native/docs/linking.html#canopenurl\n   */\n  canOpenURL(url: string): Promise<boolean> {\n    this._validateURL(url);\n    return LinkingManager.canOpenURL(url);\n  }\n\n  /**\n   * If the app launch was triggered by an app link,\n   * it will give the link url, otherwise it will give `null`\n   *\n   * See https://facebook.github.io/react-native/docs/linking.html#getinitialurl\n   */\n  getInitialURL(): Promise<?string> {\n    return LinkingManager.getInitialURL();\n  }\n\n  _validateURL(url: string) {\n    invariant(\n      typeof url === 'string',\n      'Invalid URL: should be a string. Was: ' + url,\n    );\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n}\n\nmodule.exports = new Linking();\n"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/resolveAssetSource.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/resolveAssetSource.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var AssetRegistry=require('AssetRegistry');var AssetSourceResolver=require('AssetSourceResolver');var _customSourceTransformer,_serverURL,_scriptURL;var _sourceCodeScriptURL;function getSourceCodeScriptURL(){if(_sourceCodeScriptURL){return _sourceCodeScriptURL;}var sourceCode=global.nativeExtensions&&global.nativeExtensions.SourceCode;if(!sourceCode){var NativeModules=require('NativeModules');sourceCode=NativeModules&&NativeModules.SourceCode;}_sourceCodeScriptURL=sourceCode.scriptURL;return _sourceCodeScriptURL;}function getDevServerURL(){if(_serverURL===undefined){var sourceCodeScriptURL=getSourceCodeScriptURL();var match=sourceCodeScriptURL&&sourceCodeScriptURL.match(/^https?:\\/\\/.*?\\//);if(match){_serverURL=match[0];}else{_serverURL=null;}}return _serverURL;}function _coerceLocalScriptURL(scriptURL){if(scriptURL){if(scriptURL.startsWith('assets://')){return null;}scriptURL=scriptURL.substring(0,scriptURL.lastIndexOf('/')+1);if(!scriptURL.includes('://')){scriptURL='file://'+scriptURL;}}return scriptURL;}function getScriptURL(){if(_scriptURL===undefined){_scriptURL=_coerceLocalScriptURL(getSourceCodeScriptURL());}return _scriptURL;}function setCustomSourceTransformer(transformer){_customSourceTransformer=transformer;}function resolveAssetSource(source){if(typeof source==='object'){return source;}var asset=AssetRegistry.getAssetByID(source);if(!asset){return null;}var resolver=new AssetSourceResolver(getDevServerURL(),getScriptURL(),asset);if(_customSourceTransformer){return _customSourceTransformer(resolver);}return resolver.defaultAsset();}module.exports=resolveAssetSource;module.exports.pickScale=AssetSourceResolver.pickScale;module.exports.setCustomSourceTransformer=setCustomSourceTransformer;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(_customSourceTransformer,\"_customSourceTransformer\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/resolveAssetSource.js\");reactHotLoader.register(_serverURL,\"_serverURL\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/resolveAssetSource.js\");reactHotLoader.register(_scriptURL,\"_scriptURL\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/resolveAssetSource.js\");reactHotLoader.register(_sourceCodeScriptURL,\"_sourceCodeScriptURL\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/resolveAssetSource.js\");reactHotLoader.register(getSourceCodeScriptURL,\"getSourceCodeScriptURL\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/resolveAssetSource.js\");reactHotLoader.register(getDevServerURL,\"getDevServerURL\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/resolveAssetSource.js\");reactHotLoader.register(_coerceLocalScriptURL,\"_coerceLocalScriptURL\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/resolveAssetSource.js\");reactHotLoader.register(getScriptURL,\"getScriptURL\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/resolveAssetSource.js\");reactHotLoader.register(setCustomSourceTransformer,\"setCustomSourceTransformer\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/resolveAssetSource.js\");reactHotLoader.register(resolveAssetSource,\"resolveAssetSource\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/resolveAssetSource.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/resolveAssetSource.js"],"names":["AssetRegistry","require","AssetSourceResolver","_customSourceTransformer","_serverURL","_scriptURL","_sourceCodeScriptURL","getSourceCodeScriptURL","sourceCode","global","nativeExtensions","SourceCode","NativeModules","scriptURL","getDevServerURL","undefined","sourceCodeScriptURL","match","_coerceLocalScriptURL","startsWith","substring","lastIndexOf","includes","getScriptURL","setCustomSourceTransformer","transformer","resolveAssetSource","source","asset","getAssetByID","resolver","defaultAsset","module","exports","pickScale"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * Resolves an asset into a `source` for `Image`.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst AssetRegistry = require('AssetRegistry');\nconst AssetSourceResolver = require('AssetSourceResolver');\n\nimport type {ResolvedAssetSource} from 'AssetSourceResolver';\n\nlet _customSourceTransformer, _serverURL, _scriptURL;\n\nlet _sourceCodeScriptURL: ?string;\nfunction getSourceCodeScriptURL(): ?string {\n  if (_sourceCodeScriptURL) {\n    return _sourceCodeScriptURL;\n  }\n\n  let sourceCode =\n    global.nativeExtensions && global.nativeExtensions.SourceCode;\n  if (!sourceCode) {\n    const NativeModules = require('NativeModules');\n    sourceCode = NativeModules && NativeModules.SourceCode;\n  }\n  _sourceCodeScriptURL = sourceCode.scriptURL;\n  return _sourceCodeScriptURL;\n}\n\nfunction getDevServerURL(): ?string {\n  if (_serverURL === undefined) {\n    const sourceCodeScriptURL = getSourceCodeScriptURL();\n    const match =\n      sourceCodeScriptURL && sourceCodeScriptURL.match(/^https?:\\/\\/.*?\\//);\n    if (match) {\n      // jsBundle was loaded from network\n      _serverURL = match[0];\n    } else {\n      // jsBundle was loaded from file\n      _serverURL = null;\n    }\n  }\n  return _serverURL;\n}\n\nfunction _coerceLocalScriptURL(scriptURL: ?string): ?string {\n  if (scriptURL) {\n    if (scriptURL.startsWith('assets://')) {\n      // android: running from within assets, no offline path to use\n      return null;\n    }\n    scriptURL = scriptURL.substring(0, scriptURL.lastIndexOf('/') + 1);\n    if (!scriptURL.includes('://')) {\n      // Add file protocol in case we have an absolute file path and not a URL.\n      // This shouldn't really be necessary. scriptURL should be a URL.\n      scriptURL = 'file://' + scriptURL;\n    }\n  }\n  return scriptURL;\n}\n\nfunction getScriptURL(): ?string {\n  if (_scriptURL === undefined) {\n    _scriptURL = _coerceLocalScriptURL(getSourceCodeScriptURL());\n  }\n  return _scriptURL;\n}\n\nfunction setCustomSourceTransformer(\n  transformer: (resolver: AssetSourceResolver) => ResolvedAssetSource,\n): void {\n  _customSourceTransformer = transformer;\n}\n\n/**\n * `source` is either a number (opaque type returned by require('./foo.png'))\n * or an `ImageSource` like { uri: '<http location || file path>' }\n */\nfunction resolveAssetSource(source: any): ?ResolvedAssetSource {\n  if (typeof source === 'object') {\n    return source;\n  }\n\n  const asset = AssetRegistry.getAssetByID(source);\n  if (!asset) {\n    return null;\n  }\n\n  const resolver = new AssetSourceResolver(\n    getDevServerURL(),\n    getScriptURL(),\n    asset,\n  );\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\n\nmodule.exports = resolveAssetSource;\nmodule.exports.pickScale = AssetSourceResolver.pickScale;\nmodule.exports.setCustomSourceTransformer = setCustomSourceTransformer;\n"]}]}
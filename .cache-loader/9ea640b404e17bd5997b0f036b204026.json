{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/MatrixMath.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/MatrixMath.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var invariant=require('fbjs/lib/invariant');var MatrixMath={createIdentityMatrix:function createIdentityMatrix(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];},createCopy:function createCopy(m){return[m[0],m[1],m[2],m[3],m[4],m[5],m[6],m[7],m[8],m[9],m[10],m[11],m[12],m[13],m[14],m[15]];},createOrthographic:function createOrthographic(left,right,bottom,top,near,far){var a=2/(right-left);var b=2/(top-bottom);var c=-2/(far-near);var tx=-(right+left)/(right-left);var ty=-(top+bottom)/(top-bottom);var tz=-(far+near)/(far-near);return[a,0,0,0,0,b,0,0,0,0,c,0,tx,ty,tz,1];},createFrustum:function createFrustum(left,right,bottom,top,near,far){var r_width=1/(right-left);var r_height=1/(top-bottom);var r_depth=1/(near-far);var x=2*(near*r_width);var y=2*(near*r_height);var A=(right+left)*r_width;var B=(top+bottom)*r_height;var C=(far+near)*r_depth;var D=2*(far*near*r_depth);return[x,0,0,0,0,y,0,0,A,B,C,-1,0,0,D,0];},createPerspective:function createPerspective(fovInRadians,aspect,near,far){var h=1/Math.tan(fovInRadians/2);var r_depth=1/(near-far);var C=(far+near)*r_depth;var D=2*(far*near*r_depth);return[h/aspect,0,0,0,0,h,0,0,0,0,C,-1,0,0,D,0];},createTranslate2d:function createTranslate2d(x,y){var mat=MatrixMath.createIdentityMatrix();MatrixMath.reuseTranslate2dCommand(mat,x,y);return mat;},reuseTranslate2dCommand:function reuseTranslate2dCommand(matrixCommand,x,y){matrixCommand[12]=x;matrixCommand[13]=y;},reuseTranslate3dCommand:function reuseTranslate3dCommand(matrixCommand,x,y,z){matrixCommand[12]=x;matrixCommand[13]=y;matrixCommand[14]=z;},createScale:function createScale(factor){var mat=MatrixMath.createIdentityMatrix();MatrixMath.reuseScaleCommand(mat,factor);return mat;},reuseScaleCommand:function reuseScaleCommand(matrixCommand,factor){matrixCommand[0]=factor;matrixCommand[5]=factor;},reuseScale3dCommand:function reuseScale3dCommand(matrixCommand,x,y,z){matrixCommand[0]=x;matrixCommand[5]=y;matrixCommand[10]=z;},reusePerspectiveCommand:function reusePerspectiveCommand(matrixCommand,p){matrixCommand[11]=-1/p;},reuseScaleXCommand:function reuseScaleXCommand(matrixCommand,factor){matrixCommand[0]=factor;},reuseScaleYCommand:function reuseScaleYCommand(matrixCommand,factor){matrixCommand[5]=factor;},reuseScaleZCommand:function reuseScaleZCommand(matrixCommand,factor){matrixCommand[10]=factor;},reuseRotateXCommand:function reuseRotateXCommand(matrixCommand,radians){matrixCommand[5]=Math.cos(radians);matrixCommand[6]=Math.sin(radians);matrixCommand[9]=-Math.sin(radians);matrixCommand[10]=Math.cos(radians);},reuseRotateYCommand:function reuseRotateYCommand(matrixCommand,amount){matrixCommand[0]=Math.cos(amount);matrixCommand[2]=-Math.sin(amount);matrixCommand[8]=Math.sin(amount);matrixCommand[10]=Math.cos(amount);},reuseRotateZCommand:function reuseRotateZCommand(matrixCommand,radians){matrixCommand[0]=Math.cos(radians);matrixCommand[1]=Math.sin(radians);matrixCommand[4]=-Math.sin(radians);matrixCommand[5]=Math.cos(radians);},createRotateZ:function createRotateZ(radians){var mat=MatrixMath.createIdentityMatrix();MatrixMath.reuseRotateZCommand(mat,radians);return mat;},reuseSkewXCommand:function reuseSkewXCommand(matrixCommand,radians){matrixCommand[4]=Math.tan(radians);},reuseSkewYCommand:function reuseSkewYCommand(matrixCommand,radians){matrixCommand[1]=Math.tan(radians);},multiplyInto:function multiplyInto(out,a,b){var a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15];var b0=b[0],b1=b[1],b2=b[2],b3=b[3];out[0]=b0*a00+b1*a10+b2*a20+b3*a30;out[1]=b0*a01+b1*a11+b2*a21+b3*a31;out[2]=b0*a02+b1*a12+b2*a22+b3*a32;out[3]=b0*a03+b1*a13+b2*a23+b3*a33;b0=b[4];b1=b[5];b2=b[6];b3=b[7];out[4]=b0*a00+b1*a10+b2*a20+b3*a30;out[5]=b0*a01+b1*a11+b2*a21+b3*a31;out[6]=b0*a02+b1*a12+b2*a22+b3*a32;out[7]=b0*a03+b1*a13+b2*a23+b3*a33;b0=b[8];b1=b[9];b2=b[10];b3=b[11];out[8]=b0*a00+b1*a10+b2*a20+b3*a30;out[9]=b0*a01+b1*a11+b2*a21+b3*a31;out[10]=b0*a02+b1*a12+b2*a22+b3*a32;out[11]=b0*a03+b1*a13+b2*a23+b3*a33;b0=b[12];b1=b[13];b2=b[14];b3=b[15];out[12]=b0*a00+b1*a10+b2*a20+b3*a30;out[13]=b0*a01+b1*a11+b2*a21+b3*a31;out[14]=b0*a02+b1*a12+b2*a22+b3*a32;out[15]=b0*a03+b1*a13+b2*a23+b3*a33;},determinant:function determinant(matrix){var _matrix=(0,_slicedToArray2.default)(matrix,16),m00=_matrix[0],m01=_matrix[1],m02=_matrix[2],m03=_matrix[3],m10=_matrix[4],m11=_matrix[5],m12=_matrix[6],m13=_matrix[7],m20=_matrix[8],m21=_matrix[9],m22=_matrix[10],m23=_matrix[11],m30=_matrix[12],m31=_matrix[13],m32=_matrix[14],m33=_matrix[15];return m03*m12*m21*m30-m02*m13*m21*m30-m03*m11*m22*m30+m01*m13*m22*m30+m02*m11*m23*m30-m01*m12*m23*m30-m03*m12*m20*m31+m02*m13*m20*m31+m03*m10*m22*m31-m00*m13*m22*m31-m02*m10*m23*m31+m00*m12*m23*m31+m03*m11*m20*m32-m01*m13*m20*m32-m03*m10*m21*m32+m00*m13*m21*m32+m01*m10*m23*m32-m00*m11*m23*m32-m02*m11*m20*m33+m01*m12*m20*m33+m02*m10*m21*m33-m00*m12*m21*m33-m01*m10*m22*m33+m00*m11*m22*m33;},inverse:function inverse(matrix){var det=MatrixMath.determinant(matrix);if(!det){return matrix;}var _matrix2=(0,_slicedToArray2.default)(matrix,16),m00=_matrix2[0],m01=_matrix2[1],m02=_matrix2[2],m03=_matrix2[3],m10=_matrix2[4],m11=_matrix2[5],m12=_matrix2[6],m13=_matrix2[7],m20=_matrix2[8],m21=_matrix2[9],m22=_matrix2[10],m23=_matrix2[11],m30=_matrix2[12],m31=_matrix2[13],m32=_matrix2[14],m33=_matrix2[15];return[(m12*m23*m31-m13*m22*m31+m13*m21*m32-m11*m23*m32-m12*m21*m33+m11*m22*m33)/det,(m03*m22*m31-m02*m23*m31-m03*m21*m32+m01*m23*m32+m02*m21*m33-m01*m22*m33)/det,(m02*m13*m31-m03*m12*m31+m03*m11*m32-m01*m13*m32-m02*m11*m33+m01*m12*m33)/det,(m03*m12*m21-m02*m13*m21-m03*m11*m22+m01*m13*m22+m02*m11*m23-m01*m12*m23)/det,(m13*m22*m30-m12*m23*m30-m13*m20*m32+m10*m23*m32+m12*m20*m33-m10*m22*m33)/det,(m02*m23*m30-m03*m22*m30+m03*m20*m32-m00*m23*m32-m02*m20*m33+m00*m22*m33)/det,(m03*m12*m30-m02*m13*m30-m03*m10*m32+m00*m13*m32+m02*m10*m33-m00*m12*m33)/det,(m02*m13*m20-m03*m12*m20+m03*m10*m22-m00*m13*m22-m02*m10*m23+m00*m12*m23)/det,(m11*m23*m30-m13*m21*m30+m13*m20*m31-m10*m23*m31-m11*m20*m33+m10*m21*m33)/det,(m03*m21*m30-m01*m23*m30-m03*m20*m31+m00*m23*m31+m01*m20*m33-m00*m21*m33)/det,(m01*m13*m30-m03*m11*m30+m03*m10*m31-m00*m13*m31-m01*m10*m33+m00*m11*m33)/det,(m03*m11*m20-m01*m13*m20-m03*m10*m21+m00*m13*m21+m01*m10*m23-m00*m11*m23)/det,(m12*m21*m30-m11*m22*m30-m12*m20*m31+m10*m22*m31+m11*m20*m32-m10*m21*m32)/det,(m01*m22*m30-m02*m21*m30+m02*m20*m31-m00*m22*m31-m01*m20*m32+m00*m21*m32)/det,(m02*m11*m30-m01*m12*m30-m02*m10*m31+m00*m12*m31+m01*m10*m32-m00*m11*m32)/det,(m01*m12*m20-m02*m11*m20+m02*m10*m21-m00*m12*m21-m01*m10*m22+m00*m11*m22)/det];},transpose:function transpose(m){return[m[0],m[4],m[8],m[12],m[1],m[5],m[9],m[13],m[2],m[6],m[10],m[14],m[3],m[7],m[11],m[15]];},multiplyVectorByMatrix:function multiplyVectorByMatrix(v,m){var _v=(0,_slicedToArray2.default)(v,4),vx=_v[0],vy=_v[1],vz=_v[2],vw=_v[3];return[vx*m[0]+vy*m[4]+vz*m[8]+vw*m[12],vx*m[1]+vy*m[5]+vz*m[9]+vw*m[13],vx*m[2]+vy*m[6]+vz*m[10]+vw*m[14],vx*m[3]+vy*m[7]+vz*m[11]+vw*m[15]];},v3Length:function v3Length(a){return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);},v3Normalize:function v3Normalize(vector,v3Length){var im=1/(v3Length||MatrixMath.v3Length(vector));return[vector[0]*im,vector[1]*im,vector[2]*im];},v3Dot:function v3Dot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2];},v3Combine:function v3Combine(a,b,aScale,bScale){return[aScale*a[0]+bScale*b[0],aScale*a[1]+bScale*b[1],aScale*a[2]+bScale*b[2]];},v3Cross:function v3Cross(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]];},quaternionToDegreesXYZ:function quaternionToDegreesXYZ(q,matrix,row){var _q=(0,_slicedToArray2.default)(q,4),qx=_q[0],qy=_q[1],qz=_q[2],qw=_q[3];var qw2=qw*qw;var qx2=qx*qx;var qy2=qy*qy;var qz2=qz*qz;var test=qx*qy+qz*qw;var unit=qw2+qx2+qy2+qz2;var conv=180/Math.PI;if(test>0.49999*unit){return[0,2*Math.atan2(qx,qw)*conv,90];}if(test<-0.49999*unit){return[0,-2*Math.atan2(qx,qw)*conv,-90];}return[MatrixMath.roundTo3Places(Math.atan2(2*qx*qw-2*qy*qz,1-2*qx2-2*qz2)*conv),MatrixMath.roundTo3Places(Math.atan2(2*qy*qw-2*qx*qz,1-2*qy2-2*qz2)*conv),MatrixMath.roundTo3Places(Math.asin(2*qx*qy+2*qz*qw)*conv)];},roundTo3Places:function roundTo3Places(n){var arr=n.toString().split('e');return Math.round(arr[0]+'e'+(arr[1]?+arr[1]-3:3))*0.001;},decomposeMatrix:function decomposeMatrix(transformMatrix){invariant(transformMatrix.length===16,'Matrix decomposition needs a list of 3d matrix values, received %s',transformMatrix);var perspective=[];var quaternion=[];var scale=[];var skew=[];var translation=[];if(!transformMatrix[15]){return;}var matrix=[];var perspectiveMatrix=[];for(var i=0;i<4;i++){matrix.push([]);for(var j=0;j<4;j++){var value=transformMatrix[i*4+j]/transformMatrix[15];matrix[i].push(value);perspectiveMatrix.push(j===3?0:value);}}perspectiveMatrix[15]=1;if(!MatrixMath.determinant(perspectiveMatrix)){return;}if(matrix[0][3]!==0||matrix[1][3]!==0||matrix[2][3]!==0){var rightHandSide=[matrix[0][3],matrix[1][3],matrix[2][3],matrix[3][3]];var inversePerspectiveMatrix=MatrixMath.inverse(perspectiveMatrix);var transposedInversePerspectiveMatrix=MatrixMath.transpose(inversePerspectiveMatrix);var perspective=MatrixMath.multiplyVectorByMatrix(rightHandSide,transposedInversePerspectiveMatrix);}else{perspective[0]=perspective[1]=perspective[2]=0;perspective[3]=1;}for(var i=0;i<3;i++){translation[i]=matrix[3][i];}var row=[];for(i=0;i<3;i++){row[i]=[matrix[i][0],matrix[i][1],matrix[i][2]];}scale[0]=MatrixMath.v3Length(row[0]);row[0]=MatrixMath.v3Normalize(row[0],scale[0]);skew[0]=MatrixMath.v3Dot(row[0],row[1]);row[1]=MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);skew[0]=MatrixMath.v3Dot(row[0],row[1]);row[1]=MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);scale[1]=MatrixMath.v3Length(row[1]);row[1]=MatrixMath.v3Normalize(row[1],scale[1]);skew[0]/=scale[1];skew[1]=MatrixMath.v3Dot(row[0],row[2]);row[2]=MatrixMath.v3Combine(row[2],row[0],1.0,-skew[1]);skew[2]=MatrixMath.v3Dot(row[1],row[2]);row[2]=MatrixMath.v3Combine(row[2],row[1],1.0,-skew[2]);scale[2]=MatrixMath.v3Length(row[2]);row[2]=MatrixMath.v3Normalize(row[2],scale[2]);skew[1]/=scale[2];skew[2]/=scale[2];var pdum3=MatrixMath.v3Cross(row[1],row[2]);if(MatrixMath.v3Dot(row[0],pdum3)<0){for(i=0;i<3;i++){scale[i]*=-1;row[i][0]*=-1;row[i][1]*=-1;row[i][2]*=-1;}}quaternion[0]=0.5*Math.sqrt(Math.max(1+row[0][0]-row[1][1]-row[2][2],0));quaternion[1]=0.5*Math.sqrt(Math.max(1-row[0][0]+row[1][1]-row[2][2],0));quaternion[2]=0.5*Math.sqrt(Math.max(1-row[0][0]-row[1][1]+row[2][2],0));quaternion[3]=0.5*Math.sqrt(Math.max(1+row[0][0]+row[1][1]+row[2][2],0));if(row[2][1]>row[1][2]){quaternion[0]=-quaternion[0];}if(row[0][2]>row[2][0]){quaternion[1]=-quaternion[1];}if(row[1][0]>row[0][1]){quaternion[2]=-quaternion[2];}var rotationDegrees;if(quaternion[0]<0.001&&quaternion[0]>=0&&quaternion[1]<0.001&&quaternion[1]>=0){rotationDegrees=[0,0,MatrixMath.roundTo3Places(Math.atan2(row[0][1],row[0][0])*180/Math.PI)];}else{rotationDegrees=MatrixMath.quaternionToDegreesXYZ(quaternion,matrix,row);}return{rotationDegrees:rotationDegrees,perspective:perspective,quaternion:quaternion,scale:scale,skew:skew,translation:translation,rotate:rotationDegrees[2],rotateX:rotationDegrees[0],rotateY:rotationDegrees[1],scaleX:scale[0],scaleY:scale[1],translateX:translation[0],translateY:translation[1]};}};module.exports=MatrixMath;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(MatrixMath,\"MatrixMath\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/MatrixMath.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/MatrixMath.js"],"names":["invariant","require","MatrixMath","createIdentityMatrix","createCopy","m","createOrthographic","left","right","bottom","top","near","far","a","b","c","tx","ty","tz","createFrustum","r_width","r_height","r_depth","x","y","A","B","C","D","createPerspective","fovInRadians","aspect","h","Math","tan","createTranslate2d","mat","reuseTranslate2dCommand","matrixCommand","reuseTranslate3dCommand","z","createScale","factor","reuseScaleCommand","reuseScale3dCommand","reusePerspectiveCommand","p","reuseScaleXCommand","reuseScaleYCommand","reuseScaleZCommand","reuseRotateXCommand","radians","cos","sin","reuseRotateYCommand","amount","reuseRotateZCommand","createRotateZ","reuseSkewXCommand","reuseSkewYCommand","multiplyInto","out","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","determinant","matrix","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","inverse","det","transpose","multiplyVectorByMatrix","v","vx","vy","vz","vw","v3Length","sqrt","v3Normalize","vector","im","v3Dot","v3Combine","aScale","bScale","v3Cross","quaternionToDegreesXYZ","q","row","qx","qy","qz","qw","qw2","qx2","qy2","qz2","test","unit","conv","PI","atan2","roundTo3Places","asin","n","arr","toString","split","round","decomposeMatrix","transformMatrix","length","perspective","quaternion","scale","skew","translation","perspectiveMatrix","i","push","j","value","rightHandSide","inversePerspectiveMatrix","transposedInversePerspectiveMatrix","pdum3","max","rotationDegrees","rotate","rotateX","rotateY","scaleX","scaleY","translateX","translateY","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @noflow\n */\n\n/* eslint-disable space-infix-ops */\n'use strict';\n\nconst invariant = require('fbjs/lib/invariant');\n\n/**\n * Memory conservative (mutative) matrix math utilities. Uses \"command\"\n * matrices, which are reusable.\n */\nconst MatrixMath = {\n  createIdentityMatrix: function() {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n  },\n\n  createCopy: function(m) {\n    return [\n      m[0],\n      m[1],\n      m[2],\n      m[3],\n      m[4],\n      m[5],\n      m[6],\n      m[7],\n      m[8],\n      m[9],\n      m[10],\n      m[11],\n      m[12],\n      m[13],\n      m[14],\n      m[15],\n    ];\n  },\n\n  createOrthographic: function(left, right, bottom, top, near, far) {\n    const a = 2 / (right - left);\n    const b = 2 / (top - bottom);\n    const c = -2 / (far - near);\n\n    const tx = -(right + left) / (right - left);\n    const ty = -(top + bottom) / (top - bottom);\n    const tz = -(far + near) / (far - near);\n\n    return [a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, tx, ty, tz, 1];\n  },\n\n  createFrustum: function(left, right, bottom, top, near, far) {\n    const r_width = 1 / (right - left);\n    const r_height = 1 / (top - bottom);\n    const r_depth = 1 / (near - far);\n    const x = 2 * (near * r_width);\n    const y = 2 * (near * r_height);\n    const A = (right + left) * r_width;\n    const B = (top + bottom) * r_height;\n    const C = (far + near) * r_depth;\n    const D = 2 * (far * near * r_depth);\n    return [x, 0, 0, 0, 0, y, 0, 0, A, B, C, -1, 0, 0, D, 0];\n  },\n\n  /**\n   * This create a perspective projection towards negative z\n   * Clipping the z range of [-near, -far]\n   *\n   * @param fovInRadians - field of view in randians\n   */\n  createPerspective: function(fovInRadians, aspect, near, far) {\n    const h = 1 / Math.tan(fovInRadians / 2);\n    const r_depth = 1 / (near - far);\n    const C = (far + near) * r_depth;\n    const D = 2 * (far * near * r_depth);\n    return [h / aspect, 0, 0, 0, 0, h, 0, 0, 0, 0, C, -1, 0, 0, D, 0];\n  },\n\n  createTranslate2d: function(x, y) {\n    const mat = MatrixMath.createIdentityMatrix();\n    MatrixMath.reuseTranslate2dCommand(mat, x, y);\n    return mat;\n  },\n\n  reuseTranslate2dCommand: function(matrixCommand, x, y) {\n    matrixCommand[12] = x;\n    matrixCommand[13] = y;\n  },\n\n  reuseTranslate3dCommand: function(matrixCommand, x, y, z) {\n    matrixCommand[12] = x;\n    matrixCommand[13] = y;\n    matrixCommand[14] = z;\n  },\n\n  createScale: function(factor) {\n    const mat = MatrixMath.createIdentityMatrix();\n    MatrixMath.reuseScaleCommand(mat, factor);\n    return mat;\n  },\n\n  reuseScaleCommand: function(matrixCommand, factor) {\n    matrixCommand[0] = factor;\n    matrixCommand[5] = factor;\n  },\n\n  reuseScale3dCommand: function(matrixCommand, x, y, z) {\n    matrixCommand[0] = x;\n    matrixCommand[5] = y;\n    matrixCommand[10] = z;\n  },\n\n  reusePerspectiveCommand: function(matrixCommand, p) {\n    matrixCommand[11] = -1 / p;\n  },\n\n  reuseScaleXCommand(matrixCommand, factor) {\n    matrixCommand[0] = factor;\n  },\n\n  reuseScaleYCommand(matrixCommand, factor) {\n    matrixCommand[5] = factor;\n  },\n\n  reuseScaleZCommand(matrixCommand, factor) {\n    matrixCommand[10] = factor;\n  },\n\n  reuseRotateXCommand: function(matrixCommand, radians) {\n    matrixCommand[5] = Math.cos(radians);\n    matrixCommand[6] = Math.sin(radians);\n    matrixCommand[9] = -Math.sin(radians);\n    matrixCommand[10] = Math.cos(radians);\n  },\n\n  reuseRotateYCommand: function(matrixCommand, amount) {\n    matrixCommand[0] = Math.cos(amount);\n    matrixCommand[2] = -Math.sin(amount);\n    matrixCommand[8] = Math.sin(amount);\n    matrixCommand[10] = Math.cos(amount);\n  },\n\n  // http://www.w3.org/TR/css3-transforms/#recomposing-to-a-2d-matrix\n  reuseRotateZCommand: function(matrixCommand, radians) {\n    matrixCommand[0] = Math.cos(radians);\n    matrixCommand[1] = Math.sin(radians);\n    matrixCommand[4] = -Math.sin(radians);\n    matrixCommand[5] = Math.cos(radians);\n  },\n\n  createRotateZ: function(radians) {\n    const mat = MatrixMath.createIdentityMatrix();\n    MatrixMath.reuseRotateZCommand(mat, radians);\n    return mat;\n  },\n\n  reuseSkewXCommand: function(matrixCommand, radians) {\n    matrixCommand[4] = Math.tan(radians);\n  },\n\n  reuseSkewYCommand: function(matrixCommand, radians) {\n    matrixCommand[1] = Math.tan(radians);\n  },\n\n  multiplyInto: function(out, a, b) {\n    const a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3],\n      a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7],\n      a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11],\n      a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n    let b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  },\n\n  determinant(matrix: Array<number>): number {\n    const [\n      m00,\n      m01,\n      m02,\n      m03,\n      m10,\n      m11,\n      m12,\n      m13,\n      m20,\n      m21,\n      m22,\n      m23,\n      m30,\n      m31,\n      m32,\n      m33,\n    ] = matrix;\n    return (\n      m03 * m12 * m21 * m30 -\n      m02 * m13 * m21 * m30 -\n      m03 * m11 * m22 * m30 +\n      m01 * m13 * m22 * m30 +\n      m02 * m11 * m23 * m30 -\n      m01 * m12 * m23 * m30 -\n      m03 * m12 * m20 * m31 +\n      m02 * m13 * m20 * m31 +\n      m03 * m10 * m22 * m31 -\n      m00 * m13 * m22 * m31 -\n      m02 * m10 * m23 * m31 +\n      m00 * m12 * m23 * m31 +\n      m03 * m11 * m20 * m32 -\n      m01 * m13 * m20 * m32 -\n      m03 * m10 * m21 * m32 +\n      m00 * m13 * m21 * m32 +\n      m01 * m10 * m23 * m32 -\n      m00 * m11 * m23 * m32 -\n      m02 * m11 * m20 * m33 +\n      m01 * m12 * m20 * m33 +\n      m02 * m10 * m21 * m33 -\n      m00 * m12 * m21 * m33 -\n      m01 * m10 * m22 * m33 +\n      m00 * m11 * m22 * m33\n    );\n  },\n\n  /**\n   * Inverse of a matrix. Multiplying by the inverse is used in matrix math\n   * instead of division.\n   *\n   * Formula from:\n   * http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n   */\n  inverse(matrix: Array<number>): Array<number> {\n    const det = MatrixMath.determinant(matrix);\n    if (!det) {\n      return matrix;\n    }\n    const [\n      m00,\n      m01,\n      m02,\n      m03,\n      m10,\n      m11,\n      m12,\n      m13,\n      m20,\n      m21,\n      m22,\n      m23,\n      m30,\n      m31,\n      m32,\n      m33,\n    ] = matrix;\n    return [\n      (m12 * m23 * m31 -\n        m13 * m22 * m31 +\n        m13 * m21 * m32 -\n        m11 * m23 * m32 -\n        m12 * m21 * m33 +\n        m11 * m22 * m33) /\n        det,\n      (m03 * m22 * m31 -\n        m02 * m23 * m31 -\n        m03 * m21 * m32 +\n        m01 * m23 * m32 +\n        m02 * m21 * m33 -\n        m01 * m22 * m33) /\n        det,\n      (m02 * m13 * m31 -\n        m03 * m12 * m31 +\n        m03 * m11 * m32 -\n        m01 * m13 * m32 -\n        m02 * m11 * m33 +\n        m01 * m12 * m33) /\n        det,\n      (m03 * m12 * m21 -\n        m02 * m13 * m21 -\n        m03 * m11 * m22 +\n        m01 * m13 * m22 +\n        m02 * m11 * m23 -\n        m01 * m12 * m23) /\n        det,\n      (m13 * m22 * m30 -\n        m12 * m23 * m30 -\n        m13 * m20 * m32 +\n        m10 * m23 * m32 +\n        m12 * m20 * m33 -\n        m10 * m22 * m33) /\n        det,\n      (m02 * m23 * m30 -\n        m03 * m22 * m30 +\n        m03 * m20 * m32 -\n        m00 * m23 * m32 -\n        m02 * m20 * m33 +\n        m00 * m22 * m33) /\n        det,\n      (m03 * m12 * m30 -\n        m02 * m13 * m30 -\n        m03 * m10 * m32 +\n        m00 * m13 * m32 +\n        m02 * m10 * m33 -\n        m00 * m12 * m33) /\n        det,\n      (m02 * m13 * m20 -\n        m03 * m12 * m20 +\n        m03 * m10 * m22 -\n        m00 * m13 * m22 -\n        m02 * m10 * m23 +\n        m00 * m12 * m23) /\n        det,\n      (m11 * m23 * m30 -\n        m13 * m21 * m30 +\n        m13 * m20 * m31 -\n        m10 * m23 * m31 -\n        m11 * m20 * m33 +\n        m10 * m21 * m33) /\n        det,\n      (m03 * m21 * m30 -\n        m01 * m23 * m30 -\n        m03 * m20 * m31 +\n        m00 * m23 * m31 +\n        m01 * m20 * m33 -\n        m00 * m21 * m33) /\n        det,\n      (m01 * m13 * m30 -\n        m03 * m11 * m30 +\n        m03 * m10 * m31 -\n        m00 * m13 * m31 -\n        m01 * m10 * m33 +\n        m00 * m11 * m33) /\n        det,\n      (m03 * m11 * m20 -\n        m01 * m13 * m20 -\n        m03 * m10 * m21 +\n        m00 * m13 * m21 +\n        m01 * m10 * m23 -\n        m00 * m11 * m23) /\n        det,\n      (m12 * m21 * m30 -\n        m11 * m22 * m30 -\n        m12 * m20 * m31 +\n        m10 * m22 * m31 +\n        m11 * m20 * m32 -\n        m10 * m21 * m32) /\n        det,\n      (m01 * m22 * m30 -\n        m02 * m21 * m30 +\n        m02 * m20 * m31 -\n        m00 * m22 * m31 -\n        m01 * m20 * m32 +\n        m00 * m21 * m32) /\n        det,\n      (m02 * m11 * m30 -\n        m01 * m12 * m30 -\n        m02 * m10 * m31 +\n        m00 * m12 * m31 +\n        m01 * m10 * m32 -\n        m00 * m11 * m32) /\n        det,\n      (m01 * m12 * m20 -\n        m02 * m11 * m20 +\n        m02 * m10 * m21 -\n        m00 * m12 * m21 -\n        m01 * m10 * m22 +\n        m00 * m11 * m22) /\n        det,\n    ];\n  },\n\n  /**\n   * Turns columns into rows and rows into columns.\n   */\n  transpose(m: Array<number>): Array<number> {\n    return [\n      m[0],\n      m[4],\n      m[8],\n      m[12],\n      m[1],\n      m[5],\n      m[9],\n      m[13],\n      m[2],\n      m[6],\n      m[10],\n      m[14],\n      m[3],\n      m[7],\n      m[11],\n      m[15],\n    ];\n  },\n\n  /**\n   * Based on: http://tog.acm.org/resources/GraphicsGems/gemsii/unmatrix.c\n   */\n  multiplyVectorByMatrix(v: Array<number>, m: Array<number>): Array<number> {\n    const [vx, vy, vz, vw] = v;\n    return [\n      vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12],\n      vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13],\n      vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14],\n      vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15],\n    ];\n  },\n\n  /**\n   * From: https://code.google.com/p/webgl-mjs/source/browse/mjs.js\n   */\n  v3Length(a: Array<number>): number {\n    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\n  },\n\n  /**\n   * Based on: https://code.google.com/p/webgl-mjs/source/browse/mjs.js\n   */\n  v3Normalize(vector: Array<number>, v3Length: number): Array<number> {\n    const im = 1 / (v3Length || MatrixMath.v3Length(vector));\n    return [vector[0] * im, vector[1] * im, vector[2] * im];\n  },\n\n  /**\n   * The dot product of a and b, two 3-element vectors.\n   * From: https://code.google.com/p/webgl-mjs/source/browse/mjs.js\n   */\n  v3Dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  },\n\n  /**\n   * From:\n   * http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp\n   */\n  v3Combine(\n    a: Array<number>,\n    b: Array<number>,\n    aScale: number,\n    bScale: number,\n  ): Array<number> {\n    return [\n      aScale * a[0] + bScale * b[0],\n      aScale * a[1] + bScale * b[1],\n      aScale * a[2] + bScale * b[2],\n    ];\n  },\n\n  /**\n   * From:\n   * http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp\n   */\n  v3Cross(a: Array<number>, b: Array<number>): Array<number> {\n    return [\n      a[1] * b[2] - a[2] * b[1],\n      a[2] * b[0] - a[0] * b[2],\n      a[0] * b[1] - a[1] * b[0],\n    ];\n  },\n\n  /**\n   * Based on:\n   * http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/\n   * and:\n   * http://quat.zachbennett.com/\n   *\n   * Note that this rounds degrees to the thousandth of a degree, due to\n   * floating point errors in the creation of the quaternion.\n   *\n   * Also note that this expects the qw value to be last, not first.\n   *\n   * Also, when researching this, remember that:\n   * yaw   === heading            === z-axis\n   * pitch === elevation/attitude === y-axis\n   * roll  === bank               === x-axis\n   */\n  quaternionToDegreesXYZ(q: Array<number>, matrix, row): Array<number> {\n    const [qx, qy, qz, qw] = q;\n    const qw2 = qw * qw;\n    const qx2 = qx * qx;\n    const qy2 = qy * qy;\n    const qz2 = qz * qz;\n    const test = qx * qy + qz * qw;\n    const unit = qw2 + qx2 + qy2 + qz2;\n    const conv = 180 / Math.PI;\n\n    if (test > 0.49999 * unit) {\n      return [0, 2 * Math.atan2(qx, qw) * conv, 90];\n    }\n    if (test < -0.49999 * unit) {\n      return [0, -2 * Math.atan2(qx, qw) * conv, -90];\n    }\n\n    return [\n      MatrixMath.roundTo3Places(\n        Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx2 - 2 * qz2) * conv,\n      ),\n      MatrixMath.roundTo3Places(\n        Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy2 - 2 * qz2) * conv,\n      ),\n      MatrixMath.roundTo3Places(Math.asin(2 * qx * qy + 2 * qz * qw) * conv),\n    ];\n  },\n\n  /**\n   * Based on:\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n   */\n  roundTo3Places(n: number): number {\n    const arr = n.toString().split('e');\n    return Math.round(arr[0] + 'e' + (arr[1] ? +arr[1] - 3 : 3)) * 0.001;\n  },\n\n  /**\n   * Decompose a matrix into separate transform values, for use on platforms\n   * where applying a precomposed matrix is not possible, and transforms are\n   * applied in an inflexible ordering (e.g. Android).\n   *\n   * Implementation based on\n   * http://www.w3.org/TR/css3-transforms/#decomposing-a-2d-matrix\n   * http://www.w3.org/TR/css3-transforms/#decomposing-a-3d-matrix\n   * which was based on\n   * http://tog.acm.org/resources/GraphicsGems/gemsii/unmatrix.c\n   */\n  decomposeMatrix(transformMatrix: Array<number>): ?Object {\n    invariant(\n      transformMatrix.length === 16,\n      'Matrix decomposition needs a list of 3d matrix values, received %s',\n      transformMatrix,\n    );\n\n    // output values\n    var perspective = [];\n    const quaternion = [];\n    const scale = [];\n    const skew = [];\n    const translation = [];\n\n    // create normalized, 2d array matrix\n    // and normalized 1d array perspectiveMatrix with redefined 4th column\n    if (!transformMatrix[15]) {\n      return;\n    }\n    const matrix = [];\n    const perspectiveMatrix = [];\n    for (var i = 0; i < 4; i++) {\n      matrix.push([]);\n      for (let j = 0; j < 4; j++) {\n        const value = transformMatrix[i * 4 + j] / transformMatrix[15];\n        matrix[i].push(value);\n        perspectiveMatrix.push(j === 3 ? 0 : value);\n      }\n    }\n    perspectiveMatrix[15] = 1;\n\n    // test for singularity of upper 3x3 part of the perspective matrix\n    if (!MatrixMath.determinant(perspectiveMatrix)) {\n      return;\n    }\n\n    // isolate perspective\n    if (matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0) {\n      // rightHandSide is the right hand side of the equation.\n      // rightHandSide is a vector, or point in 3d space relative to the origin.\n      const rightHandSide = [\n        matrix[0][3],\n        matrix[1][3],\n        matrix[2][3],\n        matrix[3][3],\n      ];\n\n      // Solve the equation by inverting perspectiveMatrix and multiplying\n      // rightHandSide by the inverse.\n      const inversePerspectiveMatrix = MatrixMath.inverse(perspectiveMatrix);\n      const transposedInversePerspectiveMatrix = MatrixMath.transpose(\n        inversePerspectiveMatrix,\n      );\n      var perspective = MatrixMath.multiplyVectorByMatrix(\n        rightHandSide,\n        transposedInversePerspectiveMatrix,\n      );\n    } else {\n      // no perspective\n      perspective[0] = perspective[1] = perspective[2] = 0;\n      perspective[3] = 1;\n    }\n\n    // translation is simple\n    for (var i = 0; i < 3; i++) {\n      translation[i] = matrix[3][i];\n    }\n\n    // Now get scale and shear.\n    // 'row' is a 3 element array of 3 component vectors\n    const row = [];\n    for (i = 0; i < 3; i++) {\n      row[i] = [matrix[i][0], matrix[i][1], matrix[i][2]];\n    }\n\n    // Compute X scale factor and normalize first row.\n    scale[0] = MatrixMath.v3Length(row[0]);\n    row[0] = MatrixMath.v3Normalize(row[0], scale[0]);\n\n    // Compute XY shear factor and make 2nd row orthogonal to 1st.\n    skew[0] = MatrixMath.v3Dot(row[0], row[1]);\n    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);\n\n    // Compute XY shear factor and make 2nd row orthogonal to 1st.\n    skew[0] = MatrixMath.v3Dot(row[0], row[1]);\n    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);\n\n    // Now, compute Y scale and normalize 2nd row.\n    scale[1] = MatrixMath.v3Length(row[1]);\n    row[1] = MatrixMath.v3Normalize(row[1], scale[1]);\n    skew[0] /= scale[1];\n\n    // Compute XZ and YZ shears, orthogonalize 3rd row\n    skew[1] = MatrixMath.v3Dot(row[0], row[2]);\n    row[2] = MatrixMath.v3Combine(row[2], row[0], 1.0, -skew[1]);\n    skew[2] = MatrixMath.v3Dot(row[1], row[2]);\n    row[2] = MatrixMath.v3Combine(row[2], row[1], 1.0, -skew[2]);\n\n    // Next, get Z scale and normalize 3rd row.\n    scale[2] = MatrixMath.v3Length(row[2]);\n    row[2] = MatrixMath.v3Normalize(row[2], scale[2]);\n    skew[1] /= scale[2];\n    skew[2] /= scale[2];\n\n    // At this point, the matrix (in rows) is orthonormal.\n    // Check for a coordinate system flip.  If the determinant\n    // is -1, then negate the matrix and the scaling factors.\n    const pdum3 = MatrixMath.v3Cross(row[1], row[2]);\n    if (MatrixMath.v3Dot(row[0], pdum3) < 0) {\n      for (i = 0; i < 3; i++) {\n        scale[i] *= -1;\n        row[i][0] *= -1;\n        row[i][1] *= -1;\n        row[i][2] *= -1;\n      }\n    }\n\n    // Now, get the rotations out\n    quaternion[0] =\n      0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));\n    quaternion[1] =\n      0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));\n    quaternion[2] =\n      0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));\n    quaternion[3] =\n      0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));\n\n    if (row[2][1] > row[1][2]) {\n      quaternion[0] = -quaternion[0];\n    }\n    if (row[0][2] > row[2][0]) {\n      quaternion[1] = -quaternion[1];\n    }\n    if (row[1][0] > row[0][1]) {\n      quaternion[2] = -quaternion[2];\n    }\n\n    // correct for occasional, weird Euler synonyms for 2d rotation\n    let rotationDegrees;\n    if (\n      quaternion[0] < 0.001 &&\n      quaternion[0] >= 0 &&\n      quaternion[1] < 0.001 &&\n      quaternion[1] >= 0\n    ) {\n      // this is a 2d rotation on the z-axis\n      rotationDegrees = [\n        0,\n        0,\n        MatrixMath.roundTo3Places(\n          (Math.atan2(row[0][1], row[0][0]) * 180) / Math.PI,\n        ),\n      ];\n    } else {\n      rotationDegrees = MatrixMath.quaternionToDegreesXYZ(\n        quaternion,\n        matrix,\n        row,\n      );\n    }\n\n    // expose both base data and convenience names\n    return {\n      rotationDegrees,\n      perspective,\n      quaternion,\n      scale,\n      skew,\n      translation,\n\n      rotate: rotationDegrees[2],\n      rotateX: rotationDegrees[0],\n      rotateY: rotationDegrees[1],\n      scaleX: scale[0],\n      scaleY: scale[1],\n      translateX: translation[0],\n      translateY: translation[1],\n    };\n  },\n};\n\nmodule.exports = MatrixMath;\n"]}]}
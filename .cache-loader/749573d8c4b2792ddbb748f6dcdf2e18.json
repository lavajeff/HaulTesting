{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/src/components/screens/LoginScreen/index.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/src/components/screens/LoginScreen/index.js","mtime":1539766352360},{"path":"/Users/jeffrey/HaulTesting/.babelrc","mtime":1539700126647},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf3=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _reactNativeSplashScreen=_interopRequireDefault(require(\"react-native-splash-screen\"));var _reactNativeCodePush=_interopRequireDefault(require(\"react-native-code-push\"));var _jsxFileName=\"/Users/jeffrey/HaulTesting/src/components/screens/LoginScreen/index.js\";(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var codePushOptions={checkFrequency:_reactNativeCodePush.default.CheckFrequency.ON_APP_RESUME,installMode:_reactNativeCodePush.default.InstallMode.ON_NEXT_RESUME};var LoginScreen=function(_Component){(0,_inherits2.default)(LoginScreen,_Component);function LoginScreen(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,LoginScreen);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf3.default)(LoginScreen)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.login=function(){_this.props.navigator.push({screen:\"HomeScreen\",title:\"Home\"});};_this.push=function(){console.log(\"pushinggggg\");_reactNativeCodePush.default.sync({updateDialog:true,installMode:_reactNativeCodePush.default.InstallMode.IMMEDIATE});};return _this;}(0,_createClass2.default)(LoginScreen,[{key:\"componentDidMount\",value:function componentDidMount(){_reactNativeSplashScreen.default.hide();}},{key:\"render\",value:function render(){return _react.default.createElement(_reactNative.View,{style:styles.container,__source:{fileName:_jsxFileName,lineNumber:35}},_react.default.createElement(_reactNative.Text,{style:styles.welcome,__source:{fileName:_jsxFileName,lineNumber:36}},\"Login screen\"),_react.default.createElement(_reactNative.TouchableOpacity,{style:styles.button,onPress:this.login,__source:{fileName:_jsxFileName,lineNumber:37}},_react.default.createElement(_reactNative.Text,{style:styles.buttonText,__source:{fileName:_jsxFileName,lineNumber:38}},\"Sign in\")),_react.default.createElement(_reactNative.TouchableOpacity,{style:styles.button,onPress:this.push,__source:{fileName:_jsxFileName,lineNumber:40}},_react.default.createElement(_reactNative.Text,{style:styles.buttonText,__source:{fileName:_jsxFileName,lineNumber:41}},\"Code Push\")),_react.default.createElement(_reactNative.Text,{__source:{fileName:_jsxFileName,lineNumber:43}},\"Added this via codepush\"),_react.default.createElement(_reactNative.Text,{__source:{fileName:_jsxFileName,lineNumber:44}},\"CODE PUSH WORKING BITCH\"));}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return LoginScreen;}(_react.Component);var styles=_reactNative.StyleSheet.create({container:{flex:1,justifyContent:\"center\",alignItems:\"center\",backgroundColor:\"#F5FCFF\"},welcome:{fontSize:20,textAlign:\"center\",margin:10},button:{padding:20,backgroundColor:\"grey\"},buttonText:{color:\"white\"}});LoginScreen=(0,_reactNativeCodePush.default)(codePushOptions)(LoginScreen);var _default=LoginScreen;var _default2=_default;exports.default=_default2;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(codePushOptions,\"codePushOptions\",\"/Users/jeffrey/HaulTesting/src/components/screens/LoginScreen/index.js\");reactHotLoader.register(LoginScreen,\"LoginScreen\",\"/Users/jeffrey/HaulTesting/src/components/screens/LoginScreen/index.js\");reactHotLoader.register(styles,\"styles\",\"/Users/jeffrey/HaulTesting/src/components/screens/LoginScreen/index.js\");reactHotLoader.register(_default,\"default\",\"/Users/jeffrey/HaulTesting/src/components/screens/LoginScreen/index.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/src/components/screens/LoginScreen/index.js"],"names":["codePushOptions","checkFrequency","codePush","CheckFrequency","ON_APP_RESUME","installMode","InstallMode","ON_NEXT_RESUME","LoginScreen","login","props","navigator","push","screen","title","console","log","sync","updateDialog","IMMEDIATE","SplashScreen","hide","styles","container","welcome","button","buttonText","Component","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","textAlign","margin","padding","color"],"mappings":"ktBAAA,qDACA,yCACA,2FACA,mF,oMAEA,GAAMA,CAAAA,eAAe,CAAG,CACtBC,cAAc,CAAEC,6BAASC,cAAT,CAAwBC,aADlB,CAEtBC,WAAW,CAAEH,6BAASI,WAAT,CAAqBC,cAFZ,CAAxB,C,GAKMC,CAAAA,W,0bAOJC,K,CAAQ,UAAM,CACZ,MAAKC,KAAL,CAAWC,SAAX,CAAqBC,IAArB,CAA0B,CACxBC,MAAM,CAAE,YADgB,CAExBC,KAAK,CAAE,MAFiB,CAA1B,EAID,C,OAEDF,I,CAAO,UAAM,CACXG,OAAO,CAACC,GAAR,CAAY,aAAZ,EACAd,6BAASe,IAAT,CAAc,CACZC,YAAY,CAAE,IADF,CAEZb,WAAW,CAAEH,6BAASI,WAAT,CAAqBa,SAFtB,CAAd,EAID,C,iHAnBmB,CAGlBC,iCAAaC,IAAb,GACD,C,uCAiBQ,CACP,MACE,8BAAC,iBAAD,EAAM,KAAK,CAAEC,MAAM,CAACC,SAApB,iDACE,6BAAC,iBAAD,EAAM,KAAK,CAAED,MAAM,CAACE,OAApB,gEADF,CAEE,6BAAC,6BAAD,EAAkB,KAAK,CAAEF,MAAM,CAACG,MAAhC,CAAwC,OAAO,CAAE,KAAKhB,KAAtD,iDACE,6BAAC,iBAAD,EAAM,KAAK,CAAEa,MAAM,CAACI,UAApB,2DADF,CAFF,CAKE,6BAAC,6BAAD,EAAkB,KAAK,CAAEJ,MAAM,CAACG,MAAhC,CAAwC,OAAO,CAAE,KAAKb,IAAtD,iDACE,6BAAC,iBAAD,EAAM,KAAK,CAAEU,MAAM,CAACI,UAApB,6DADF,CALF,CAQE,6BAAC,iBAAD,4EARF,CASE,6BAAC,iBAAD,4EATF,CADF,CAaD,C,mJApCuBC,gB,EAuC1B,GAAML,CAAAA,MAAM,CAAGM,wBAAWC,MAAX,CAAkB,CAC/BN,SAAS,CAAE,CACTO,IAAI,CAAE,CADG,CAETC,cAAc,CAAE,QAFP,CAGTC,UAAU,CAAE,QAHH,CAITC,eAAe,CAAE,SAJR,CADoB,CAO/BT,OAAO,CAAE,CACPU,QAAQ,CAAE,EADH,CAEPC,SAAS,CAAE,QAFJ,CAGPC,MAAM,CAAE,EAHD,CAPsB,CAY/BX,MAAM,CAAE,CACNY,OAAO,CAAE,EADH,CAENJ,eAAe,CAAE,MAFX,CAZuB,CAgB/BP,UAAU,CAAE,CACVY,KAAK,CAAE,OADG,CAhBmB,CAAlB,CAAf,CAqBA9B,WAAW,CAAG,iCAASR,eAAT,EAA0BQ,WAA1B,CAAd,C,aACeA,W,kOAlETR,e,qHAKAQ,W,iHAuCAc,M","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\nimport SplashScreen from \"react-native-splash-screen\";\nimport codePush from \"react-native-code-push\";\n\nconst codePushOptions = {\n  checkFrequency: codePush.CheckFrequency.ON_APP_RESUME,\n  installMode: codePush.InstallMode.ON_NEXT_RESUME\n};\n\nclass LoginScreen extends Component {\n  componentDidMount() {\n    // do stuff while splash screen is shown\n    // After having done stuff (such as async tasks) hide the splash screen\n    SplashScreen.hide();\n  }\n\n  login = () => {\n    this.props.navigator.push({\n      screen: \"HomeScreen\",\n      title: \"Home\"\n    });\n  };\n\n  push = () => {\n    console.log(\"pushinggggg\");\n    codePush.sync({\n      updateDialog: true,\n      installMode: codePush.InstallMode.IMMEDIATE\n    });\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.welcome}>Login screen</Text>\n        <TouchableOpacity style={styles.button} onPress={this.login}>\n          <Text style={styles.buttonText}>Sign in</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.button} onPress={this.push}>\n          <Text style={styles.buttonText}>Code Push</Text>\n        </TouchableOpacity>\n        <Text>Added this via codepush</Text>\n        <Text>CODE PUSH WORKING BITCH</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#F5FCFF\"\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: \"center\",\n    margin: 10\n  },\n  button: {\n    padding: 20,\n    backgroundColor: \"grey\"\n  },\n  buttonText: {\n    color: \"white\"\n  }\n});\n\nLoginScreen = codePush(codePushOptions)(LoginScreen);\nexport default LoginScreen;\n"]}]}
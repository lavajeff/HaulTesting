{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.ios.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.ios.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf3=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _jsxFileName=\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.ios.js\";(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var React=require('React');var invariant=require('fbjs/lib/invariant');var StyleSheet=require('StyleSheet');var View=require('View');var requireNativeComponent=require('requireNativeComponent');var RCTDatePickerIOS=requireNativeComponent('RCTDatePicker');var DatePickerIOS=function(_React$Component){(0,_inherits2.default)(DatePickerIOS,_React$Component);function DatePickerIOS(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,DatePickerIOS);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf3.default)(DatePickerIOS)).call.apply(_getPrototypeOf2,[this].concat(args)));_this._picker=null;_this._onChange=function(event){var nativeTimeStamp=event.nativeEvent.timestamp;_this.props.onDateChange&&_this.props.onDateChange(new Date(nativeTimeStamp));_this.props.onChange&&_this.props.onChange(event);};return _this;}(0,_createClass2.default)(DatePickerIOS,[{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(this.props.date){var propsTimeStamp=this.props.date.getTime();if(this._picker){this._picker.setNativeProps({date:propsTimeStamp});}}}},{key:\"render\",value:function render(){var _this2=this;var props=this.props;invariant(props.date||props.initialDate,'A selected date or initial date should be specified.');return React.createElement(View,{style:props.style,__source:{fileName:_jsxFileName,lineNumber:144}},React.createElement(RCTDatePickerIOS,{ref:function ref(picker){_this2._picker=picker;},style:styles.datePickerIOS,date:props.date?props.date.getTime():props.initialDate?props.initialDate.getTime():undefined,locale:props.locale?props.locale:undefined,maximumDate:props.maximumDate?props.maximumDate.getTime():undefined,minimumDate:props.minimumDate?props.minimumDate.getTime():undefined,mode:props.mode,minuteInterval:props.minuteInterval,timeZoneOffsetInMinutes:props.timeZoneOffsetInMinutes,onChange:this._onChange,onStartShouldSetResponder:function onStartShouldSetResponder(){return true;},onResponderTerminationRequest:function onResponderTerminationRequest(){return false;},__source:{fileName:_jsxFileName,lineNumber:145}}));}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return DatePickerIOS;}(React.Component);DatePickerIOS.DefaultProps={mode:'datetime'};var styles=StyleSheet.create({datePickerIOS:{height:216}});module.exports=DatePickerIOS;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(RCTDatePickerIOS,\"RCTDatePickerIOS\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.ios.js\");reactHotLoader.register(DatePickerIOS,\"DatePickerIOS\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.ios.js\");reactHotLoader.register(styles,\"styles\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.ios.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.ios.js"],"names":["React","require","invariant","StyleSheet","View","requireNativeComponent","RCTDatePickerIOS","DatePickerIOS","_picker","_onChange","event","nativeTimeStamp","nativeEvent","timestamp","props","onDateChange","Date","onChange","date","propsTimeStamp","getTime","setNativeProps","initialDate","style","picker","styles","datePickerIOS","undefined","locale","maximumDate","minimumDate","mode","minuteInterval","timeZoneOffsetInMinutes","Component","DefaultProps","create","height","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * This is a controlled component version of RCTDatePickerIOS\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('React');\nconst invariant = require('fbjs/lib/invariant');\nconst StyleSheet = require('StyleSheet');\nconst View = require('View');\n\nconst requireNativeComponent = require('requireNativeComponent');\n\nimport type {ViewProps} from 'ViewPropTypes';\n\nconst RCTDatePickerIOS = requireNativeComponent('RCTDatePicker');\n\ntype Event = Object;\n\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * The currently selected date.\n   */\n  date?: ?Date,\n\n  /**\n   * Provides an initial value that will change when the user starts selecting\n   * a date. It is useful for simple use-cases where you do not want to deal\n   * with listening to events and updating the date prop to keep the\n   * controlled state in sync. The controlled state has known bugs which\n   * causes it to go out of sync with native. The initialDate prop is intended\n   * to allow you to have native be source of truth.\n   */\n  initialDate?: ?Date,\n\n  /**\n   * The date picker locale.\n   */\n  locale?: ?string,\n\n  /**\n   * Maximum date.\n   *\n   * Restricts the range of possible date/time values.\n   */\n  maximumDate?: ?Date,\n\n  /**\n   * Minimum date.\n   *\n   * Restricts the range of possible date/time values.\n   */\n  minimumDate?: ?Date,\n\n  /**\n   * The interval at which minutes can be selected.\n   */\n  minuteInterval?: ?(1 | 2 | 3 | 4 | 5 | 6 | 10 | 12 | 15 | 20 | 30),\n\n  /**\n   * The date picker mode.\n   */\n  mode?: ?('date' | 'time' | 'datetime'),\n\n  /**\n   * Date change handler.\n   *\n   * This is called when the user changes the date or time in the UI.\n   * The first and only argument is an Event. For getting the date the picker\n   * was changed to, use onDateChange instead.\n   */\n  onChange?: ?(event: Event) => void,\n\n  /**\n   * Date change handler.\n   *\n   * This is called when the user changes the date or time in the UI.\n   * The first and only argument is a Date object representing the new\n   * date and time.\n   */\n  onDateChange: (date: Date) => void,\n\n  /**\n   * Timezone offset in minutes.\n   *\n   * By default, the date picker will use the device's timezone. With this\n   * parameter, it is possible to force a certain timezone offset. For\n   * instance, to show times in Pacific Standard Time, pass -7 * 60.\n   */\n  timeZoneOffsetInMinutes?: ?number,\n|}>;\n\n/**\n * Use `DatePickerIOS` to render a date/time picker (selector) on iOS.  This is\n * a controlled component, so you must hook in to the `onDateChange` callback\n * and update the `date` prop in order for the component to update, otherwise\n * the user's change will be reverted immediately to reflect `props.date` as the\n * source of truth.\n */\nclass DatePickerIOS extends React.Component<Props> {\n  static DefaultProps = {\n    mode: 'datetime',\n  };\n\n  // $FlowFixMe How to type a native component to be able to call setNativeProps\n  _picker: ?React.ElementRef<typeof RCTDatePickerIOS> = null;\n\n  componentDidUpdate() {\n    if (this.props.date) {\n      const propsTimeStamp = this.props.date.getTime();\n      if (this._picker) {\n        this._picker.setNativeProps({\n          date: propsTimeStamp,\n        });\n      }\n    }\n  }\n\n  _onChange = (event: Event) => {\n    const nativeTimeStamp = event.nativeEvent.timestamp;\n    this.props.onDateChange &&\n      this.props.onDateChange(new Date(nativeTimeStamp));\n    this.props.onChange && this.props.onChange(event);\n  };\n\n  render() {\n    const props = this.props;\n    invariant(\n      props.date || props.initialDate,\n      'A selected date or initial date should be specified.',\n    );\n    return (\n      <View style={props.style}>\n        <RCTDatePickerIOS\n          ref={picker => {\n            this._picker = picker;\n          }}\n          style={styles.datePickerIOS}\n          date={\n            props.date\n              ? props.date.getTime()\n              : props.initialDate\n                ? props.initialDate.getTime()\n                : undefined\n          }\n          locale={props.locale ? props.locale : undefined}\n          maximumDate={\n            props.maximumDate ? props.maximumDate.getTime() : undefined\n          }\n          minimumDate={\n            props.minimumDate ? props.minimumDate.getTime() : undefined\n          }\n          mode={props.mode}\n          minuteInterval={props.minuteInterval}\n          timeZoneOffsetInMinutes={props.timeZoneOffsetInMinutes}\n          onChange={this._onChange}\n          onStartShouldSetResponder={() => true}\n          onResponderTerminationRequest={() => false}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  datePickerIOS: {\n    height: 216,\n  },\n});\n\nmodule.exports = DatePickerIOS;\n"]}]}
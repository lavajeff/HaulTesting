{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Blob/File.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Blob/File.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var Blob=require('Blob');var invariant=require('fbjs/lib/invariant');var File=function(_Blob){(0,_inherits2.default)(File,_Blob);function File(parts,name,options){var _this;(0,_classCallCheck2.default)(this,File);invariant(parts!=null&&name!=null,'Failed to construct `File`: Must pass both `parts` and `name` arguments.');_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(File).call(this,parts,options));_this.data.name=name;return _this;}(0,_createClass2.default)(File,[{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}},{key:\"name\",get:function get(){invariant(this.data.name!=null,'Files must have a name set.');return this.data.name;}},{key:\"lastModified\",get:function get(){return this.data.lastModified||0;}}]);return File;}(Blob);module.exports=File;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(File,\"File\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Blob/File.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Blob/File.js"],"names":["Blob","require","invariant","File","parts","name","options","data","lastModified","module","exports"],"mappings":"AASA,a,upBAEA,GAAMA,CAAAA,IAAI,CAAGC,OAAO,CAAC,MAAD,CAApB,CAEA,GAAMC,CAAAA,SAAS,CAAGD,OAAO,CAAC,oBAAD,CAAzB,C,GAOME,CAAAA,I,oDAIJ,cACEC,KADF,CAEEC,IAFF,CAGEC,OAHF,CAIE,mDACAJ,SAAS,CACPE,KAAK,EAAI,IAAT,EAAiBC,IAAI,EAAI,IADlB,CAEP,0EAFO,CAAT,CAKA,gGAAMD,KAAN,CAAaE,OAAb,GACA,MAAKC,IAAL,CAAUF,IAAV,CAAiBA,IAAjB,CAPA,aAQD,C,wLAKkB,CACjBH,SAAS,CAAC,KAAKK,IAAL,CAAUF,IAAV,EAAkB,IAAnB,CAAyB,6BAAzB,CAAT,CACA,MAAO,MAAKE,IAAL,CAAUF,IAAjB,CACD,C,wCAK0B,CACzB,MAAO,MAAKE,IAAL,CAAUC,YAAV,EAA0B,CAAjC,CACD,C,kBA/BgBR,I,EAkCnBS,MAAM,CAACC,OAAP,CAAiBP,IAAjB,C,gLAlCMA,I","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst Blob = require('Blob');\n\nconst invariant = require('fbjs/lib/invariant');\n\nimport type {BlobOptions} from 'BlobTypes';\n\n/**\n * The File interface provides information about files.\n */\nclass File extends Blob {\n  /**\n   * Constructor for JS consumers.\n   */\n  constructor(\n    parts: Array<Blob | string>,\n    name: string,\n    options?: BlobOptions,\n  ) {\n    invariant(\n      parts != null && name != null,\n      'Failed to construct `File`: Must pass both `parts` and `name` arguments.',\n    );\n\n    super(parts, options);\n    this.data.name = name;\n  }\n\n  /**\n   * Name of the file.\n   */\n  get name(): string {\n    invariant(this.data.name != null, 'Files must have a name set.');\n    return this.data.name;\n  }\n\n  /*\n   * Last modified time of the file.\n   */\n  get lastModified(): number {\n    return this.data.lastModified || 0;\n  }\n}\n\nmodule.exports = File;\n"]}]}
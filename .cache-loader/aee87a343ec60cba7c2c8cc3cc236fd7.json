{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var RCTActionSheetManager=require('NativeModules').ActionSheetManager;var invariant=require('fbjs/lib/invariant');var processColor=require('processColor');var ActionSheetIOS={showActionSheetWithOptions:function showActionSheetWithOptions(options,callback){invariant(typeof options==='object'&&options!==null,'Options must be a valid object');invariant(typeof callback==='function','Must provide a valid callback');RCTActionSheetManager.showActionSheetWithOptions((0,_objectSpread2.default)({},options,{tintColor:processColor(options.tintColor)}),callback);},showShareActionSheetWithOptions:function showShareActionSheetWithOptions(options,failureCallback,successCallback){invariant(typeof options==='object'&&options!==null,'Options must be a valid object');invariant(typeof failureCallback==='function','Must provide a valid failureCallback');invariant(typeof successCallback==='function','Must provide a valid successCallback');RCTActionSheetManager.showShareActionSheetWithOptions((0,_objectSpread2.default)({},options,{tintColor:processColor(options.tintColor)}),failureCallback,successCallback);}};module.exports=ActionSheetIOS;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(RCTActionSheetManager,\"RCTActionSheetManager\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.js\");reactHotLoader.register(ActionSheetIOS,\"ActionSheetIOS\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.js"],"names":["RCTActionSheetManager","require","ActionSheetManager","invariant","processColor","ActionSheetIOS","showActionSheetWithOptions","options","callback","tintColor","showShareActionSheetWithOptions","failureCallback","successCallback","module","exports"],"mappings":"AASA,a,uRAEA,GAAMA,CAAAA,qBAAqB,CAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,kBAAvD,CAEA,GAAMC,CAAAA,SAAS,CAAGF,OAAO,CAAC,oBAAD,CAAzB,CACA,GAAMG,CAAAA,YAAY,CAAGH,OAAO,CAAC,cAAD,CAA5B,CAOA,GAAMI,CAAAA,cAAc,CAAG,CAiBrBC,0BAjBqB,qCAkBnBC,OAlBmB,CA2BnBC,QA3BmB,CA4BnB,CACAL,SAAS,CACP,MAAOI,CAAAA,OAAP,GAAmB,QAAnB,EAA+BA,OAAO,GAAK,IADpC,CAEP,gCAFO,CAAT,CAIAJ,SAAS,CAAC,MAAOK,CAAAA,QAAP,GAAoB,UAArB,CAAiC,+BAAjC,CAAT,CAEAR,qBAAqB,CAACM,0BAAtB,+BACMC,OADN,EACeE,SAAS,CAAEL,YAAY,CAACG,OAAO,CAACE,SAAT,CADtC,GAEED,QAFF,EAID,CAvCoB,CAgErBE,+BAhEqB,0CAiEnBH,OAjEmB,CAkEnBI,eAlEmB,CAmEnBC,eAnEmB,CAoEnB,CACAT,SAAS,CACP,MAAOI,CAAAA,OAAP,GAAmB,QAAnB,EAA+BA,OAAO,GAAK,IADpC,CAEP,gCAFO,CAAT,CAIAJ,SAAS,CACP,MAAOQ,CAAAA,eAAP,GAA2B,UADpB,CAEP,sCAFO,CAAT,CAIAR,SAAS,CACP,MAAOS,CAAAA,eAAP,GAA2B,UADpB,CAEP,sCAFO,CAAT,CAIAZ,qBAAqB,CAACU,+BAAtB,+BACMH,OADN,EACeE,SAAS,CAAEL,YAAY,CAACG,OAAO,CAACE,SAAT,CADtC,GAEEE,eAFF,CAGEC,eAHF,EAKD,CAtFoB,CAAvB,CAyFAC,MAAM,CAACC,OAAP,CAAiBT,cAAjB,C,gLAnGML,qB,oJAUAK,c","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst RCTActionSheetManager = require('NativeModules').ActionSheetManager;\n\nconst invariant = require('fbjs/lib/invariant');\nconst processColor = require('processColor');\n\n/**\n * Display action sheets and share sheets on iOS.\n *\n * See http://facebook.github.io/react-native/docs/actionsheetios.html\n */\nconst ActionSheetIOS = {\n  /**\n   * Display an iOS action sheet.\n   *\n   * The `options` object must contain one or more of:\n   *\n   * - `options` (array of strings) - a list of button titles (required)\n   * - `cancelButtonIndex` (int) - index of cancel button in `options`\n   * - `destructiveButtonIndex` (int) - index of destructive button in `options`\n   * - `title` (string) - a title to show above the action sheet\n   * - `message` (string) - a message to show below the title\n   *\n   * The 'callback' function takes one parameter, the zero-based index\n   * of the selected item.\n   *\n   * See http://facebook.github.io/react-native/docs/actionsheetios.html#showactionsheetwithoptions\n   */\n  showActionSheetWithOptions(\n    options: {|\n      +title?: ?string,\n      +message?: ?string,\n      +options: Array<string>,\n      +destructiveButtonIndex?: ?number,\n      +cancelButtonIndex?: ?number,\n      +anchor?: ?number,\n      +tintColor?: number | string,\n    |},\n    callback: (buttonIndex: number) => void,\n  ) {\n    invariant(\n      typeof options === 'object' && options !== null,\n      'Options must be a valid object',\n    );\n    invariant(typeof callback === 'function', 'Must provide a valid callback');\n\n    RCTActionSheetManager.showActionSheetWithOptions(\n      {...options, tintColor: processColor(options.tintColor)},\n      callback,\n    );\n  },\n\n  /**\n   * Display the iOS share sheet. The `options` object should contain\n   * one or both of `message` and `url` and can additionally have\n   * a `subject` or `excludedActivityTypes`:\n   *\n   * - `url` (string) - a URL to share\n   * - `message` (string) - a message to share\n   * - `subject` (string) - a subject for the message\n   * - `excludedActivityTypes` (array) - the activities to exclude from\n   *   the ActionSheet\n   * - `tintColor` (color) - tint color of the buttons\n   *\n   * The 'failureCallback' function takes one parameter, an error object.\n   * The only property defined on this object is an optional `stack` property\n   * of type `string`.\n   *\n   * The 'successCallback' function takes two parameters:\n   *\n   * - a boolean value signifying success or failure\n   * - a string that, in the case of success, indicates the method of sharing\n   *\n   * See http://facebook.github.io/react-native/docs/actionsheetios.html#showshareactionsheetwithoptions\n   */\n  showShareActionSheetWithOptions(\n    options: Object,\n    failureCallback: Function,\n    successCallback: Function,\n  ) {\n    invariant(\n      typeof options === 'object' && options !== null,\n      'Options must be a valid object',\n    );\n    invariant(\n      typeof failureCallback === 'function',\n      'Must provide a valid failureCallback',\n    );\n    invariant(\n      typeof successCallback === 'function',\n      'Must provide a valid successCallback',\n    );\n    RCTActionSheetManager.showShareActionSheetWithOptions(\n      {...options, tintColor: processColor(options.tintColor)},\n      failureCallback,\n      successCallback,\n    );\n  },\n};\n\nmodule.exports = ActionSheetIOS;\n"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/document/selection/DocumentSelectionState.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/document/selection/DocumentSelectionState.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var mixInEventEmitter=require('mixInEventEmitter');var DocumentSelectionState=function(){function DocumentSelectionState(anchor,focus){(0,_classCallCheck2.default)(this,DocumentSelectionState);this._anchorOffset=anchor;this._focusOffset=focus;this._hasFocus=false;}(0,_createClass2.default)(DocumentSelectionState,[{key:\"update\",value:function update(anchor,focus){if(this._anchorOffset!==anchor||this._focusOffset!==focus){this._anchorOffset=anchor;this._focusOffset=focus;this.emit('update');}}},{key:\"constrainLength\",value:function constrainLength(maxLength){this.update(Math.min(this._anchorOffset,maxLength),Math.min(this._focusOffset,maxLength));}},{key:\"focus\",value:function focus(){if(!this._hasFocus){this._hasFocus=true;this.emit('focus');}}},{key:\"blur\",value:function blur(){if(this._hasFocus){this._hasFocus=false;this.emit('blur');}}},{key:\"hasFocus\",value:function hasFocus(){return this._hasFocus;}},{key:\"isCollapsed\",value:function isCollapsed(){return this._anchorOffset===this._focusOffset;}},{key:\"isBackward\",value:function isBackward(){return this._anchorOffset>this._focusOffset;}},{key:\"getAnchorOffset\",value:function getAnchorOffset(){return this._hasFocus?this._anchorOffset:null;}},{key:\"getFocusOffset\",value:function getFocusOffset(){return this._hasFocus?this._focusOffset:null;}},{key:\"getStartOffset\",value:function getStartOffset(){return this._hasFocus?Math.min(this._anchorOffset,this._focusOffset):null;}},{key:\"getEndOffset\",value:function getEndOffset(){return this._hasFocus?Math.max(this._anchorOffset,this._focusOffset):null;}},{key:\"overlaps\",value:function overlaps(start,end){return this.hasFocus()&&this.getStartOffset()<=end&&start<=this.getEndOffset();}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return DocumentSelectionState;}();mixInEventEmitter(DocumentSelectionState,{blur:true,focus:true,update:true});module.exports=DocumentSelectionState;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(DocumentSelectionState,\"DocumentSelectionState\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/document/selection/DocumentSelectionState.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/document/selection/DocumentSelectionState.js"],"names":["mixInEventEmitter","require","DocumentSelectionState","anchor","focus","_anchorOffset","_focusOffset","_hasFocus","emit","maxLength","update","Math","min","max","start","end","hasFocus","getStartOffset","getEndOffset","blur","module","exports"],"mappings":"AAUA,a,mXAEA,GAAMA,CAAAA,iBAAiB,CAAGC,OAAO,CAAC,mBAAD,CAAjC,C,GAWMC,CAAAA,sB,YAKJ,gCAAYC,MAAZ,CAAoBC,KAApB,CAA2B,2DACzB,KAAKC,aAAL,CAAqBF,MAArB,CACA,KAAKG,YAAL,CAAoBF,KAApB,CACA,KAAKG,SAAL,CAAiB,KAAjB,CACD,C,sFASMJ,M,CAAQC,K,CAAO,CACpB,GAAI,KAAKC,aAAL,GAAuBF,MAAvB,EAAiC,KAAKG,YAAL,GAAsBF,KAA3D,CAAkE,CAChE,KAAKC,aAAL,CAAqBF,MAArB,CACA,KAAKG,YAAL,CAAoBF,KAApB,CACA,KAAKI,IAAL,CAAU,QAAV,EACD,CACF,C,wDAQeC,S,CAAW,CACzB,KAAKC,MAAL,CACEC,IAAI,CAACC,GAAL,CAAS,KAAKP,aAAd,CAA6BI,SAA7B,CADF,CAEEE,IAAI,CAACC,GAAL,CAAS,KAAKN,YAAd,CAA4BG,SAA5B,CAFF,EAID,C,qCAEO,CACN,GAAI,CAAC,KAAKF,SAAV,CAAqB,CACnB,KAAKA,SAAL,CAAiB,IAAjB,CACA,KAAKC,IAAL,CAAU,OAAV,EACD,CACF,C,mCAEM,CACL,GAAI,KAAKD,SAAT,CAAoB,CAClB,KAAKA,SAAL,CAAiB,KAAjB,CACA,KAAKC,IAAL,CAAU,MAAV,EACD,CACF,C,2CAKU,CACT,MAAO,MAAKD,SAAZ,CACD,C,iDAKa,CACZ,MAAO,MAAKF,aAAL,GAAuB,KAAKC,YAAnC,CACD,C,+CAKY,CACX,MAAO,MAAKD,aAAL,CAAqB,KAAKC,YAAjC,CACD,C,yDAKiB,CAChB,MAAO,MAAKC,SAAL,CAAiB,KAAKF,aAAtB,CAAsC,IAA7C,CACD,C,uDAKgB,CACf,MAAO,MAAKE,SAAL,CAAiB,KAAKD,YAAtB,CAAqC,IAA5C,CACD,C,uDAKgB,CACf,MAAO,MAAKC,SAAL,CACHI,IAAI,CAACC,GAAL,CAAS,KAAKP,aAAd,CAA6B,KAAKC,YAAlC,CADG,CAEH,IAFJ,CAGD,C,mDAKc,CACb,MAAO,MAAKC,SAAL,CACHI,IAAI,CAACE,GAAL,CAAS,KAAKR,aAAd,CAA6B,KAAKC,YAAlC,CADG,CAEH,IAFJ,CAGD,C,0CAOQQ,K,CAAOC,G,CAAK,CACnB,MACE,MAAKC,QAAL,IACA,KAAKC,cAAL,IAAyBF,GADzB,EAEAD,KAAK,EAAI,KAAKI,YAAL,EAHX,CAKD,C,gKAGHlB,iBAAiB,CAACE,sBAAD,CAAyB,CACxCiB,IAAI,CAAE,IADkC,CAExCf,KAAK,CAAE,IAFiC,CAGxCM,MAAM,CAAE,IAHgC,CAAzB,CAAjB,CAMAU,MAAM,CAACC,OAAP,CAAiBnB,sBAAjB,C,gLA9HMA,sB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @typechecks\n */\n\n'use strict';\n\nconst mixInEventEmitter = require('mixInEventEmitter');\n\n/**\n * DocumentSelectionState is responsible for maintaining selection information\n * for a document.\n *\n * It is intended for use by AbstractTextEditor-based components for\n * identifying the appropriate start/end positions to modify the\n * DocumentContent, and for programmatically setting browser selection when\n * components re-render.\n */\nclass DocumentSelectionState {\n  /**\n   * @param {number} anchor\n   * @param {number} focus\n   */\n  constructor(anchor, focus) {\n    this._anchorOffset = anchor;\n    this._focusOffset = focus;\n    this._hasFocus = false;\n  }\n\n  /**\n   * Apply an update to the state. If either offset value has changed,\n   * set the values and emit the `change` event. Otherwise no-op.\n   *\n   * @param {number} anchor\n   * @param {number} focus\n   */\n  update(anchor, focus) {\n    if (this._anchorOffset !== anchor || this._focusOffset !== focus) {\n      this._anchorOffset = anchor;\n      this._focusOffset = focus;\n      this.emit('update');\n    }\n  }\n\n  /**\n   * Given a max text length, constrain our selection offsets to ensure\n   * that the selection remains strictly within the text range.\n   *\n   * @param {number} maxLength\n   */\n  constrainLength(maxLength) {\n    this.update(\n      Math.min(this._anchorOffset, maxLength),\n      Math.min(this._focusOffset, maxLength),\n    );\n  }\n\n  focus() {\n    if (!this._hasFocus) {\n      this._hasFocus = true;\n      this.emit('focus');\n    }\n  }\n\n  blur() {\n    if (this._hasFocus) {\n      this._hasFocus = false;\n      this.emit('blur');\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasFocus() {\n    return this._hasFocus;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCollapsed() {\n    return this._anchorOffset === this._focusOffset;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isBackward() {\n    return this._anchorOffset > this._focusOffset;\n  }\n\n  /**\n   * @return {?number}\n   */\n  getAnchorOffset() {\n    return this._hasFocus ? this._anchorOffset : null;\n  }\n\n  /**\n   * @return {?number}\n   */\n  getFocusOffset() {\n    return this._hasFocus ? this._focusOffset : null;\n  }\n\n  /**\n   * @return {?number}\n   */\n  getStartOffset() {\n    return this._hasFocus\n      ? Math.min(this._anchorOffset, this._focusOffset)\n      : null;\n  }\n\n  /**\n   * @return {?number}\n   */\n  getEndOffset() {\n    return this._hasFocus\n      ? Math.max(this._anchorOffset, this._focusOffset)\n      : null;\n  }\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   * @return {boolean}\n   */\n  overlaps(start, end) {\n    return (\n      this.hasFocus() &&\n      this.getStartOffset() <= end &&\n      start <= this.getEndOffset()\n    );\n  }\n}\n\nmixInEventEmitter(DocumentSelectionState, {\n  blur: true,\n  focus: true,\n  update: true,\n});\n\nmodule.exports = DocumentSelectionState;\n"]}]}
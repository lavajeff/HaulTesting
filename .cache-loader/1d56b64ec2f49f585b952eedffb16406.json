{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/BatchedBridge/NativeModules.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/BatchedBridge/NativeModules.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var BatchedBridge=require('BatchedBridge');var invariant=require('fbjs/lib/invariant');function genModule(config,moduleID){if(!config){return null;}var _config=(0,_slicedToArray2.default)(config,5),moduleName=_config[0],constants=_config[1],methods=_config[2],promiseMethods=_config[3],syncMethods=_config[4];invariant(!moduleName.startsWith('RCT')&&!moduleName.startsWith('RK'),\"Module name prefixes should've been stripped by the native side \"+\"but wasn't for \"+moduleName);if(!constants&&!methods){return{name:moduleName};}var module={};methods&&methods.forEach(function(methodName,methodID){var isPromise=promiseMethods&&arrayContains(promiseMethods,methodID);var isSync=syncMethods&&arrayContains(syncMethods,methodID);invariant(!isPromise||!isSync,'Cannot have a method that is both async and a sync hook');var methodType=isPromise?'promise':isSync?'sync':'async';module[methodName]=genMethod(moduleID,methodID,methodType);});(0,_extends2.default)(module,constants);if(__DEV__){BatchedBridge.createDebugLookup(moduleID,moduleName,methods);}return{name:moduleName,module:module};}global.__fbGenNativeModule=genModule;function loadModule(name,moduleID){invariant(global.nativeRequireModuleConfig,\"Can't lazily create module without nativeRequireModuleConfig\");var config=global.nativeRequireModuleConfig(name);var info=genModule(config,moduleID);return info&&info.module;}function genMethod(moduleID,methodID,type){var fn=null;if(type==='promise'){fn=function fn(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return new Promise(function(resolve,reject){BatchedBridge.enqueueNativeCall(moduleID,methodID,args,function(data){return resolve(data);},function(errorData){return reject(createErrorFromErrorData(errorData));});});};}else if(type==='sync'){fn=function fn(){if(__DEV__){invariant(global.nativeCallSyncHook,'Calling synchronous methods on native '+'modules is not supported in Chrome.\\n\\n Consider providing alternative '+'methods to expose this method in debug mode, e.g. by exposing constants '+'ahead-of-time.');}for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}return global.nativeCallSyncHook(moduleID,methodID,args);};}else{fn=function fn(){for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}var lastArg=args.length>0?args[args.length-1]:null;var secondLastArg=args.length>1?args[args.length-2]:null;var hasSuccessCallback=typeof lastArg==='function';var hasErrorCallback=typeof secondLastArg==='function';hasErrorCallback&&invariant(hasSuccessCallback,'Cannot have a non-function arg after a function arg.');var onSuccess=hasSuccessCallback?lastArg:null;var onFail=hasErrorCallback?secondLastArg:null;var callbackCount=hasSuccessCallback+hasErrorCallback;args=args.slice(0,args.length-callbackCount);BatchedBridge.enqueueNativeCall(moduleID,methodID,args,onFail,onSuccess);};}fn.type=type;return fn;}function arrayContains(array,value){return array.indexOf(value)!==-1;}function createErrorFromErrorData(errorData){var _ref=errorData||{},message=_ref.message,extraErrorInfo=(0,_objectWithoutProperties2.default)(_ref,[\"message\"]);var error=new Error(message);error.framesToPop=1;return(0,_extends2.default)(error,extraErrorInfo);}var NativeModules={};if(global.nativeModuleProxy){NativeModules=global.nativeModuleProxy;}else if(!global.nativeExtensions){var bridgeConfig=global.__fbBatchedBridgeConfig;invariant(bridgeConfig,'__fbBatchedBridgeConfig is not set, cannot invoke native modules');var defineLazyObjectProperty=require('defineLazyObjectProperty');(bridgeConfig.remoteModuleConfig||[]).forEach(function(config,moduleID){var info=genModule(config,moduleID);if(!info){return;}if(info.module){NativeModules[info.name]=info.module;}else{defineLazyObjectProperty(NativeModules,info.name,{get:function get(){return loadModule(info.name,moduleID);}});}});}module.exports=NativeModules;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(genModule,\"genModule\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/BatchedBridge/NativeModules.js\");reactHotLoader.register(loadModule,\"loadModule\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/BatchedBridge/NativeModules.js\");reactHotLoader.register(genMethod,\"genMethod\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/BatchedBridge/NativeModules.js\");reactHotLoader.register(arrayContains,\"arrayContains\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/BatchedBridge/NativeModules.js\");reactHotLoader.register(createErrorFromErrorData,\"createErrorFromErrorData\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/BatchedBridge/NativeModules.js\");reactHotLoader.register(NativeModules,\"NativeModules\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/BatchedBridge/NativeModules.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/BatchedBridge/NativeModules.js"],"names":["BatchedBridge","require","invariant","genModule","config","moduleID","moduleName","constants","methods","promiseMethods","syncMethods","startsWith","name","module","forEach","methodName","methodID","isPromise","arrayContains","isSync","methodType","genMethod","__DEV__","createDebugLookup","global","__fbGenNativeModule","loadModule","nativeRequireModuleConfig","info","type","fn","args","Promise","resolve","reject","enqueueNativeCall","data","errorData","createErrorFromErrorData","nativeCallSyncHook","lastArg","length","secondLastArg","hasSuccessCallback","hasErrorCallback","onSuccess","onFail","callbackCount","slice","array","value","indexOf","message","extraErrorInfo","error","Error","framesToPop","NativeModules","nativeModuleProxy","nativeExtensions","bridgeConfig","__fbBatchedBridgeConfig","defineLazyObjectProperty","remoteModuleConfig","get","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst BatchedBridge = require('BatchedBridge');\n\nconst invariant = require('fbjs/lib/invariant');\n\nimport type {ExtendedError} from 'parseErrorStack';\n\ntype ModuleConfig = [\n  string /* name */,\n  ?Object /* constants */,\n  Array<string> /* functions */,\n  Array<number> /* promise method IDs */,\n  Array<number> /* sync method IDs */,\n];\n\nexport type MethodType = 'async' | 'promise' | 'sync';\n\nfunction genModule(\n  config: ?ModuleConfig,\n  moduleID: number,\n): ?{name: string, module?: Object} {\n  if (!config) {\n    return null;\n  }\n\n  const [moduleName, constants, methods, promiseMethods, syncMethods] = config;\n  invariant(\n    !moduleName.startsWith('RCT') && !moduleName.startsWith('RK'),\n    \"Module name prefixes should've been stripped by the native side \" +\n      \"but wasn't for \" +\n      moduleName,\n  );\n\n  if (!constants && !methods) {\n    // Module contents will be filled in lazily later\n    return {name: moduleName};\n  }\n\n  const module = {};\n  methods &&\n    methods.forEach((methodName, methodID) => {\n      const isPromise =\n        promiseMethods && arrayContains(promiseMethods, methodID);\n      const isSync = syncMethods && arrayContains(syncMethods, methodID);\n      invariant(\n        !isPromise || !isSync,\n        'Cannot have a method that is both async and a sync hook',\n      );\n      const methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';\n      module[methodName] = genMethod(moduleID, methodID, methodType);\n    });\n  Object.assign(module, constants);\n\n  if (__DEV__) {\n    BatchedBridge.createDebugLookup(moduleID, moduleName, methods);\n  }\n\n  return {name: moduleName, module};\n}\n\n// export this method as a global so we can call it from native\nglobal.__fbGenNativeModule = genModule;\n\nfunction loadModule(name: string, moduleID: number): ?Object {\n  invariant(\n    global.nativeRequireModuleConfig,\n    \"Can't lazily create module without nativeRequireModuleConfig\",\n  );\n  const config = global.nativeRequireModuleConfig(name);\n  const info = genModule(config, moduleID);\n  return info && info.module;\n}\n\nfunction genMethod(moduleID: number, methodID: number, type: MethodType) {\n  let fn = null;\n  if (type === 'promise') {\n    fn = function(...args: Array<any>) {\n      return new Promise((resolve, reject) => {\n        BatchedBridge.enqueueNativeCall(\n          moduleID,\n          methodID,\n          args,\n          data => resolve(data),\n          errorData => reject(createErrorFromErrorData(errorData)),\n        );\n      });\n    };\n  } else if (type === 'sync') {\n    fn = function(...args: Array<any>) {\n      if (__DEV__) {\n        invariant(\n          global.nativeCallSyncHook,\n          'Calling synchronous methods on native ' +\n            'modules is not supported in Chrome.\\n\\n Consider providing alternative ' +\n            'methods to expose this method in debug mode, e.g. by exposing constants ' +\n            'ahead-of-time.',\n        );\n      }\n      return global.nativeCallSyncHook(moduleID, methodID, args);\n    };\n  } else {\n    fn = function(...args: Array<any>) {\n      const lastArg = args.length > 0 ? args[args.length - 1] : null;\n      const secondLastArg = args.length > 1 ? args[args.length - 2] : null;\n      const hasSuccessCallback = typeof lastArg === 'function';\n      const hasErrorCallback = typeof secondLastArg === 'function';\n      hasErrorCallback &&\n        invariant(\n          hasSuccessCallback,\n          'Cannot have a non-function arg after a function arg.',\n        );\n      const onSuccess = hasSuccessCallback ? lastArg : null;\n      const onFail = hasErrorCallback ? secondLastArg : null;\n      const callbackCount = hasSuccessCallback + hasErrorCallback;\n      args = args.slice(0, args.length - callbackCount);\n      BatchedBridge.enqueueNativeCall(\n        moduleID,\n        methodID,\n        args,\n        onFail,\n        onSuccess,\n      );\n    };\n  }\n  fn.type = type;\n  return fn;\n}\n\nfunction arrayContains<T>(array: Array<T>, value: T): boolean {\n  return array.indexOf(value) !== -1;\n}\n\nfunction createErrorFromErrorData(errorData: {message: string}): ExtendedError {\n  const {message, ...extraErrorInfo} = errorData || {};\n  const error: ExtendedError = new Error(message);\n  error.framesToPop = 1;\n  return Object.assign(error, extraErrorInfo);\n}\n\nlet NativeModules: {[moduleName: string]: Object} = {};\nif (global.nativeModuleProxy) {\n  NativeModules = global.nativeModuleProxy;\n} else if (!global.nativeExtensions) {\n  const bridgeConfig = global.__fbBatchedBridgeConfig;\n  invariant(\n    bridgeConfig,\n    '__fbBatchedBridgeConfig is not set, cannot invoke native modules',\n  );\n\n  const defineLazyObjectProperty = require('defineLazyObjectProperty');\n  (bridgeConfig.remoteModuleConfig || []).forEach(\n    (config: ModuleConfig, moduleID: number) => {\n      // Initially this config will only contain the module name when running in JSC. The actual\n      // configuration of the module will be lazily loaded.\n      const info = genModule(config, moduleID);\n      if (!info) {\n        return;\n      }\n\n      if (info.module) {\n        NativeModules[info.name] = info.module;\n      }\n      // If there's no module config, define a lazy getter\n      else {\n        defineLazyObjectProperty(NativeModules, info.name, {\n          get: () => loadModule(info.name, moduleID),\n        });\n      }\n    },\n  );\n}\n\nmodule.exports = NativeModules;\n"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/core/_shouldPolyfillES6Collection.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/core/_shouldPolyfillES6Collection.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();function _shouldActuallyPolyfillES6Collection(collectionName){var Collection=global[collectionName];if(Collection==null){return true;}if(typeof global.Symbol!=='function'){return true;}var proto=Collection.prototype;return Collection==null||typeof Collection!=='function'||typeof proto.clear!=='function'||new Collection().size!==0||typeof proto.keys!=='function'||typeof proto.forEach!=='function';}var cache={};function _shouldPolyfillES6Collection(collectionName){var result=cache[collectionName];if(result!==undefined){return result;}result=_shouldActuallyPolyfillES6Collection(collectionName);cache[collectionName]=result;return result;}module.exports=_shouldPolyfillES6Collection;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(_shouldActuallyPolyfillES6Collection,\"_shouldActuallyPolyfillES6Collection\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/core/_shouldPolyfillES6Collection.js\");reactHotLoader.register(cache,\"cache\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/core/_shouldPolyfillES6Collection.js\");reactHotLoader.register(_shouldPolyfillES6Collection,\"_shouldPolyfillES6Collection\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/core/_shouldPolyfillES6Collection.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/core/_shouldPolyfillES6Collection.js"],"names":["_shouldActuallyPolyfillES6Collection","collectionName","Collection","global","Symbol","proto","prototype","clear","size","keys","forEach","cache","_shouldPolyfillES6Collection","result","undefined","module","exports"],"mappings":"AAWA,a,0GAMA,QAASA,CAAAA,oCAAT,CAA8CC,cAA9C,CAA+E,CAC7E,GAAMC,CAAAA,UAAU,CAAGC,MAAM,CAACF,cAAD,CAAzB,CACA,GAAIC,UAAU,EAAI,IAAlB,CAAwB,CACtB,MAAO,KAAP,CACD,CAMD,GAAI,MAAOC,CAAAA,MAAM,CAACC,MAAd,GAAyB,UAA7B,CAAyC,CACvC,MAAO,KAAP,CACD,CAED,GAAMC,CAAAA,KAAK,CAAGH,UAAU,CAACI,SAAzB,CAKA,MACEJ,CAAAA,UAAU,EAAI,IAAd,EACA,MAAOA,CAAAA,UAAP,GAAsB,UADtB,EAEA,MAAOG,CAAAA,KAAK,CAACE,KAAb,GAAuB,UAFvB,EAGA,GAAIL,CAAAA,UAAJ,GAAiBM,IAAjB,GAA0B,CAH1B,EAIA,MAAOH,CAAAA,KAAK,CAACI,IAAb,GAAsB,UAJtB,EAKA,MAAOJ,CAAAA,KAAK,CAACK,OAAb,GAAyB,UAN3B,CAQD,CAED,GAAMC,CAAAA,KAAgC,CAAG,EAAzC,CAQA,QAASC,CAAAA,4BAAT,CAAsCX,cAAtC,CAA8D,CAC5D,GAAIY,CAAAA,MAAM,CAAGF,KAAK,CAACV,cAAD,CAAlB,CACA,GAAIY,MAAM,GAAKC,SAAf,CAA0B,CACxB,MAAOD,CAAAA,MAAP,CACD,CAEDA,MAAM,CAAGb,oCAAoC,CAACC,cAAD,CAA7C,CACAU,KAAK,CAACV,cAAD,CAAL,CAAwBY,MAAxB,CACA,MAAOA,CAAAA,MAAP,CACD,CAEDE,MAAM,CAACC,OAAP,CAAiBJ,4BAAjB,C,gLAhDSZ,oC,8KA6BHW,K,+IAQGC,4B","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @preventMunge\n * @flow strict\n */\n\n'use strict';\n\n/**\n * Checks whether a collection name (e.g. \"Map\" or \"Set\") has a native polyfill\n * that is safe to be used.\n */\nfunction _shouldActuallyPolyfillES6Collection(collectionName: string): boolean {\n  const Collection = global[collectionName];\n  if (Collection == null) {\n    return true;\n  }\n\n  // The iterator protocol depends on `Symbol.iterator`. If a collection is\n  // implemented, but `Symbol` is not, it's going to break iteration because\n  // we'll be using custom \"@@iterator\" instead, which is not implemented on\n  // native collections.\n  if (typeof global.Symbol !== 'function') {\n    return true;\n  }\n\n  const proto = Collection.prototype;\n\n  // These checks are adapted from es6-shim: https://fburl.com/34437854\n  // NOTE: `isCallableWithoutNew` and `!supportsSubclassing` are not checked\n  // because they make debugging with \"break on exceptions\" difficult.\n  return (\n    Collection == null ||\n    typeof Collection !== 'function' ||\n    typeof proto.clear !== 'function' ||\n    new Collection().size !== 0 ||\n    typeof proto.keys !== 'function' ||\n    typeof proto.forEach !== 'function'\n  );\n}\n\nconst cache: {[name: string]: boolean} = {};\n\n/**\n * Checks whether a collection name (e.g. \"Map\" or \"Set\") has a native polyfill\n * that is safe to be used and caches this result.\n * Make sure to make a first call to this function before a corresponding\n * property on global was overriden in any way.\n */\nfunction _shouldPolyfillES6Collection(collectionName: string) {\n  let result = cache[collectionName];\n  if (result !== undefined) {\n    return result;\n  }\n\n  result = _shouldActuallyPolyfillES6Collection(collectionName);\n  cache[collectionName] = result;\n  return result;\n}\n\nmodule.exports = _shouldPolyfillES6Collection;\n"]}]}
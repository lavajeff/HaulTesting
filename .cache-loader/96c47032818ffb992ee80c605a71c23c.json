{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/request-fetch-adapter.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/request-fetch-adapter.js","mtime":1539745230847},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var packageJson=require(\"./package.json\");module.exports={request:function request(verb,url,requestBody,callback){var headers,response,statusCode,body;return _regenerator.default.async(function request$(_context){while(1){switch(_context.prev=_context.next){case 0:if(typeof requestBody===\"function\"){callback=requestBody;requestBody=null;}headers={\"Accept\":\"application/json\",\"Content-Type\":\"application/json\",\"X-CodePush-Plugin-Name\":packageJson.name,\"X-CodePush-Plugin-Version\":packageJson.version,\"X-CodePush-SDK-Version\":packageJson.dependencies[\"code-push\"]};if(requestBody&&typeof requestBody===\"object\"){requestBody=JSON.stringify(requestBody);}_context.prev=3;_context.next=6;return _regenerator.default.awrap(fetch(url,{method:getHttpMethodName(verb),headers:headers,body:requestBody}));case 6:response=_context.sent;statusCode=response.status;_context.next=10;return _regenerator.default.awrap(response.text());case 10:body=_context.sent;callback(null,{statusCode:statusCode,body:body});_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](3);callback(_context.t0);case 17:case\"end\":return _context.stop();}}},null,this,[[3,14]]);}};function getHttpMethodName(verb){return[\"GET\",\"HEAD\",\"POST\",\"PUT\",\"DELETE\",\"TRACE\",\"OPTIONS\",\"CONNECT\",\"PATCH\"][verb];};(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(getHttpMethodName,\"getHttpMethodName\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/request-fetch-adapter.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/request-fetch-adapter.js"],"names":["packageJson","require","module","exports","request","verb","url","requestBody","callback","headers","name","version","dependencies","JSON","stringify","fetch","method","getHttpMethodName","body","response","statusCode","status","text"],"mappings":"4QAAA,GAAMA,CAAAA,WAAW,CAAGC,OAAO,CAAC,gBAAD,CAA3B,CAEAC,MAAM,CAACC,OAAP,CAAiB,CACTC,OADS,kBACDC,IADC,CACKC,GADL,CACUC,WADV,CACuBC,QADvB,yJAEb,GAAI,MAAOD,CAAAA,WAAP,GAAuB,UAA3B,CAAuC,CACrCC,QAAQ,CAAGD,WAAX,CACAA,WAAW,CAAG,IAAd,CACD,CAEKE,OAPO,CAOG,CACd,SAAU,kBADI,CAEd,eAAgB,kBAFF,CAGd,yBAA0BT,WAAW,CAACU,IAHxB,CAId,4BAA6BV,WAAW,CAACW,OAJ3B,CAKd,yBAA0BX,WAAW,CAACY,YAAZ,CAAyB,WAAzB,CALZ,CAPH,CAeb,GAAIL,WAAW,EAAI,MAAOA,CAAAA,WAAP,GAAuB,QAA1C,CAAoD,CAClDA,WAAW,CAAGM,IAAI,CAACC,SAAL,CAAeP,WAAf,CAAd,CACD,CAjBY,kEAoBYQ,KAAK,CAACT,GAAD,CAAM,CAChCU,MAAM,CAAEC,iBAAiB,CAACZ,IAAD,CADO,CAEhCI,OAAO,CAAEA,OAFuB,CAGhCS,IAAI,CAAEX,WAH0B,CAAN,CApBjB,SAoBLY,QApBK,eA0BLC,UA1BK,CA0BQD,QAAQ,CAACE,MA1BjB,oDA2BQF,QAAQ,CAACG,IAAT,EA3BR,UA2BLJ,IA3BK,eA4BXV,QAAQ,CAAC,IAAD,CAAO,CAAEY,UAAU,CAAVA,UAAF,CAAcF,IAAI,CAAJA,IAAd,CAAP,CAAR,CA5BW,iFA8BXV,QAAQ,aAAR,CA9BW,mEAAjB,CAmCA,QAASS,CAAAA,iBAAT,CAA2BZ,IAA3B,CAAiC,CAG/B,MAAO,CACL,KADK,CAEL,MAFK,CAGL,MAHK,CAIL,KAJK,CAKL,QALK,CAML,OANK,CAOL,SAPK,CAQL,SARK,CASL,OATK,EAULA,IAVK,CAAP,CAWD,C,gLAdQY,iB","sourcesContent":["const packageJson = require(\"./package.json\");\n\nmodule.exports = {\n  async request(verb, url, requestBody, callback) {\n    if (typeof requestBody === \"function\") {\n      callback = requestBody;\n      requestBody = null;\n    }\n\n    const headers = {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"X-CodePush-Plugin-Name\": packageJson.name,\n      \"X-CodePush-Plugin-Version\": packageJson.version,\n      \"X-CodePush-SDK-Version\": packageJson.dependencies[\"code-push\"]\n    };\n\n    if (requestBody && typeof requestBody === \"object\") {\n      requestBody = JSON.stringify(requestBody);\n    }\n\n    try {\n      const response = await fetch(url, {\n        method: getHttpMethodName(verb),\n        headers: headers,\n        body: requestBody\n      });\n\n      const statusCode = response.status;\n      const body = await response.text();\n      callback(null, { statusCode, body });\n    } catch (err) {\n      callback(err);\n    }\n  }\n};\n\nfunction getHttpMethodName(verb) {\n  // Note: This should stay in sync with the enum definition in\n  // https://github.com/Microsoft/code-push/blob/master/sdk/script/acquisition-sdk.ts#L6\n  return [\n    \"GET\",\n    \"HEAD\",\n    \"POST\",\n    \"PUT\",\n    \"DELETE\",\n    \"TRACE\",\n    \"OPTIONS\",\n    \"CONNECT\",\n    \"PATCH\"\n  ][verb];\n}"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Lists/FillRateHelper.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Lists/FillRateHelper.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var performanceNow=require('fbjs/lib/performanceNow');var warning=require('fbjs/lib/warning');var Info=function(){function Info(){(0,_classCallCheck2.default)(this,Info);this.any_blank_count=0;this.any_blank_ms=0;this.any_blank_speed_sum=0;this.mostly_blank_count=0;this.mostly_blank_ms=0;this.pixels_blank=0;this.pixels_sampled=0;this.pixels_scrolled=0;this.total_time_spent=0;this.sample_count=0;}(0,_createClass2.default)(Info,[{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return Info;}();var DEBUG=false;var _listeners=[];var _minSampleCount=10;var _sampleRate=DEBUG?1:null;var FillRateHelper=function(){(0,_createClass2.default)(FillRateHelper,null,[{key:\"addListener\",value:function addListener(callback){warning(_sampleRate!==null,'Call `FillRateHelper.setSampleRate` before `addListener`.');_listeners.push(callback);return{remove:function remove(){_listeners=_listeners.filter(function(listener){return callback!==listener;});}};}},{key:\"setSampleRate\",value:function setSampleRate(sampleRate){_sampleRate=sampleRate;}},{key:\"setMinSampleCount\",value:function setMinSampleCount(minSampleCount){_minSampleCount=minSampleCount;}}]);function FillRateHelper(getFrameMetrics){(0,_classCallCheck2.default)(this,FillRateHelper);this._anyBlankStartTime=null;this._enabled=false;this._info=new Info();this._mostlyBlankStartTime=null;this._samplesStartTime=null;this._getFrameMetrics=getFrameMetrics;this._enabled=(_sampleRate||0)>Math.random();this._resetData();}(0,_createClass2.default)(FillRateHelper,[{key:\"activate\",value:function activate(){if(this._enabled&&this._samplesStartTime==null){DEBUG&&console.debug('FillRateHelper: activate');this._samplesStartTime=performanceNow();}}},{key:\"deactivateAndFlush\",value:function deactivateAndFlush(){if(!this._enabled){return;}var start=this._samplesStartTime;if(start==null){DEBUG&&console.debug('FillRateHelper: bail on deactivate with no start time');return;}if(this._info.sample_count<_minSampleCount){this._resetData();return;}var total_time_spent=performanceNow()-start;var info=(0,_objectSpread2.default)({},this._info,{total_time_spent:total_time_spent});if(DEBUG){var derived={avg_blankness:this._info.pixels_blank/this._info.pixels_sampled,avg_speed:this._info.pixels_scrolled/(total_time_spent/1000),avg_speed_when_any_blank:this._info.any_blank_speed_sum/this._info.any_blank_count,any_blank_per_min:this._info.any_blank_count/(total_time_spent/1000/60),any_blank_time_frac:this._info.any_blank_ms/total_time_spent,mostly_blank_per_min:this._info.mostly_blank_count/(total_time_spent/1000/60),mostly_blank_time_frac:this._info.mostly_blank_ms/total_time_spent};for(var key in derived){derived[key]=Math.round(1000*derived[key])/1000;}console.debug('FillRateHelper deactivateAndFlush: ',{derived:derived,info:info});}_listeners.forEach(function(listener){return listener(info);});this._resetData();}},{key:\"computeBlankness\",value:function computeBlankness(props,state,scrollMetrics){if(!this._enabled||props.getItemCount(props.data)===0||this._samplesStartTime==null){return 0;}var dOffset=scrollMetrics.dOffset,offset=scrollMetrics.offset,velocity=scrollMetrics.velocity,visibleLength=scrollMetrics.visibleLength;this._info.sample_count++;this._info.pixels_sampled+=Math.round(visibleLength);this._info.pixels_scrolled+=Math.round(Math.abs(dOffset));var scrollSpeed=Math.round(Math.abs(velocity)*1000);var now=performanceNow();if(this._anyBlankStartTime!=null){this._info.any_blank_ms+=now-this._anyBlankStartTime;}this._anyBlankStartTime=null;if(this._mostlyBlankStartTime!=null){this._info.mostly_blank_ms+=now-this._mostlyBlankStartTime;}this._mostlyBlankStartTime=null;var blankTop=0;var first=state.first;var firstFrame=this._getFrameMetrics(first);while(first<=state.last&&(!firstFrame||!firstFrame.inLayout)){firstFrame=this._getFrameMetrics(first);first++;}if(firstFrame&&first>0){blankTop=Math.min(visibleLength,Math.max(0,firstFrame.offset-offset));}var blankBottom=0;var last=state.last;var lastFrame=this._getFrameMetrics(last);while(last>=state.first&&(!lastFrame||!lastFrame.inLayout)){lastFrame=this._getFrameMetrics(last);last--;}if(lastFrame&&last<props.getItemCount(props.data)-1){var bottomEdge=lastFrame.offset+lastFrame.length;blankBottom=Math.min(visibleLength,Math.max(0,offset+visibleLength-bottomEdge));}var pixels_blank=Math.round(blankTop+blankBottom);var blankness=pixels_blank/visibleLength;if(blankness>0){this._anyBlankStartTime=now;this._info.any_blank_speed_sum+=scrollSpeed;this._info.any_blank_count++;this._info.pixels_blank+=pixels_blank;if(blankness>0.5){this._mostlyBlankStartTime=now;this._info.mostly_blank_count++;}}else if(scrollSpeed<0.01||Math.abs(dOffset)<1){this.deactivateAndFlush();}return blankness;}},{key:\"enabled\",value:function enabled(){return this._enabled;}},{key:\"_resetData\",value:function _resetData(){this._anyBlankStartTime=null;this._info=new Info();this._mostlyBlankStartTime=null;this._samplesStartTime=null;}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return FillRateHelper;}();module.exports=FillRateHelper;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(Info,\"Info\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Lists/FillRateHelper.js\");reactHotLoader.register(DEBUG,\"DEBUG\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Lists/FillRateHelper.js\");reactHotLoader.register(_listeners,\"_listeners\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Lists/FillRateHelper.js\");reactHotLoader.register(_minSampleCount,\"_minSampleCount\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Lists/FillRateHelper.js\");reactHotLoader.register(_sampleRate,\"_sampleRate\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Lists/FillRateHelper.js\");reactHotLoader.register(FillRateHelper,\"FillRateHelper\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Lists/FillRateHelper.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Lists/FillRateHelper.js"],"names":["performanceNow","require","warning","Info","any_blank_count","any_blank_ms","any_blank_speed_sum","mostly_blank_count","mostly_blank_ms","pixels_blank","pixels_sampled","pixels_scrolled","total_time_spent","sample_count","DEBUG","_listeners","_minSampleCount","_sampleRate","FillRateHelper","callback","push","remove","filter","listener","sampleRate","minSampleCount","getFrameMetrics","_anyBlankStartTime","_enabled","_info","_mostlyBlankStartTime","_samplesStartTime","_getFrameMetrics","Math","random","_resetData","console","debug","start","info","derived","avg_blankness","avg_speed","avg_speed_when_any_blank","any_blank_per_min","any_blank_time_frac","mostly_blank_per_min","mostly_blank_time_frac","key","round","forEach","props","state","scrollMetrics","getItemCount","data","dOffset","offset","velocity","visibleLength","abs","scrollSpeed","now","blankTop","first","firstFrame","last","inLayout","min","max","blankBottom","lastFrame","bottomEdge","length","blankness","deactivateAndFlush","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst performanceNow = require('fbjs/lib/performanceNow');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst warning = require('fbjs/lib/warning');\n\nexport type FillRateInfo = Info;\n\nclass Info {\n  any_blank_count = 0;\n  any_blank_ms = 0;\n  any_blank_speed_sum = 0;\n  mostly_blank_count = 0;\n  mostly_blank_ms = 0;\n  pixels_blank = 0;\n  pixels_sampled = 0;\n  pixels_scrolled = 0;\n  total_time_spent = 0;\n  sample_count = 0;\n}\n\ntype FrameMetrics = {inLayout?: boolean, length: number, offset: number};\n\nconst DEBUG = false;\n\nlet _listeners: Array<(Info) => void> = [];\nlet _minSampleCount = 10;\nlet _sampleRate = DEBUG ? 1 : null;\n\n/**\n * A helper class for detecting when the maximem fill rate of `VirtualizedList` is exceeded.\n * By default the sampling rate is set to zero and this will do nothing. If you want to collect\n * samples (e.g. to log them), make sure to call `FillRateHelper.setSampleRate(0.0-1.0)`.\n *\n * Listeners and sample rate are global for all `VirtualizedList`s - typical usage will combine with\n * `SceneTracker.getActiveScene` to determine the context of the events.\n */\nclass FillRateHelper {\n  _anyBlankStartTime = (null: ?number);\n  _enabled = false;\n  _getFrameMetrics: (index: number) => ?FrameMetrics;\n  _info = new Info();\n  _mostlyBlankStartTime = (null: ?number);\n  _samplesStartTime = (null: ?number);\n\n  static addListener(callback: FillRateInfo => void): {remove: () => void} {\n    warning(\n      _sampleRate !== null,\n      'Call `FillRateHelper.setSampleRate` before `addListener`.',\n    );\n    _listeners.push(callback);\n    return {\n      remove: () => {\n        _listeners = _listeners.filter(listener => callback !== listener);\n      },\n    };\n  }\n\n  static setSampleRate(sampleRate: number) {\n    _sampleRate = sampleRate;\n  }\n\n  static setMinSampleCount(minSampleCount: number) {\n    _minSampleCount = minSampleCount;\n  }\n\n  constructor(getFrameMetrics: (index: number) => ?FrameMetrics) {\n    this._getFrameMetrics = getFrameMetrics;\n    this._enabled = (_sampleRate || 0) > Math.random();\n    this._resetData();\n  }\n\n  activate() {\n    if (this._enabled && this._samplesStartTime == null) {\n      DEBUG && console.debug('FillRateHelper: activate');\n      this._samplesStartTime = performanceNow();\n    }\n  }\n\n  deactivateAndFlush() {\n    if (!this._enabled) {\n      return;\n    }\n    const start = this._samplesStartTime; // const for flow\n    if (start == null) {\n      DEBUG &&\n        console.debug('FillRateHelper: bail on deactivate with no start time');\n      return;\n    }\n    if (this._info.sample_count < _minSampleCount) {\n      // Don't bother with under-sampled events.\n      this._resetData();\n      return;\n    }\n    const total_time_spent = performanceNow() - start;\n    const info: any = {\n      ...this._info,\n      total_time_spent,\n    };\n    if (DEBUG) {\n      const derived = {\n        avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n        avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n        avg_speed_when_any_blank:\n          this._info.any_blank_speed_sum / this._info.any_blank_count,\n        any_blank_per_min:\n          this._info.any_blank_count / (total_time_spent / 1000 / 60),\n        any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n        mostly_blank_per_min:\n          this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n        mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent,\n      };\n      for (const key in derived) {\n        derived[key] = Math.round(1000 * derived[key]) / 1000;\n      }\n      console.debug('FillRateHelper deactivateAndFlush: ', {derived, info});\n    }\n    _listeners.forEach(listener => listener(info));\n    this._resetData();\n  }\n\n  computeBlankness(\n    props: {\n      data: Array<any>,\n      getItemCount: (data: Array<any>) => number,\n      initialNumToRender: number,\n    },\n    state: {\n      first: number,\n      last: number,\n    },\n    scrollMetrics: {\n      dOffset: number,\n      offset: number,\n      velocity: number,\n      visibleLength: number,\n    },\n  ): number {\n    if (\n      !this._enabled ||\n      props.getItemCount(props.data) === 0 ||\n      this._samplesStartTime == null\n    ) {\n      return 0;\n    }\n    const {dOffset, offset, velocity, visibleLength} = scrollMetrics;\n\n    // Denominator metrics that we track for all events - most of the time there is no blankness and\n    // we want to capture that.\n    this._info.sample_count++;\n    this._info.pixels_sampled += Math.round(visibleLength);\n    this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n    const scrollSpeed = Math.round(Math.abs(velocity) * 1000); // px / sec\n\n    // Whether blank now or not, record the elapsed time blank if we were blank last time.\n    const now = performanceNow();\n    if (this._anyBlankStartTime != null) {\n      this._info.any_blank_ms += now - this._anyBlankStartTime;\n    }\n    this._anyBlankStartTime = null;\n    if (this._mostlyBlankStartTime != null) {\n      this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n    }\n    this._mostlyBlankStartTime = null;\n\n    let blankTop = 0;\n    let first = state.first;\n    let firstFrame = this._getFrameMetrics(first);\n    while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n      firstFrame = this._getFrameMetrics(first);\n      first++;\n    }\n    // Only count blankTop if we aren't rendering the first item, otherwise we will count the header\n    // as blank.\n    if (firstFrame && first > 0) {\n      blankTop = Math.min(\n        visibleLength,\n        Math.max(0, firstFrame.offset - offset),\n      );\n    }\n    let blankBottom = 0;\n    let last = state.last;\n    let lastFrame = this._getFrameMetrics(last);\n    while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n      lastFrame = this._getFrameMetrics(last);\n      last--;\n    }\n    // Only count blankBottom if we aren't rendering the last item, otherwise we will count the\n    // footer as blank.\n    if (lastFrame && last < props.getItemCount(props.data) - 1) {\n      const bottomEdge = lastFrame.offset + lastFrame.length;\n      blankBottom = Math.min(\n        visibleLength,\n        Math.max(0, offset + visibleLength - bottomEdge),\n      );\n    }\n    const pixels_blank = Math.round(blankTop + blankBottom);\n    const blankness = pixels_blank / visibleLength;\n    if (blankness > 0) {\n      this._anyBlankStartTime = now;\n      this._info.any_blank_speed_sum += scrollSpeed;\n      this._info.any_blank_count++;\n      this._info.pixels_blank += pixels_blank;\n      if (blankness > 0.5) {\n        this._mostlyBlankStartTime = now;\n        this._info.mostly_blank_count++;\n      }\n    } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n      this.deactivateAndFlush();\n    }\n    return blankness;\n  }\n\n  enabled(): boolean {\n    return this._enabled;\n  }\n\n  _resetData() {\n    this._anyBlankStartTime = null;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n  }\n}\n\nmodule.exports = FillRateHelper;\n"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Alert/Alert.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Alert/Alert.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var AlertIOS=require('AlertIOS');var NativeModules=require('NativeModules');var Platform=require('Platform');var Alert=function(){function Alert(){(0,_classCallCheck2.default)(this,Alert);}(0,_createClass2.default)(Alert,null,[{key:\"alert\",value:function alert(title,message,buttons,options,type){if(Platform.OS==='ios'){if(typeof type!=='undefined'){console.warn('Alert.alert() with a 5th \"type\" parameter is deprecated and will be removed. Use AlertIOS.prompt() instead.');AlertIOS.alert(title,message,buttons,type);return;}AlertIOS.alert(title,message,buttons);}else if(Platform.OS==='android'){AlertAndroid.alert(title,message,buttons,options);}}}]);return Alert;}();var AlertAndroid=function(){function AlertAndroid(){(0,_classCallCheck2.default)(this,AlertAndroid);}(0,_createClass2.default)(AlertAndroid,null,[{key:\"alert\",value:function alert(title,message,buttons,options){var config={title:title||'',message:message||''};if(options){config=(0,_objectSpread2.default)({},config,{cancelable:options.cancelable});}var validButtons=buttons?buttons.slice(0,3):[{text:'OK'}];var buttonPositive=validButtons.pop();var buttonNegative=validButtons.pop();var buttonNeutral=validButtons.pop();if(buttonNeutral){config=(0,_objectSpread2.default)({},config,{buttonNeutral:buttonNeutral.text||''});}if(buttonNegative){config=(0,_objectSpread2.default)({},config,{buttonNegative:buttonNegative.text||''});}if(buttonPositive){config=(0,_objectSpread2.default)({},config,{buttonPositive:buttonPositive.text||''});}NativeModules.DialogManagerAndroid.showAlert(config,function(errorMessage){return console.warn(errorMessage);},function(action,buttonKey){if(action===NativeModules.DialogManagerAndroid.buttonClicked){if(buttonKey===NativeModules.DialogManagerAndroid.buttonNeutral){buttonNeutral.onPress&&buttonNeutral.onPress();}else if(buttonKey===NativeModules.DialogManagerAndroid.buttonNegative){buttonNegative.onPress&&buttonNegative.onPress();}else if(buttonKey===NativeModules.DialogManagerAndroid.buttonPositive){buttonPositive.onPress&&buttonPositive.onPress();}}else if(action===NativeModules.DialogManagerAndroid.dismissed){options&&options.onDismiss&&options.onDismiss();}});}}]);return AlertAndroid;}();module.exports=Alert;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(Alert,\"Alert\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Alert/Alert.js\");reactHotLoader.register(AlertAndroid,\"AlertAndroid\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Alert/Alert.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Alert/Alert.js"],"names":["AlertIOS","require","NativeModules","Platform","Alert","title","message","buttons","options","type","OS","console","warn","alert","AlertAndroid","config","cancelable","validButtons","slice","text","buttonPositive","pop","buttonNegative","buttonNeutral","DialogManagerAndroid","showAlert","errorMessage","action","buttonKey","buttonClicked","onPress","dismissed","onDismiss","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst AlertIOS = require('AlertIOS');\nconst NativeModules = require('NativeModules');\nconst Platform = require('Platform');\n\nimport type {AlertType, AlertButtonStyle} from 'AlertIOS';\n\nexport type Buttons = Array<{\n  text?: string,\n  onPress?: ?Function,\n  style?: AlertButtonStyle,\n}>;\n\ntype Options = {\n  cancelable?: ?boolean,\n  onDismiss?: ?Function,\n};\n\n/**\n * Launches an alert dialog with the specified title and message.\n *\n * See http://facebook.github.io/react-native/docs/alert.html\n */\nclass Alert {\n  /**\n   * Launches an alert dialog with the specified title and message.\n   *\n   * See http://facebook.github.io/react-native/docs/alert.html#alert\n   */\n  static alert(\n    title: ?string,\n    message?: ?string,\n    buttons?: Buttons,\n    options?: Options,\n    type?: AlertType,\n  ): void {\n    if (Platform.OS === 'ios') {\n      if (typeof type !== 'undefined') {\n        console.warn(\n          'Alert.alert() with a 5th \"type\" parameter is deprecated and will be removed. Use AlertIOS.prompt() instead.',\n        );\n        AlertIOS.alert(title, message, buttons, type);\n        return;\n      }\n      AlertIOS.alert(title, message, buttons);\n    } else if (Platform.OS === 'android') {\n      AlertAndroid.alert(title, message, buttons, options);\n    }\n  }\n}\n\n/**\n * Wrapper around the Android native module.\n */\nclass AlertAndroid {\n  static alert(\n    title: ?string,\n    message?: ?string,\n    buttons?: Buttons,\n    options?: Options,\n  ): void {\n    let config = {\n      title: title || '',\n      message: message || '',\n    };\n\n    if (options) {\n      config = {...config, cancelable: options.cancelable};\n    }\n    // At most three buttons (neutral, negative, positive). Ignore rest.\n    // The text 'OK' should be probably localized. iOS Alert does that in native.\n    const validButtons: Buttons = buttons\n      ? buttons.slice(0, 3)\n      : [{text: 'OK'}];\n    const buttonPositive = validButtons.pop();\n    const buttonNegative = validButtons.pop();\n    const buttonNeutral = validButtons.pop();\n    if (buttonNeutral) {\n      config = {...config, buttonNeutral: buttonNeutral.text || ''};\n    }\n    if (buttonNegative) {\n      config = {...config, buttonNegative: buttonNegative.text || ''};\n    }\n    if (buttonPositive) {\n      config = {...config, buttonPositive: buttonPositive.text || ''};\n    }\n    NativeModules.DialogManagerAndroid.showAlert(\n      config,\n      errorMessage => console.warn(errorMessage),\n      (action, buttonKey) => {\n        if (action === NativeModules.DialogManagerAndroid.buttonClicked) {\n          if (buttonKey === NativeModules.DialogManagerAndroid.buttonNeutral) {\n            buttonNeutral.onPress && buttonNeutral.onPress();\n          } else if (\n            buttonKey === NativeModules.DialogManagerAndroid.buttonNegative\n          ) {\n            buttonNegative.onPress && buttonNegative.onPress();\n          } else if (\n            buttonKey === NativeModules.DialogManagerAndroid.buttonPositive\n          ) {\n            buttonPositive.onPress && buttonPositive.onPress();\n          }\n        } else if (action === NativeModules.DialogManagerAndroid.dismissed) {\n          options && options.onDismiss && options.onDismiss();\n        }\n      },\n    );\n  }\n}\n\nmodule.exports = Alert;\n"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var invariant=require('fbjs/lib/invariant');var customBubblingEventTypes={};var customDirectEventTypes={};var eventTypes={};exports.customBubblingEventTypes=customBubblingEventTypes;exports.customDirectEventTypes=customDirectEventTypes;exports.eventTypes=eventTypes;var viewConfigCallbacks=new Map();var viewConfigs=new Map();function processEventTypes(viewConfig){var bubblingEventTypes=viewConfig.bubblingEventTypes,directEventTypes=viewConfig.directEventTypes;if(__DEV__){if(bubblingEventTypes!=null&&directEventTypes!=null){for(var topLevelType in directEventTypes){invariant(bubblingEventTypes[topLevelType]==null,'Event cannot be both direct and bubbling: %s',topLevelType);}}}if(bubblingEventTypes!=null){for(var _topLevelType in bubblingEventTypes){if(customBubblingEventTypes[_topLevelType]==null){eventTypes[_topLevelType]=customBubblingEventTypes[_topLevelType]=bubblingEventTypes[_topLevelType];}}}if(directEventTypes!=null){for(var _topLevelType2 in directEventTypes){if(customDirectEventTypes[_topLevelType2]==null){eventTypes[_topLevelType2]=customDirectEventTypes[_topLevelType2]=directEventTypes[_topLevelType2];}}}}exports.register=function(name,callback){invariant(!viewConfigCallbacks.has(name),'Tried to register two views with the same name %s',name);viewConfigCallbacks.set(name,callback);return name;};exports.get=function(name){var viewConfig;if(!viewConfigs.has(name)){var callback=viewConfigCallbacks.get(name);if(typeof callback!=='function'){invariant(false,'View config not found for name %s.%s',name,typeof name[0]==='string'&&/[a-z]/.test(name[0])?' Make sure to start component names with a capital letter.':'');}viewConfigCallbacks.set(name,null);viewConfig=callback();processEventTypes(viewConfig);viewConfigs.set(name,viewConfig);}else{viewConfig=viewConfigs.get(name);}invariant(viewConfig,'View config not found for name %s',name);return viewConfig;};;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(customBubblingEventTypes,\"customBubblingEventTypes\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js\");reactHotLoader.register(customDirectEventTypes,\"customDirectEventTypes\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js\");reactHotLoader.register(eventTypes,\"eventTypes\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js\");reactHotLoader.register(viewConfigCallbacks,\"viewConfigCallbacks\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js\");reactHotLoader.register(viewConfigs,\"viewConfigs\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js\");reactHotLoader.register(processEventTypes,\"processEventTypes\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js"],"names":["invariant","require","customBubblingEventTypes","customDirectEventTypes","eventTypes","exports","viewConfigCallbacks","Map","viewConfigs","processEventTypes","viewConfig","bubblingEventTypes","directEventTypes","__DEV__","topLevelType","register","name","callback","has","set","get","test"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {\n  ReactNativeBaseComponentViewConfig,\n  ViewConfigGetter,\n} from './ReactNativeTypes';\n\nconst invariant = require('fbjs/lib/invariant');\n\n// Event configs\nconst customBubblingEventTypes = {};\nconst customDirectEventTypes = {};\nconst eventTypes = {};\n\nexports.customBubblingEventTypes = customBubblingEventTypes;\nexports.customDirectEventTypes = customDirectEventTypes;\nexports.eventTypes = eventTypes;\n\nconst viewConfigCallbacks = new Map();\nconst viewConfigs = new Map();\n\nfunction processEventTypes(\n  viewConfig: ReactNativeBaseComponentViewConfig<>,\n): void {\n  const {bubblingEventTypes, directEventTypes} = viewConfig;\n\n  if (__DEV__) {\n    if (bubblingEventTypes != null && directEventTypes != null) {\n      for (const topLevelType in directEventTypes) {\n        invariant(\n          bubblingEventTypes[topLevelType] == null,\n          'Event cannot be both direct and bubbling: %s',\n          topLevelType,\n        );\n      }\n    }\n  }\n\n  if (bubblingEventTypes != null) {\n    for (const topLevelType in bubblingEventTypes) {\n      if (customBubblingEventTypes[topLevelType] == null) {\n        eventTypes[topLevelType] = customBubblingEventTypes[topLevelType] =\n          bubblingEventTypes[topLevelType];\n      }\n    }\n  }\n\n  if (directEventTypes != null) {\n    for (const topLevelType in directEventTypes) {\n      if (customDirectEventTypes[topLevelType] == null) {\n        eventTypes[topLevelType] = customDirectEventTypes[topLevelType] =\n          directEventTypes[topLevelType];\n      }\n    }\n  }\n}\n\n/**\n * Registers a native view/component by name.\n * A callback is provided to load the view config from UIManager.\n * The callback is deferred until the view is actually rendered.\n * This is done to avoid causing Prepack deopts.\n */\nexports.register = function(name: string, callback: ViewConfigGetter): string {\n  invariant(\n    !viewConfigCallbacks.has(name),\n    'Tried to register two views with the same name %s',\n    name,\n  );\n  viewConfigCallbacks.set(name, callback);\n  return name;\n};\n\n/**\n * Retrieves a config for the specified view.\n * If this is the first time the view has been used,\n * This configuration will be lazy-loaded from UIManager.\n */\nexports.get = function(name: string): ReactNativeBaseComponentViewConfig<> {\n  let viewConfig;\n  if (!viewConfigs.has(name)) {\n    const callback = viewConfigCallbacks.get(name);\n    if (typeof callback !== 'function') {\n      invariant(\n        false,\n        'View config not found for name %s.%s',\n        name,\n        typeof name[0] === 'string' && /[a-z]/.test(name[0])\n          ? ' Make sure to start component names with a capital letter.'\n          : '',\n      );\n    }\n    viewConfigCallbacks.set(name, null);\n    viewConfig = callback();\n    processEventTypes(viewConfig);\n    viewConfigs.set(name, viewConfig);\n  } else {\n    viewConfig = viewConfigs.get(name);\n  }\n  invariant(viewConfig, 'View config not found for name %s', name);\n  return viewConfig;\n};\n"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var NEWTON_ITERATIONS=4;var NEWTON_MIN_SLOPE=0.001;var SUBDIVISION_PRECISION=0.0000001;var SUBDIVISION_MAX_ITERATIONS=10;var kSplineTableSize=11;var kSampleStepSize=1.0/(kSplineTableSize-1.0);var float32ArraySupported=typeof Float32Array==='function';function A(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;}function B(aA1,aA2){return 3.0*aA2-6.0*aA1;}function C(aA1){return 3.0*aA1;}function calcBezier(aT,aA1,aA2){return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}function getSlope(aT,aA1,aA2){return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}function binarySubdivide(aX,aA,aB,mX1,mX2){var currentX,currentT,i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;}function newtonRaphsonIterate(aX,aGuessT,mX1,mX2){for(var i=0;i<NEWTON_ITERATIONS;++i){var currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}var currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;}module.exports=function bezier(mX1,mY1,mX2,mY2){if(!(0<=mX1&&mX1<=1&&0<=mX2&&mX2<=1)){throw new Error('bezier x values must be in [0, 1] range');}var sampleValues=float32ArraySupported?new Float32Array(kSplineTableSize):new Array(kSplineTableSize);if(mX1!==mY1||mX2!==mY2){for(var i=0;i<kSplineTableSize;++i){sampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2);}}function getTForX(aX){var intervalStart=0.0;var currentSample=1;var lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;var dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);var guessForT=intervalStart+dist*kSampleStepSize;var initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}return function BezierEasing(x){if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);};};;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(NEWTON_ITERATIONS,\"NEWTON_ITERATIONS\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js\");reactHotLoader.register(NEWTON_MIN_SLOPE,\"NEWTON_MIN_SLOPE\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js\");reactHotLoader.register(SUBDIVISION_PRECISION,\"SUBDIVISION_PRECISION\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js\");reactHotLoader.register(SUBDIVISION_MAX_ITERATIONS,\"SUBDIVISION_MAX_ITERATIONS\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js\");reactHotLoader.register(kSplineTableSize,\"kSplineTableSize\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js\");reactHotLoader.register(kSampleStepSize,\"kSampleStepSize\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js\");reactHotLoader.register(float32ArraySupported,\"float32ArraySupported\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js\");reactHotLoader.register(A,\"A\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js\");reactHotLoader.register(B,\"B\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js\");reactHotLoader.register(C,\"C\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js\");reactHotLoader.register(calcBezier,\"calcBezier\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js\");reactHotLoader.register(getSlope,\"getSlope\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js\");reactHotLoader.register(binarySubdivide,\"binarySubdivide\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js\");reactHotLoader.register(newtonRaphsonIterate,\"newtonRaphsonIterate\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Animated/src/bezier.js"],"names":["NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","Float32Array","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","i","Math","abs","newtonRaphsonIterate","aGuessT","currentSlope","module","exports","bezier","mY1","mY2","Error","sampleValues","Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","BezierEasing","x"],"mappings":"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","sourcesContent":["/**\n * BezierEasing - use bezier curve for transition easing function\n * https://github.com/gre/bezier-easing\n *\n * @flow\n * @format\n * @copyright 2014-2015 Gaëtan Renaudeau. MIT License.\n */\n\n'use strict';\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nconst NEWTON_ITERATIONS = 4;\nconst NEWTON_MIN_SLOPE = 0.001;\nconst SUBDIVISION_PRECISION = 0.0000001;\nconst SUBDIVISION_MAX_ITERATIONS = 10;\n\nconst kSplineTableSize = 11;\nconst kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nconst float32ArraySupported = typeof Float32Array === 'function';\n\nfunction A(aA1, aA2) {\n  return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n}\nfunction B(aA1, aA2) {\n  return 3.0 * aA2 - 6.0 * aA1;\n}\nfunction C(aA1) {\n  return 3.0 * aA1;\n}\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier(aT, aA1, aA2) {\n  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n}\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope(aT, aA1, aA2) {\n  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n}\n\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n  let currentX,\n    currentT,\n    i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (\n    Math.abs(currentX) > SUBDIVISION_PRECISION &&\n    ++i < SUBDIVISION_MAX_ITERATIONS\n  );\n  return currentT;\n}\n\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n  for (let i = 0; i < NEWTON_ITERATIONS; ++i) {\n    const currentSlope = getSlope(aGuessT, mX1, mX2);\n    if (currentSlope === 0.0) {\n      return aGuessT;\n    }\n    const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n    aGuessT -= currentX / currentSlope;\n  }\n  return aGuessT;\n}\n\nmodule.exports = function bezier(\n  mX1: number,\n  mY1: number,\n  mX2: number,\n  mY2: number,\n) {\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  // Precompute samples table\n  const sampleValues = float32ArraySupported\n    ? new Float32Array(kSplineTableSize)\n    : new Array(kSplineTableSize);\n  if (mX1 !== mY1 || mX2 !== mY2) {\n    for (let i = 0; i < kSplineTableSize; ++i) {\n      sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  function getTForX(aX) {\n    let intervalStart = 0.0;\n    let currentSample = 1;\n    const lastSample = kSplineTableSize - 1;\n\n    for (\n      ;\n      currentSample !== lastSample && sampleValues[currentSample] <= aX;\n      ++currentSample\n    ) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    const dist =\n      (aX - sampleValues[currentSample]) /\n      (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    const guessForT = intervalStart + dist * kSampleStepSize;\n\n    const initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(\n        aX,\n        intervalStart,\n        intervalStart + kSampleStepSize,\n        mX1,\n        mX2,\n      );\n    }\n  }\n\n  return function BezierEasing(x: number): number {\n    if (mX1 === mY1 && mX2 === mY2) {\n      return x; // linear\n    }\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n};\n"]}]}
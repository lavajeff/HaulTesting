{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Text/TextPropTypes.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Text/TextPropTypes.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var ColorPropType=require('ColorPropType');var EdgeInsetsPropType=require('EdgeInsetsPropType');var PropTypes=require('prop-types');var StyleSheetPropType=require('StyleSheetPropType');var TextStylePropTypes=require('TextStylePropTypes');var stylePropType=StyleSheetPropType(TextStylePropTypes);module.exports={ellipsizeMode:PropTypes.oneOf(['head','middle','tail','clip']),numberOfLines:PropTypes.number,textBreakStrategy:PropTypes.oneOf(['simple','highQuality','balanced']),onLayout:PropTypes.func,onPress:PropTypes.func,onLongPress:PropTypes.func,pressRetentionOffset:EdgeInsetsPropType,selectable:PropTypes.bool,selectionColor:ColorPropType,suppressHighlighting:PropTypes.bool,style:stylePropType,testID:PropTypes.string,nativeID:PropTypes.string,allowFontScaling:PropTypes.bool,accessible:PropTypes.bool,adjustsFontSizeToFit:PropTypes.bool,minimumFontScale:PropTypes.number,disabled:PropTypes.bool};;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(stylePropType,\"stylePropType\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Text/TextPropTypes.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Text/TextPropTypes.js"],"names":["ColorPropType","require","EdgeInsetsPropType","PropTypes","StyleSheetPropType","TextStylePropTypes","stylePropType","module","exports","ellipsizeMode","oneOf","numberOfLines","number","textBreakStrategy","onLayout","func","onPress","onLongPress","pressRetentionOffset","selectable","bool","selectionColor","suppressHighlighting","style","testID","string","nativeID","allowFontScaling","accessible","adjustsFontSizeToFit","minimumFontScale","disabled"],"mappings":"AAUA,a,0GAEA,GAAMA,CAAAA,aAAa,CAAGC,OAAO,CAAC,eAAD,CAA7B,CACA,GAAMC,CAAAA,kBAAkB,CAAGD,OAAO,CAAC,oBAAD,CAAlC,CACA,GAAME,CAAAA,SAAS,CAAGF,OAAO,CAAC,YAAD,CAAzB,CACA,GAAMG,CAAAA,kBAAkB,CAAGH,OAAO,CAAC,oBAAD,CAAlC,CACA,GAAMI,CAAAA,kBAAkB,CAAGJ,OAAO,CAAC,oBAAD,CAAlC,CAEA,GAAMK,CAAAA,aAAa,CAAGF,kBAAkB,CAACC,kBAAD,CAAxC,CAEAE,MAAM,CAACC,OAAP,CAAiB,CAOfC,aAAa,CAAEN,SAAS,CAACO,KAAV,CAAgB,CAAC,MAAD,CAAS,QAAT,CAAmB,MAAnB,CAA2B,MAA3B,CAAhB,CAPA,CAafC,aAAa,CAAER,SAAS,CAACS,MAbV,CAmBfC,iBAAiB,CAAEV,SAAS,CAACO,KAAV,CAAgB,CAAC,QAAD,CAAW,aAAX,CAA0B,UAA1B,CAAhB,CAnBJ,CAyBfI,QAAQ,CAAEX,SAAS,CAACY,IAzBL,CA+BfC,OAAO,CAAEb,SAAS,CAACY,IA/BJ,CAqCfE,WAAW,CAAEd,SAAS,CAACY,IArCR,CA4CfG,oBAAoB,CAAEhB,kBA5CP,CAkDfiB,UAAU,CAAEhB,SAAS,CAACiB,IAlDP,CAwDfC,cAAc,CAAErB,aAxDD,CA8DfsB,oBAAoB,CAAEnB,SAAS,CAACiB,IA9DjB,CA+DfG,KAAK,CAAEjB,aA/DQ,CAqEfkB,MAAM,CAAErB,SAAS,CAACsB,MArEH,CA2EfC,QAAQ,CAAEvB,SAAS,CAACsB,MA3EL,CAiFfE,gBAAgB,CAAExB,SAAS,CAACiB,IAjFb,CAuFfQ,UAAU,CAAEzB,SAAS,CAACiB,IAvFP,CA6FfS,oBAAoB,CAAE1B,SAAS,CAACiB,IA7FjB,CAmGfU,gBAAgB,CAAE3B,SAAS,CAACS,MAnGb,CAyGfmB,QAAQ,CAAE5B,SAAS,CAACiB,IAzGL,CAAjB,C,gLAFMd,a","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ColorPropType = require('ColorPropType');\nconst EdgeInsetsPropType = require('EdgeInsetsPropType');\nconst PropTypes = require('prop-types');\nconst StyleSheetPropType = require('StyleSheetPropType');\nconst TextStylePropTypes = require('TextStylePropTypes');\n\nconst stylePropType = StyleSheetPropType(TextStylePropTypes);\n\nmodule.exports = {\n  /**\n   * When `numberOfLines` is set, this prop defines how text will be\n   * truncated.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#ellipsizemode\n   */\n  ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),\n  /**\n   * Used to truncate the text with an ellipsis.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#numberoflines\n   */\n  numberOfLines: PropTypes.number,\n  /**\n   * Set text break strategy on Android.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#textbreakstrategy\n   */\n  textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),\n  /**\n   * Invoked on mount and layout changes.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#onlayout\n   */\n  onLayout: PropTypes.func,\n  /**\n   * This function is called on press.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#onpress\n   */\n  onPress: PropTypes.func,\n  /**\n   * This function is called on long press.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#onlongpress\n   */\n  onLongPress: PropTypes.func,\n  /**\n   * Defines how far your touch may move off of the button, before\n   * deactivating the button.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#pressretentionoffset\n   */\n  pressRetentionOffset: EdgeInsetsPropType,\n  /**\n   * Lets the user select text.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#selectable\n   */\n  selectable: PropTypes.bool,\n  /**\n   * The highlight color of the text.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#selectioncolor\n   */\n  selectionColor: ColorPropType,\n  /**\n   * When `true`, no visual change is made when text is pressed down.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#supperhighlighting\n   */\n  suppressHighlighting: PropTypes.bool,\n  style: stylePropType,\n  /**\n   * Used to locate this view in end-to-end tests.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#testid\n   */\n  testID: PropTypes.string,\n  /**\n   * Used to locate this view from native code.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#nativeid\n   */\n  nativeID: PropTypes.string,\n  /**\n   * Whether fonts should scale to respect Text Size accessibility settings.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#allowfontscaling\n   */\n  allowFontScaling: PropTypes.bool,\n  /**\n   * Indicates whether the view is an accessibility element.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#accessible\n   */\n  accessible: PropTypes.bool,\n  /**\n   * Whether font should be scaled down automatically.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#adjustsfontsizetofit\n   */\n  adjustsFontSizeToFit: PropTypes.bool,\n  /**\n   * Smallest possible scale a font can reach.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#minimumfontscale\n   */\n  minimumFontScale: PropTypes.number,\n  /**\n   * Specifies the disabled state of the text view for testing purposes.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#disabled\n   */\n  disabled: PropTypes.bool,\n};\n"]}]}
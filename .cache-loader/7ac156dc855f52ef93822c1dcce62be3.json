{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Network/RCTNetworking.ios.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Network/RCTNetworking.ios.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var MissingNativeEventEmitterShim=require('MissingNativeEventEmitterShim');var NativeEventEmitter=require('NativeEventEmitter');var RCTNetworkingNative=require('NativeModules').Networking;var convertRequestBody=require('convertRequestBody');var RCTNetworking=function(_NativeEventEmitter){(0,_inherits2.default)(RCTNetworking,_NativeEventEmitter);function RCTNetworking(){var _this;(0,_classCallCheck2.default)(this,RCTNetworking);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(RCTNetworking).call(this,RCTNetworkingNative));_this.isAvailable=true;return _this;}(0,_createClass2.default)(RCTNetworking,[{key:\"sendRequest\",value:function sendRequest(method,trackingName,url,headers,data,responseType,incrementalUpdates,timeout,callback,withCredentials){var body=convertRequestBody(data);RCTNetworkingNative.sendRequest({method:method,url:url,data:(0,_objectSpread2.default)({},body,{trackingName:trackingName}),headers:headers,responseType:responseType,incrementalUpdates:incrementalUpdates,timeout:timeout,withCredentials:withCredentials},callback);}},{key:\"abortRequest\",value:function abortRequest(requestId){RCTNetworkingNative.abortRequest(requestId);}},{key:\"clearCookies\",value:function clearCookies(callback){RCTNetworkingNative.clearCookies(callback);}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return RCTNetworking;}(NativeEventEmitter);if(__DEV__&&!RCTNetworkingNative){var MissingNativeRCTNetworkingShim=function(_MissingNativeEventEm){(0,_inherits2.default)(MissingNativeRCTNetworkingShim,_MissingNativeEventEm);function MissingNativeRCTNetworkingShim(){(0,_classCallCheck2.default)(this,MissingNativeRCTNetworkingShim);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(MissingNativeRCTNetworkingShim).call(this,'RCTNetworking','Networking'));}(0,_createClass2.default)(MissingNativeRCTNetworkingShim,[{key:\"sendRequest\",value:function sendRequest(){this.throwMissingNativeModule();}},{key:\"abortRequest\",value:function abortRequest(){this.throwMissingNativeModule();}},{key:\"clearCookies\",value:function clearCookies(){this.throwMissingNativeModule();}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return MissingNativeRCTNetworkingShim;}(MissingNativeEventEmitterShim);RCTNetworking=new MissingNativeRCTNetworkingShim();}else{RCTNetworking=new RCTNetworking();}module.exports=RCTNetworking;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(RCTNetworkingNative,\"RCTNetworkingNative\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Network/RCTNetworking.ios.js\");reactHotLoader.register(RCTNetworking,\"RCTNetworking\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Network/RCTNetworking.ios.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Network/RCTNetworking.ios.js"],"names":["MissingNativeEventEmitterShim","require","NativeEventEmitter","RCTNetworkingNative","Networking","convertRequestBody","RCTNetworking","isAvailable","method","trackingName","url","headers","data","responseType","incrementalUpdates","timeout","callback","withCredentials","body","sendRequest","requestId","abortRequest","clearCookies","__DEV__","MissingNativeRCTNetworkingShim","throwMissingNativeModule","module","exports"],"mappings":"AAUA,a,ivBAEA,GAAMA,CAAAA,6BAA6B,CAAGC,OAAO,CAAC,+BAAD,CAA7C,CACA,GAAMC,CAAAA,kBAAkB,CAAGD,OAAO,CAAC,oBAAD,CAAlC,CACA,GAAME,CAAAA,mBAAmB,CAAGF,OAAO,CAAC,eAAD,CAAP,CAAyBG,UAArD,CACA,GAAMC,CAAAA,kBAAkB,CAAGJ,OAAO,CAAC,oBAAD,CAAlC,C,GAMMK,CAAAA,a,yFAGJ,wBAAc,4DACZ,yGAAMH,mBAAN,GADY,MAFdI,WAEc,CAFS,IAET,cAEb,C,uFAGCC,M,CACAC,Y,CACAC,G,CACAC,O,CACAC,I,CACAC,Y,CACAC,kB,CACAC,O,CACAC,Q,CACAC,e,CACA,CACA,GAAMC,CAAAA,IAAI,CAAGb,kBAAkB,CAACO,IAAD,CAA/B,CACAT,mBAAmB,CAACgB,WAApB,CACE,CACEX,MAAM,CAANA,MADF,CAEEE,GAAG,CAAHA,GAFF,CAGEE,IAAI,+BAAMM,IAAN,EAAYT,YAAY,CAAZA,YAAZ,EAHN,CAIEE,OAAO,CAAPA,OAJF,CAKEE,YAAY,CAAZA,YALF,CAMEC,kBAAkB,CAAlBA,kBANF,CAOEC,OAAO,CAAPA,OAPF,CAQEE,eAAe,CAAfA,eARF,CADF,CAWED,QAXF,EAaD,C,kDAEYI,S,CAAmB,CAC9BjB,mBAAmB,CAACkB,YAApB,CAAiCD,SAAjC,EACD,C,kDAEYJ,Q,CAAoC,CAC/Cb,mBAAmB,CAACmB,YAApB,CAAiCN,QAAjC,EACD,C,qJAzCyBd,kB,EA4C5B,GAAIqB,OAAO,EAAI,CAACpB,mBAAhB,CAAqC,IAC7BqB,CAAAA,8BAD6B,8GAEjC,yCAAc,6LACN,eADM,CACW,YADX,GAEb,CAJgC,yGAMA,CAC/B,KAAKC,wBAAL,GACD,CARgC,mDAUC,CAChC,KAAKA,wBAAL,GACD,CAZgC,mDAcC,CAChC,KAAKA,wBAAL,GACD,CAhBgC,sKACUzB,6BADV,EAsBnCM,aAAa,CAAG,GAAIkB,CAAAA,8BAAJ,EAAhB,CACD,CAvBD,IAuBO,CACLlB,aAAa,CAAG,GAAIA,CAAAA,aAAJ,EAAhB,CACD,CAEDoB,MAAM,CAACC,OAAP,CAAiBrB,aAAjB,C,gLA9EMH,mB,8IAOAG,a","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst MissingNativeEventEmitterShim = require('MissingNativeEventEmitterShim');\nconst NativeEventEmitter = require('NativeEventEmitter');\nconst RCTNetworkingNative = require('NativeModules').Networking;\nconst convertRequestBody = require('convertRequestBody');\n\nimport type {RequestBody} from 'convertRequestBody';\n\nimport type {NativeResponseType} from './XMLHttpRequest';\n\nclass RCTNetworking extends NativeEventEmitter {\n  isAvailable: boolean = true;\n\n  constructor() {\n    super(RCTNetworkingNative);\n  }\n\n  sendRequest(\n    method: string,\n    trackingName: string,\n    url: string,\n    headers: Object,\n    data: RequestBody,\n    responseType: NativeResponseType,\n    incrementalUpdates: boolean,\n    timeout: number,\n    callback: (requestId: number) => any,\n    withCredentials: boolean,\n  ) {\n    const body = convertRequestBody(data);\n    RCTNetworkingNative.sendRequest(\n      {\n        method,\n        url,\n        data: {...body, trackingName},\n        headers,\n        responseType,\n        incrementalUpdates,\n        timeout,\n        withCredentials,\n      },\n      callback,\n    );\n  }\n\n  abortRequest(requestId: number) {\n    RCTNetworkingNative.abortRequest(requestId);\n  }\n\n  clearCookies(callback: (result: boolean) => any) {\n    RCTNetworkingNative.clearCookies(callback);\n  }\n}\n\nif (__DEV__ && !RCTNetworkingNative) {\n  class MissingNativeRCTNetworkingShim extends MissingNativeEventEmitterShim {\n    constructor() {\n      super('RCTNetworking', 'Networking');\n    }\n\n    sendRequest(...args: Array<any>) {\n      this.throwMissingNativeModule();\n    }\n\n    abortRequest(...args: Array<any>) {\n      this.throwMissingNativeModule();\n    }\n\n    clearCookies(...args: Array<any>) {\n      this.throwMissingNativeModule();\n    }\n  }\n\n  // This module depends on the native `RCTNetworkingNative` module. If you don't include it,\n  // `RCTNetworking.isAvailable` will return `false`, and any method calls will throw.\n  // We reassign the class variable to keep the autodoc generator happy.\n  RCTNetworking = new MissingNativeRCTNetworkingShim();\n} else {\n  RCTNetworking = new RCTNetworking();\n}\n\nmodule.exports = RCTNetworking;\n"]}]}
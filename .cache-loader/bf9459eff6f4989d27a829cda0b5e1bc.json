{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/PerformanceLogger.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/PerformanceLogger.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var Systrace=require('Systrace');var infoLog=require('infoLog');var performanceNow=global.nativeQPLTimestamp||global.nativePerformanceNow||require('fbjs/lib/performanceNow');var timespans={};var extras={};var cookies={};var PRINT_TO_CONSOLE=false;var PerformanceLogger={addTimespan:function addTimespan(key,lengthInMs,description){if(timespans[key]){if(__DEV__){infoLog('PerformanceLogger: Attempting to add a timespan that already exists ',key);}return;}timespans[key]={description:description,totalTime:lengthInMs};},startTimespan:function startTimespan(key,description){if(timespans[key]){if(__DEV__){infoLog('PerformanceLogger: Attempting to start a timespan that already exists ',key);}return;}timespans[key]={description:description,startTime:performanceNow()};cookies[key]=Systrace.beginAsyncEvent(key);if(PRINT_TO_CONSOLE){infoLog('PerformanceLogger.js','start: '+key);}},stopTimespan:function stopTimespan(key){var timespan=timespans[key];if(!timespan||!timespan.startTime){if(__DEV__){infoLog('PerformanceLogger: Attempting to end a timespan that has not started ',key);}return;}if(timespan.endTime){if(__DEV__){infoLog('PerformanceLogger: Attempting to end a timespan that has already ended ',key);}return;}timespan.endTime=performanceNow();timespan.totalTime=timespan.endTime-(timespan.startTime||0);if(PRINT_TO_CONSOLE){infoLog('PerformanceLogger.js','end: '+key);}Systrace.endAsyncEvent(key,cookies[key]);delete cookies[key];},clear:function clear(){timespans={};extras={};if(PRINT_TO_CONSOLE){infoLog('PerformanceLogger.js','clear');}},clearCompleted:function clearCompleted(){for(var _key in timespans){if(timespans[_key].totalTime){delete timespans[_key];}}extras={};if(PRINT_TO_CONSOLE){infoLog('PerformanceLogger.js','clearCompleted');}},clearExceptTimespans:function clearExceptTimespans(keys){timespans=Object.keys(timespans).reduce(function(previous,key){if(keys.indexOf(key)!==-1){previous[key]=timespans[key];}return previous;},{});extras={};if(PRINT_TO_CONSOLE){infoLog('PerformanceLogger.js','clearExceptTimespans',keys);}},currentTimestamp:function currentTimestamp(){return performanceNow();},getTimespans:function getTimespans(){return timespans;},hasTimespan:function hasTimespan(key){return!!timespans[key];},logTimespans:function logTimespans(){for(var _key2 in timespans){if(timespans[_key2].totalTime){infoLog(_key2+': '+timespans[_key2].totalTime+'ms');}}},addTimespans:function addTimespans(newTimespans,labels){for(var ii=0,l=newTimespans.length;ii<l;ii+=2){var label=labels[ii/2];PerformanceLogger.addTimespan(label,newTimespans[ii+1]-newTimespans[ii],label);}},setExtra:function setExtra(key,value){if(extras[key]){if(__DEV__){infoLog('PerformanceLogger: Attempting to set an extra that already exists ',{key:key,currentValue:extras[key],attemptedValue:value});}return;}extras[key]=value;},getExtras:function getExtras(){return extras;},logExtras:function logExtras(){infoLog(extras);}};module.exports=PerformanceLogger;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(performanceNow,\"performanceNow\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/PerformanceLogger.js\");reactHotLoader.register(timespans,\"timespans\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/PerformanceLogger.js\");reactHotLoader.register(extras,\"extras\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/PerformanceLogger.js\");reactHotLoader.register(cookies,\"cookies\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/PerformanceLogger.js\");reactHotLoader.register(PRINT_TO_CONSOLE,\"PRINT_TO_CONSOLE\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/PerformanceLogger.js\");reactHotLoader.register(PerformanceLogger,\"PerformanceLogger\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/PerformanceLogger.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/PerformanceLogger.js"],"names":["Systrace","require","infoLog","performanceNow","global","nativeQPLTimestamp","nativePerformanceNow","timespans","extras","cookies","PRINT_TO_CONSOLE","PerformanceLogger","addTimespan","key","lengthInMs","description","__DEV__","totalTime","startTimespan","startTime","beginAsyncEvent","stopTimespan","timespan","endTime","endAsyncEvent","clear","clearCompleted","clearExceptTimespans","keys","Object","reduce","previous","indexOf","currentTimestamp","getTimespans","hasTimespan","logTimespans","addTimespans","newTimespans","labels","ii","l","length","label","setExtra","value","currentValue","attemptedValue","getExtras","logExtras","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst Systrace = require('Systrace');\n\nconst infoLog = require('infoLog');\nconst performanceNow =\n  global.nativeQPLTimestamp ||\n  global.nativePerformanceNow ||\n  require('fbjs/lib/performanceNow');\n\ntype Timespan = {\n  description?: string,\n  totalTime?: number,\n  startTime?: number,\n  endTime?: number,\n};\n\nlet timespans: {[key: string]: Timespan} = {};\nlet extras: {[key: string]: any} = {};\nconst cookies: {[key: string]: number} = {};\n\nconst PRINT_TO_CONSOLE: false = false; // Type as false to prevent accidentally committing `true`;\n\n/**\n * This is meant to collect and log performance data in production, which means\n * it needs to have minimal overhead.\n */\nconst PerformanceLogger = {\n  addTimespan(key: string, lengthInMs: number, description?: string) {\n    if (timespans[key]) {\n      if (__DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to add a timespan that already exists ',\n          key,\n        );\n      }\n      return;\n    }\n\n    timespans[key] = {\n      description: description,\n      totalTime: lengthInMs,\n    };\n  },\n\n  startTimespan(key: string, description?: string) {\n    if (timespans[key]) {\n      if (__DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to start a timespan that already exists ',\n          key,\n        );\n      }\n      return;\n    }\n\n    timespans[key] = {\n      description: description,\n      startTime: performanceNow(),\n    };\n    cookies[key] = Systrace.beginAsyncEvent(key);\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'start: ' + key);\n    }\n  },\n\n  stopTimespan(key: string) {\n    const timespan = timespans[key];\n    if (!timespan || !timespan.startTime) {\n      if (__DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to end a timespan that has not started ',\n          key,\n        );\n      }\n      return;\n    }\n    if (timespan.endTime) {\n      if (__DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to end a timespan that has already ended ',\n          key,\n        );\n      }\n      return;\n    }\n\n    timespan.endTime = performanceNow();\n    timespan.totalTime = timespan.endTime - (timespan.startTime || 0);\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'end: ' + key);\n    }\n\n    Systrace.endAsyncEvent(key, cookies[key]);\n    delete cookies[key];\n  },\n\n  clear() {\n    timespans = {};\n    extras = {};\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'clear');\n    }\n  },\n\n  clearCompleted() {\n    for (const key in timespans) {\n      if (timespans[key].totalTime) {\n        delete timespans[key];\n      }\n    }\n    extras = {};\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'clearCompleted');\n    }\n  },\n\n  clearExceptTimespans(keys: Array<string>) {\n    timespans = Object.keys(timespans).reduce(function(previous, key) {\n      if (keys.indexOf(key) !== -1) {\n        previous[key] = timespans[key];\n      }\n      return previous;\n    }, {});\n    extras = {};\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'clearExceptTimespans', keys);\n    }\n  },\n\n  currentTimestamp() {\n    return performanceNow();\n  },\n\n  getTimespans() {\n    return timespans;\n  },\n\n  hasTimespan(key: string) {\n    return !!timespans[key];\n  },\n\n  logTimespans() {\n    for (const key in timespans) {\n      if (timespans[key].totalTime) {\n        infoLog(key + ': ' + timespans[key].totalTime + 'ms');\n      }\n    }\n  },\n\n  addTimespans(newTimespans: Array<number>, labels: Array<string>) {\n    for (let ii = 0, l = newTimespans.length; ii < l; ii += 2) {\n      const label = labels[ii / 2];\n      PerformanceLogger.addTimespan(\n        label,\n        newTimespans[ii + 1] - newTimespans[ii],\n        label,\n      );\n    }\n  },\n\n  setExtra(key: string, value: any) {\n    if (extras[key]) {\n      if (__DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to set an extra that already exists ',\n          {key, currentValue: extras[key], attemptedValue: value},\n        );\n      }\n      return;\n    }\n    extras[key] = value;\n  },\n\n  getExtras() {\n    return extras;\n  },\n\n  logExtras() {\n    infoLog(extras);\n  },\n};\n\nmodule.exports = PerformanceLogger;\n"]}]}
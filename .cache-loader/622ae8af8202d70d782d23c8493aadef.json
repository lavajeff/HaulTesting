{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/haul/src/hot/client/importScriptsPolyfill.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/haul/src/hot/client/importScriptsPolyfill.js","mtime":1539700438713},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["global.importScripts=global.importScripts||function(importPath){return fetch(importPath).then(function(response){return response.text();}).then(function(body){eval(body);});};",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/haul/src/hot/client/importScriptsPolyfill.js"],"names":["global","importScripts","importPath","fetch","then","response","text","body","eval"],"mappings":"AAeAA,MAAM,CAACC,aAAP,CACED,MAAM,CAACC,aAAP,EACC,SAAAC,UAAU,QACTC,CAAAA,KAAK,CAACD,UAAD,CAAL,CACGE,IADH,CACQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADhB,EAEGF,IAFH,CAEQ,SAAAG,IAAI,CAAI,CAEZC,IAAI,CAACD,IAAD,CAAJ,CACD,CALH,CADS,EAFb","sourcesContent":["/**\n * Copyright 2017-present, Callstack.\n * All rights reserved.\n * \n * @flow\n */\n\n/**\n * When setting `target` to `webworker` in webpack config, it will change template for downloading\n * hot update and will use `importScripts` which are available in WebWorkers, so we need to\n * provide implementation for it.\n * \n * Native `importScripts` is synchronous, however we can't do that, so this polyfill\n * is async and returns a Promise.\n */\nglobal.importScripts =\n  global.importScripts ||\n  (importPath =>\n    fetch(importPath)\n      .then(response => response.text())\n      .then(body => {\n        // eslint-disable-next-line no-eval\n        eval(body);\n      }));\n"]}]}
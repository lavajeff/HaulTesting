{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Button.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Button.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _jsxFileName=\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Button.js\";(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var ColorPropType=require('ColorPropType');var Platform=require('Platform');var React=require('React');var PropTypes=require('prop-types');var StyleSheet=require('StyleSheet');var Text=require('Text');var TouchableNativeFeedback=require('TouchableNativeFeedback');var TouchableOpacity=require('TouchableOpacity');var View=require('View');var invariant=require('fbjs/lib/invariant');var Button=function(_React$Component){(0,_inherits2.default)(Button,_React$Component);function Button(){(0,_classCallCheck2.default)(this,Button);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(Button).apply(this,arguments));}(0,_createClass2.default)(Button,[{key:\"render\",value:function render(){var _this$props=this.props,accessibilityLabel=_this$props.accessibilityLabel,color=_this$props.color,onPress=_this$props.onPress,title=_this$props.title,hasTVPreferredFocus=_this$props.hasTVPreferredFocus,disabled=_this$props.disabled,testID=_this$props.testID;var buttonStyles=[styles.button];var textStyles=[styles.text];if(color){if(Platform.OS==='ios'){textStyles.push({color:color});}else{buttonStyles.push({backgroundColor:color});}}var accessibilityStates=[];if(disabled){buttonStyles.push(styles.buttonDisabled);textStyles.push(styles.textDisabled);accessibilityStates.push('disabled');}invariant(typeof title==='string','The title prop of a Button must be a string');var formattedTitle=Platform.OS==='android'?title.toUpperCase():title;var Touchable=Platform.OS==='android'?TouchableNativeFeedback:TouchableOpacity;return React.createElement(Touchable,{accessibilityLabel:accessibilityLabel,accessibilityRole:\"button\",accessibilityStates:accessibilityStates,hasTVPreferredFocus:hasTVPreferredFocus,testID:testID,disabled:disabled,onPress:onPress,__source:{fileName:_jsxFileName,lineNumber:127}},React.createElement(View,{style:buttonStyles,__source:{fileName:_jsxFileName,lineNumber:135}},React.createElement(Text,{style:textStyles,disabled:disabled,__source:{fileName:_jsxFileName,lineNumber:136}},formattedTitle)));}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return Button;}(React.Component);Button.propTypes={title:PropTypes.string.isRequired,accessibilityLabel:PropTypes.string,color:ColorPropType,disabled:PropTypes.bool,hasTVPreferredFocus:PropTypes.bool,onPress:PropTypes.func.isRequired,testID:PropTypes.string};var styles=StyleSheet.create({button:Platform.select({ios:{},android:{elevation:4,backgroundColor:'#2196F3',borderRadius:2}}),text:Platform.select({ios:{color:'#007AFF',textAlign:'center',padding:8,fontSize:18},android:{color:'white',textAlign:'center',padding:8,fontWeight:'500'}}),buttonDisabled:Platform.select({ios:{},android:{elevation:0,backgroundColor:'#dfdfdf'}}),textDisabled:Platform.select({ios:{color:'#cdcdcd'},android:{color:'#a1a1a1'}})});module.exports=Button;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(Button,\"Button\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Button.js\");reactHotLoader.register(styles,\"styles\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Button.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Button.js"],"names":["ColorPropType","require","Platform","React","PropTypes","StyleSheet","Text","TouchableNativeFeedback","TouchableOpacity","View","invariant","Button","props","accessibilityLabel","color","onPress","title","hasTVPreferredFocus","disabled","testID","buttonStyles","styles","button","textStyles","text","OS","push","backgroundColor","accessibilityStates","buttonDisabled","textDisabled","formattedTitle","toUpperCase","Touchable","Component","propTypes","string","isRequired","bool","func","create","select","ios","android","elevation","borderRadius","textAlign","padding","fontSize","fontWeight","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst ColorPropType = require('ColorPropType');\nconst Platform = require('Platform');\nconst React = require('React');\nconst PropTypes = require('prop-types');\nconst StyleSheet = require('StyleSheet');\nconst Text = require('Text');\nconst TouchableNativeFeedback = require('TouchableNativeFeedback');\nconst TouchableOpacity = require('TouchableOpacity');\nconst View = require('View');\n\nconst invariant = require('fbjs/lib/invariant');\n\n/**\n * A basic button component that should render nicely on any platform. Supports\n * a minimal level of customization.\n *\n * <center><img src=\"img/buttonExample.png\"></img></center>\n *\n * If this button doesn't look right for your app, you can build your own\n * button using [TouchableOpacity](docs/touchableopacity.html)\n * or [TouchableNativeFeedback](docs/touchablenativefeedback.html).\n * For inspiration, look at the [source code for this button component](https://github.com/facebook/react-native/blob/master/Libraries/Components/Button.js).\n * Or, take a look at the [wide variety of button components built by the community](https://js.coach/react-native?search=button).\n *\n * Example usage:\n *\n * ```\n * import { Button } from 'react-native';\n * ...\n *\n * <Button\n *   onPress={onPressLearnMore}\n *   title=\"Learn More\"\n *   color=\"#841584\"\n *   accessibilityLabel=\"Learn more about this purple button\"\n * />\n * ```\n *\n */\n\nclass Button extends React.Component<{\n  title: string,\n  onPress: () => any,\n  color?: ?string,\n  hasTVPreferredFocus?: ?boolean,\n  accessibilityLabel?: ?string,\n  disabled?: ?boolean,\n  testID?: ?string,\n}> {\n  static propTypes = {\n    /**\n     * Text to display inside the button\n     */\n    title: PropTypes.string.isRequired,\n    /**\n     * Text to display for blindness accessibility features\n     */\n    accessibilityLabel: PropTypes.string,\n    /**\n     * Color of the text (iOS), or background color of the button (Android)\n     */\n    color: ColorPropType,\n    /**\n     * If true, disable all interactions for this component.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * TV preferred focus (see documentation for the View component).\n     */\n    hasTVPreferredFocus: PropTypes.bool,\n    /**\n     * Handler to be called when the user taps the button\n     */\n    onPress: PropTypes.func.isRequired,\n    /**\n     * Used to locate this view in end-to-end tests.\n     */\n    testID: PropTypes.string,\n  };\n\n  render() {\n    const {\n      accessibilityLabel,\n      color,\n      onPress,\n      title,\n      hasTVPreferredFocus,\n      disabled,\n      testID,\n    } = this.props;\n    const buttonStyles = [styles.button];\n    const textStyles = [styles.text];\n    if (color) {\n      if (Platform.OS === 'ios') {\n        textStyles.push({color: color});\n      } else {\n        buttonStyles.push({backgroundColor: color});\n      }\n    }\n    const accessibilityStates = [];\n    if (disabled) {\n      buttonStyles.push(styles.buttonDisabled);\n      textStyles.push(styles.textDisabled);\n      accessibilityStates.push('disabled');\n    }\n    invariant(\n      typeof title === 'string',\n      'The title prop of a Button must be a string',\n    );\n    const formattedTitle =\n      Platform.OS === 'android' ? title.toUpperCase() : title;\n    const Touchable =\n      Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity;\n    return (\n      <Touchable\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole=\"button\"\n        accessibilityStates={accessibilityStates}\n        hasTVPreferredFocus={hasTVPreferredFocus}\n        testID={testID}\n        disabled={disabled}\n        onPress={onPress}>\n        <View style={buttonStyles}>\n          <Text style={textStyles} disabled={disabled}>\n            {formattedTitle}\n          </Text>\n        </View>\n      </Touchable>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  button: Platform.select({\n    ios: {},\n    android: {\n      elevation: 4,\n      // Material design blue from https://material.google.com/style/color.html#color-color-palette\n      backgroundColor: '#2196F3',\n      borderRadius: 2,\n    },\n  }),\n  text: Platform.select({\n    ios: {\n      // iOS blue from https://developer.apple.com/ios/human-interface-guidelines/visual-design/color/\n      color: '#007AFF',\n      textAlign: 'center',\n      padding: 8,\n      fontSize: 18,\n    },\n    android: {\n      color: 'white',\n      textAlign: 'center',\n      padding: 8,\n      fontWeight: '500',\n    },\n  }),\n  buttonDisabled: Platform.select({\n    ios: {},\n    android: {\n      elevation: 0,\n      backgroundColor: '#dfdfdf',\n    },\n  }),\n  textDisabled: Platform.select({\n    ios: {\n      color: '#cdcdcd',\n    },\n    android: {\n      color: '#a1a1a1',\n    },\n  }),\n});\n\nmodule.exports = Button;\n"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableFlatList.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableFlatList.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _jsxFileName=\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableFlatList.js\";(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var PropTypes=require('prop-types');var React=require('React');var SwipeableRow=require('SwipeableRow');var FlatList=require('FlatList');var SwipeableFlatList=function(_React$Component){(0,_inherits2.default)(SwipeableFlatList,_React$Component);function SwipeableFlatList(props,context){var _this;(0,_classCallCheck2.default)(this,SwipeableFlatList);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(SwipeableFlatList).call(this,props,context));_this._flatListRef=null;_this._shouldBounceFirstRowOnMount=false;_this._onScroll=function(e){if(_this.state.openRowKey){_this.setState({openRowKey:null});}_this.props.onScroll&&_this.props.onScroll(e);};_this._renderItem=function(info){var slideoutView=_this.props.renderQuickActions(info);var key=_this.props.keyExtractor(info.item,info.index);if(!slideoutView){return _this.props.renderItem(info);}var shouldBounceOnMount=false;if(_this._shouldBounceFirstRowOnMount){_this._shouldBounceFirstRowOnMount=false;shouldBounceOnMount=true;}return React.createElement(SwipeableRow,{slideoutView:slideoutView,isOpen:key===_this.state.openRowKey,maxSwipeDistance:_this._getMaxSwipeDistance(info),onOpen:function onOpen(){return _this._onOpen(key);},onClose:function onClose(){return _this._onClose(key);},shouldBounceOnMount:shouldBounceOnMount,onSwipeEnd:_this._setListViewScrollable,onSwipeStart:_this._setListViewNotScrollable,__source:{fileName:_jsxFileName,lineNumber:135}},_this.props.renderItem(info));};_this._setListViewScrollable=function(){_this._setListViewScrollableTo(true);};_this._setListViewNotScrollable=function(){_this._setListViewScrollableTo(false);};_this.state={openRowKey:null};_this._shouldBounceFirstRowOnMount=_this.props.bounceFirstRowOnMount;return _this;}(0,_createClass2.default)(SwipeableFlatList,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(FlatList,(0,_extends2.default)({},this.props,{ref:function ref(_ref){_this2._flatListRef=_ref;},onScroll:this._onScroll,renderItem:this._renderItem,extraData:this.state,__source:{fileName:_jsxFileName,lineNumber:96}}));}},{key:\"_getMaxSwipeDistance\",value:function _getMaxSwipeDistance(info){if(typeof this.props.maxSwipeDistance==='function'){return this.props.maxSwipeDistance(info);}return this.props.maxSwipeDistance;}},{key:\"_setListViewScrollableTo\",value:function _setListViewScrollableTo(value){if(this._flatListRef){this._flatListRef.setNativeProps({scrollEnabled:value});}}},{key:\"_onOpen\",value:function _onOpen(key){this.setState({openRowKey:key});}},{key:\"_onClose\",value:function _onClose(key){this.setState({openRowKey:null});}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return SwipeableFlatList;}(React.Component);SwipeableFlatList.propTypes=(0,_objectSpread2.default)({},FlatList.propTypes,{bounceFirstRowOnMount:PropTypes.bool.isRequired,maxSwipeDistance:PropTypes.oneOfType([PropTypes.number,PropTypes.func]).isRequired,renderQuickActions:PropTypes.func.isRequired});SwipeableFlatList.defaultProps=(0,_objectSpread2.default)({},FlatList.defaultProps,{bounceFirstRowOnMount:true,renderQuickActions:function renderQuickActions(){return null;}});module.exports=SwipeableFlatList;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(SwipeableFlatList,\"SwipeableFlatList\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableFlatList.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableFlatList.js"],"names":["PropTypes","require","React","SwipeableRow","FlatList","SwipeableFlatList","props","context","_flatListRef","_shouldBounceFirstRowOnMount","_onScroll","e","state","openRowKey","setState","onScroll","_renderItem","info","slideoutView","renderQuickActions","key","keyExtractor","item","index","renderItem","shouldBounceOnMount","_getMaxSwipeDistance","_onOpen","_onClose","_setListViewScrollable","_setListViewNotScrollable","_setListViewScrollableTo","bounceFirstRowOnMount","ref","maxSwipeDistance","value","setNativeProps","scrollEnabled","Component","propTypes","bool","isRequired","oneOfType","number","func","defaultProps","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nimport type {Props as FlatListProps} from 'FlatList';\nimport type {renderItemType} from 'VirtualizedList';\n\nconst PropTypes = require('prop-types');\nconst React = require('React');\nconst SwipeableRow = require('SwipeableRow');\nconst FlatList = require('FlatList');\n\ntype SwipableListProps = {\n  /**\n   * To alert the user that swiping is possible, the first row can bounce\n   * on component mount.\n   */\n  bounceFirstRowOnMount: boolean,\n  // Maximum distance to open to after a swipe\n  maxSwipeDistance: number | (Object => number),\n  // Callback method to render the view that will be unveiled on swipe\n  renderQuickActions: renderItemType,\n};\n\ntype Props<ItemT> = SwipableListProps & FlatListProps<ItemT>;\n\ntype State = {\n  openRowKey: ?string,\n};\n\n/**\n * A container component that renders multiple SwipeableRow's in a FlatList\n * implementation. This is designed to be a drop-in replacement for the\n * standard React Native `FlatList`, so use it as if it were a FlatList, but\n * with extra props, i.e.\n *\n * <SwipeableListView renderRow={..} renderQuickActions={..} {..FlatList props} />\n *\n * SwipeableRow can be used independently of this component, but the main\n * benefit of using this component is\n *\n * - It ensures that at most 1 row is swiped open (auto closes others)\n * - It can bounce the 1st row of the list so users know it's swipeable\n * - Increase performance on iOS by locking list swiping when row swiping is occurring\n * - More to come\n */\n\nclass SwipeableFlatList<ItemT> extends React.Component<Props<ItemT>, State> {\n  props: Props<ItemT>;\n  state: State;\n\n  _flatListRef: ?FlatList<ItemT> = null;\n  _shouldBounceFirstRowOnMount: boolean = false;\n\n  static propTypes = {\n    ...FlatList.propTypes,\n\n    /**\n     * To alert the user that swiping is possible, the first row can bounce\n     * on component mount.\n     */\n    bounceFirstRowOnMount: PropTypes.bool.isRequired,\n\n    // Maximum distance to open to after a swipe\n    maxSwipeDistance: PropTypes.oneOfType([PropTypes.number, PropTypes.func])\n      .isRequired,\n\n    // Callback method to render the view that will be unveiled on swipe\n    renderQuickActions: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    ...FlatList.defaultProps,\n    bounceFirstRowOnMount: true,\n    renderQuickActions: () => null,\n  };\n\n  constructor(props: Props<ItemT>, context: any): void {\n    super(props, context);\n    this.state = {\n      openRowKey: null,\n    };\n\n    this._shouldBounceFirstRowOnMount = this.props.bounceFirstRowOnMount;\n  }\n\n  render(): React.Node {\n    return (\n      <FlatList\n        {...this.props}\n        ref={ref => {\n          this._flatListRef = ref;\n        }}\n        onScroll={this._onScroll}\n        renderItem={this._renderItem}\n        extraData={this.state}\n      />\n    );\n  }\n\n  _onScroll = (e): void => {\n    // Close any opens rows on ListView scroll\n    if (this.state.openRowKey) {\n      this.setState({\n        openRowKey: null,\n      });\n    }\n\n    this.props.onScroll && this.props.onScroll(e);\n  };\n\n  _renderItem = (info: Object): ?React.Element<any> => {\n    const slideoutView = this.props.renderQuickActions(info);\n    const key = this.props.keyExtractor(info.item, info.index);\n\n    // If renderQuickActions is unspecified or returns falsey, don't allow swipe\n    if (!slideoutView) {\n      return this.props.renderItem(info);\n    }\n\n    let shouldBounceOnMount = false;\n    if (this._shouldBounceFirstRowOnMount) {\n      this._shouldBounceFirstRowOnMount = false;\n      shouldBounceOnMount = true;\n    }\n\n    return (\n      <SwipeableRow\n        slideoutView={slideoutView}\n        isOpen={key === this.state.openRowKey}\n        maxSwipeDistance={this._getMaxSwipeDistance(info)}\n        onOpen={() => this._onOpen(key)}\n        onClose={() => this._onClose(key)}\n        shouldBounceOnMount={shouldBounceOnMount}\n        onSwipeEnd={this._setListViewScrollable}\n        onSwipeStart={this._setListViewNotScrollable}>\n        {this.props.renderItem(info)}\n      </SwipeableRow>\n    );\n  };\n\n  // This enables rows having variable width slideoutView.\n  _getMaxSwipeDistance(info: Object): number {\n    if (typeof this.props.maxSwipeDistance === 'function') {\n      return this.props.maxSwipeDistance(info);\n    }\n\n    return this.props.maxSwipeDistance;\n  }\n\n  _setListViewScrollableTo(value: boolean) {\n    if (this._flatListRef) {\n      this._flatListRef.setNativeProps({\n        scrollEnabled: value,\n      });\n    }\n  }\n\n  _setListViewScrollable = () => {\n    this._setListViewScrollableTo(true);\n  };\n\n  _setListViewNotScrollable = () => {\n    this._setListViewScrollableTo(false);\n  };\n\n  _onOpen(key: any): void {\n    this.setState({\n      openRowKey: key,\n    });\n  }\n\n  _onClose(key: any): void {\n    this.setState({\n      openRowKey: null,\n    });\n  }\n}\n\nmodule.exports = SwipeableFlatList;\n"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js","mtime":1539745230847},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _acquisitionSdk=require(\"code-push/script/acquisition-sdk\");var _AlertAdapter=require(\"./AlertAdapter\");var _requestFetchAdapter=_interopRequireDefault(require(\"./request-fetch-adapter\"));var _reactNative=require(\"react-native\");var _RestartManager=_interopRequireDefault(require(\"./RestartManager\"));var _logging=_interopRequireDefault(require(\"./logging\"));var _hoistNonReactStatics=_interopRequireDefault(require(\"hoist-non-react-statics\"));var _jsxFileName=\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\";(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var NativeCodePush=require(\"react-native\").NativeModules.CodePush;var PackageMixins=require(\"./package-mixins\")(NativeCodePush);function checkForUpdate(){var deploymentKey,handleBinaryVersionMismatchCallback,nativeConfig,config,sdk,localPackage,queryPackage,update,remotePackage,_args=arguments;return _regenerator.default.async(function checkForUpdate$(_context){while(1){switch(_context.prev=_context.next){case 0:deploymentKey=_args.length>0&&_args[0]!==undefined?_args[0]:null;handleBinaryVersionMismatchCallback=_args.length>1&&_args[1]!==undefined?_args[1]:null;_context.next=4;return _regenerator.default.awrap(getConfiguration());case 4:nativeConfig=_context.sent;config=deploymentKey?(0,_objectSpread2.default)({},nativeConfig,{deploymentKey:deploymentKey}):nativeConfig;sdk=getPromisifiedSdk(_requestFetchAdapter.default,config);_context.next=9;return _regenerator.default.awrap(module.exports.getCurrentPackage());case 9:localPackage=_context.sent;if(localPackage){queryPackage=localPackage;}else{queryPackage={appVersion:config.appVersion};if(_reactNative.Platform.OS===\"ios\"&&config.packageHash){queryPackage.packageHash=config.packageHash;}}_context.next=13;return _regenerator.default.awrap(sdk.queryUpdateWithCurrentPackage(queryPackage));case 13:update=_context.sent;if(!(!update||update.updateAppVersion||localPackage&&update.packageHash===localPackage.packageHash||(!localPackage||localPackage._isDebugOnly)&&config.packageHash===update.packageHash)){_context.next=19;break;}if(update&&update.updateAppVersion){(0,_logging.default)(\"An update is available but it is not targeting the binary version of your app.\");if(handleBinaryVersionMismatchCallback&&typeof handleBinaryVersionMismatchCallback===\"function\"){handleBinaryVersionMismatchCallback(update);}}return _context.abrupt(\"return\",null);case 19:remotePackage=(0,_objectSpread2.default)({},update,PackageMixins.remote(sdk.reportStatusDownload));_context.next=22;return _regenerator.default.awrap(NativeCodePush.isFailedUpdate(remotePackage.packageHash));case 22:remotePackage.failedInstall=_context.sent;remotePackage.deploymentKey=deploymentKey||nativeConfig.deploymentKey;return _context.abrupt(\"return\",remotePackage);case 25:case\"end\":return _context.stop();}}},null,this);}var getConfiguration=function(){var config;return function getConfiguration(){return _regenerator.default.async(function getConfiguration$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!config){_context2.next=4;break;}return _context2.abrupt(\"return\",config);case 4:if(!testConfig){_context2.next=8;break;}return _context2.abrupt(\"return\",testConfig);case 8:_context2.next=10;return _regenerator.default.awrap(NativeCodePush.getConfiguration());case 10:config=_context2.sent;return _context2.abrupt(\"return\",config);case 12:case\"end\":return _context2.stop();}}},null,this);};}();function getCurrentPackage(){return _regenerator.default.async(function getCurrentPackage$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return _regenerator.default.awrap(getUpdateMetadata(CodePush.UpdateState.LATEST));case 2:return _context3.abrupt(\"return\",_context3.sent);case 3:case\"end\":return _context3.stop();}}},null,this);}function getUpdateMetadata(updateState){var updateMetadata;return _regenerator.default.async(function getUpdateMetadata$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return _regenerator.default.awrap(NativeCodePush.getUpdateMetadata(updateState||CodePush.UpdateState.RUNNING));case 2:updateMetadata=_context4.sent;if(!updateMetadata){_context4.next=11;break;}updateMetadata=(0,_objectSpread2.default)({},PackageMixins.local,updateMetadata);_context4.next=7;return _regenerator.default.awrap(NativeCodePush.isFailedUpdate(updateMetadata.packageHash));case 7:updateMetadata.failedInstall=_context4.sent;_context4.next=10;return _regenerator.default.awrap(NativeCodePush.isFirstRun(updateMetadata.packageHash));case 10:updateMetadata.isFirstRun=_context4.sent;case 11:return _context4.abrupt(\"return\",updateMetadata);case 12:case\"end\":return _context4.stop();}}},null,this);}function getPromisifiedSdk(requestFetchAdapter,config){var sdk=new module.exports.AcquisitionSdk(requestFetchAdapter,config);sdk.queryUpdateWithCurrentPackage=function(queryPackage){return new Promise(function(resolve,reject){module.exports.AcquisitionSdk.prototype.queryUpdateWithCurrentPackage.call(sdk,queryPackage,function(err,update){if(err){reject(err);}else{resolve(update);}});});};sdk.reportStatusDeploy=function(deployedPackage,status,previousLabelOrAppVersion,previousDeploymentKey){return new Promise(function(resolve,reject){module.exports.AcquisitionSdk.prototype.reportStatusDeploy.call(sdk,deployedPackage,status,previousLabelOrAppVersion,previousDeploymentKey,function(err){if(err){reject(err);}else{resolve();}});});};sdk.reportStatusDownload=function(downloadedPackage){return new Promise(function(resolve,reject){module.exports.AcquisitionSdk.prototype.reportStatusDownload.call(sdk,downloadedPackage,function(err){if(err){reject(err);}else{resolve();}});});};return sdk;}var notifyApplicationReady=function(){var notifyApplicationReadyPromise;return function(){if(!notifyApplicationReadyPromise){notifyApplicationReadyPromise=notifyApplicationReadyInternal();}return notifyApplicationReadyPromise;};}();function notifyApplicationReadyInternal(){var statusReport;return _regenerator.default.async(function notifyApplicationReadyInternal$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return _regenerator.default.awrap(NativeCodePush.notifyApplicationReady());case 2:_context5.next=4;return _regenerator.default.awrap(NativeCodePush.getNewStatusReport());case 4:statusReport=_context5.sent;statusReport&&tryReportStatus(statusReport);return _context5.abrupt(\"return\",statusReport);case 7:case\"end\":return _context5.stop();}}},null,this);}function tryReportStatus(statusReport,_resumeListener){var config,previousLabelOrAppVersion,previousDeploymentKey,sdk,label,_sdk;return _regenerator.default.async(function tryReportStatus$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return _regenerator.default.awrap(getConfiguration());case 2:config=_context7.sent;previousLabelOrAppVersion=statusReport.previousLabelOrAppVersion;previousDeploymentKey=statusReport.previousDeploymentKey||config.deploymentKey;_context7.prev=5;if(!statusReport.appVersion){_context7.next=13;break;}(0,_logging.default)(\"Reporting binary update (\"+statusReport.appVersion+\")\");sdk=getPromisifiedSdk(_requestFetchAdapter.default,config);_context7.next=11;return _regenerator.default.awrap(sdk.reportStatusDeploy(null,null,previousLabelOrAppVersion,previousDeploymentKey));case 11:_context7.next=19;break;case 13:label=statusReport.package.label;if(statusReport.status===\"DeploymentSucceeded\"){(0,_logging.default)(\"Reporting CodePush update success (\"+label+\")\");}else{(0,_logging.default)(\"Reporting CodePush update rollback (\"+label+\")\");}config.deploymentKey=statusReport.package.deploymentKey;_sdk=getPromisifiedSdk(_requestFetchAdapter.default,config);_context7.next=19;return _regenerator.default.awrap(_sdk.reportStatusDeploy(statusReport.package,statusReport.status,previousLabelOrAppVersion,previousDeploymentKey));case 19:NativeCodePush.recordStatusReported(statusReport);_resumeListener&&_reactNative.AppState.removeEventListener(\"change\",_resumeListener);_context7.next=28;break;case 23:_context7.prev=23;_context7.t0=_context7[\"catch\"](5);(0,_logging.default)(\"Report status failed: \"+JSON.stringify(statusReport));NativeCodePush.saveStatusReportForRetry(statusReport);if(!_resumeListener){_resumeListener=function resumeListener(newState){var refreshedStatusReport;return _regenerator.default.async(function resumeListener$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(!(newState!==\"active\")){_context6.next=2;break;}return _context6.abrupt(\"return\");case 2:_context6.next=4;return _regenerator.default.awrap(NativeCodePush.getNewStatusReport());case 4:refreshedStatusReport=_context6.sent;if(refreshedStatusReport){tryReportStatus(refreshedStatusReport,_resumeListener);}else{_reactNative.AppState.removeEventListener(\"change\",_resumeListener);}case 6:case\"end\":return _context6.stop();}}},null,this);};_reactNative.AppState.addEventListener(\"change\",_resumeListener);}case 28:case\"end\":return _context7.stop();}}},null,this,[[5,23]]);}var testConfig;function setUpTestDependencies(testSdk,providedTestConfig,testNativeBridge){if(testSdk)module.exports.AcquisitionSdk=testSdk;if(providedTestConfig)testConfig=providedTestConfig;if(testNativeBridge)NativeCodePush=testNativeBridge;}var sync=function(){var syncInProgress=false;var setSyncCompleted=function setSyncCompleted(){syncInProgress=false;};return function(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var syncStatusChangeCallback=arguments.length>1?arguments[1]:undefined;var downloadProgressCallback=arguments.length>2?arguments[2]:undefined;var handleBinaryVersionMismatchCallback=arguments.length>3?arguments[3]:undefined;var syncStatusCallbackWithTryCatch,downloadProgressCallbackkWithTryCatch;if(typeof syncStatusChangeCallback===\"function\"){syncStatusCallbackWithTryCatch=function syncStatusCallbackWithTryCatch(){try{syncStatusChangeCallback.apply(void 0,arguments);}catch(error){(0,_logging.default)(\"An error has occurred : \"+error.stack);}};}if(typeof downloadProgressCallback===\"function\"){downloadProgressCallbackkWithTryCatch=function downloadProgressCallbackkWithTryCatch(){try{downloadProgressCallback.apply(void 0,arguments);}catch(error){(0,_logging.default)(\"An error has occurred: \"+error.stack);}};}if(syncInProgress){typeof syncStatusCallbackWithTryCatch===\"function\"?syncStatusCallbackWithTryCatch(CodePush.SyncStatus.SYNC_IN_PROGRESS):(0,_logging.default)(\"Sync already in progress.\");return Promise.resolve(CodePush.SyncStatus.SYNC_IN_PROGRESS);}syncInProgress=true;var syncPromise=syncInternal(options,syncStatusCallbackWithTryCatch,downloadProgressCallbackkWithTryCatch,handleBinaryVersionMismatchCallback);syncPromise.then(setSyncCompleted).catch(setSyncCompleted);return syncPromise;};}();function syncInternal(){var options,syncStatusChangeCallback,downloadProgressCallback,handleBinaryVersionMismatchCallback,resolvedInstallMode,syncOptions,remotePackage,doDownloadAndInstall,updateShouldBeIgnored,currentPackage,_args9=arguments;return _regenerator.default.async(function syncInternal$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:options=_args9.length>0&&_args9[0]!==undefined?_args9[0]:{};syncStatusChangeCallback=_args9.length>1?_args9[1]:undefined;downloadProgressCallback=_args9.length>2?_args9[2]:undefined;handleBinaryVersionMismatchCallback=_args9.length>3?_args9[3]:undefined;syncOptions=(0,_objectSpread2.default)({deploymentKey:null,ignoreFailedUpdates:true,installMode:CodePush.InstallMode.ON_NEXT_RESTART,mandatoryInstallMode:CodePush.InstallMode.IMMEDIATE,minimumBackgroundDuration:0,updateDialog:null},options);syncStatusChangeCallback=typeof syncStatusChangeCallback===\"function\"?syncStatusChangeCallback:function(syncStatus){switch(syncStatus){case CodePush.SyncStatus.CHECKING_FOR_UPDATE:(0,_logging.default)(\"Checking for update.\");break;case CodePush.SyncStatus.AWAITING_USER_ACTION:(0,_logging.default)(\"Awaiting user action.\");break;case CodePush.SyncStatus.DOWNLOADING_PACKAGE:(0,_logging.default)(\"Downloading package.\");break;case CodePush.SyncStatus.INSTALLING_UPDATE:(0,_logging.default)(\"Installing update.\");break;case CodePush.SyncStatus.UP_TO_DATE:(0,_logging.default)(\"App is up to date.\");break;case CodePush.SyncStatus.UPDATE_IGNORED:(0,_logging.default)(\"User cancelled the update.\");break;case CodePush.SyncStatus.UPDATE_INSTALLED:if(resolvedInstallMode==CodePush.InstallMode.ON_NEXT_RESTART){(0,_logging.default)(\"Update is installed and will be run on the next app restart.\");}else if(resolvedInstallMode==CodePush.InstallMode.ON_NEXT_RESUME){if(syncOptions.minimumBackgroundDuration>0){(0,_logging.default)(\"Update is installed and will be run after the app has been in the background for at least \"+syncOptions.minimumBackgroundDuration+\" seconds.\");}else{(0,_logging.default)(\"Update is installed and will be run when the app next resumes.\");}}break;case CodePush.SyncStatus.UNKNOWN_ERROR:(0,_logging.default)(\"An unknown error occurred.\");break;}};_context9.prev=6;_context9.next=9;return _regenerator.default.awrap(CodePush.notifyApplicationReady());case 9:syncStatusChangeCallback(CodePush.SyncStatus.CHECKING_FOR_UPDATE);_context9.next=12;return _regenerator.default.awrap(checkForUpdate(syncOptions.deploymentKey,handleBinaryVersionMismatchCallback));case 12:remotePackage=_context9.sent;doDownloadAndInstall=function doDownloadAndInstall(){var localPackage;return _regenerator.default.async(function doDownloadAndInstall$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:syncStatusChangeCallback(CodePush.SyncStatus.DOWNLOADING_PACKAGE);_context8.next=3;return _regenerator.default.awrap(remotePackage.download(downloadProgressCallback));case 3:localPackage=_context8.sent;resolvedInstallMode=localPackage.isMandatory?syncOptions.mandatoryInstallMode:syncOptions.installMode;syncStatusChangeCallback(CodePush.SyncStatus.INSTALLING_UPDATE);_context8.next=8;return _regenerator.default.awrap(localPackage.install(resolvedInstallMode,syncOptions.minimumBackgroundDuration,function(){syncStatusChangeCallback(CodePush.SyncStatus.UPDATE_INSTALLED);}));case 8:return _context8.abrupt(\"return\",CodePush.SyncStatus.UPDATE_INSTALLED);case 9:case\"end\":return _context8.stop();}}},null,this);};updateShouldBeIgnored=remotePackage&&remotePackage.failedInstall&&syncOptions.ignoreFailedUpdates;if(!(!remotePackage||updateShouldBeIgnored)){_context9.next=29;break;}if(updateShouldBeIgnored){(0,_logging.default)(\"An update is available, but it is being ignored due to having been previously rolled back.\");}_context9.next=19;return _regenerator.default.awrap(CodePush.getCurrentPackage());case 19:currentPackage=_context9.sent;if(!(currentPackage&&currentPackage.isPending)){_context9.next=25;break;}syncStatusChangeCallback(CodePush.SyncStatus.UPDATE_INSTALLED);return _context9.abrupt(\"return\",CodePush.SyncStatus.UPDATE_INSTALLED);case 25:syncStatusChangeCallback(CodePush.SyncStatus.UP_TO_DATE);return _context9.abrupt(\"return\",CodePush.SyncStatus.UP_TO_DATE);case 27:_context9.next=39;break;case 29:if(!syncOptions.updateDialog){_context9.next=36;break;}if(typeof syncOptions.updateDialog!==\"object\"){syncOptions.updateDialog=CodePush.DEFAULT_UPDATE_DIALOG;}else{syncOptions.updateDialog=(0,_objectSpread2.default)({},CodePush.DEFAULT_UPDATE_DIALOG,syncOptions.updateDialog);}_context9.next=33;return _regenerator.default.awrap(new Promise(function(resolve,reject){var message=null;var installButtonText=null;var dialogButtons=[];if(remotePackage.isMandatory){message=syncOptions.updateDialog.mandatoryUpdateMessage;installButtonText=syncOptions.updateDialog.mandatoryContinueButtonLabel;}else{message=syncOptions.updateDialog.optionalUpdateMessage;installButtonText=syncOptions.updateDialog.optionalInstallButtonLabel;dialogButtons.push({text:syncOptions.updateDialog.optionalIgnoreButtonLabel,onPress:function onPress(){syncStatusChangeCallback(CodePush.SyncStatus.UPDATE_IGNORED);resolve(CodePush.SyncStatus.UPDATE_IGNORED);}});}dialogButtons.push({text:installButtonText,onPress:function onPress(){doDownloadAndInstall().then(resolve,reject);}});if(syncOptions.updateDialog.appendReleaseDescription&&remotePackage.description){message+=syncOptions.updateDialog.descriptionPrefix+\" \"+remotePackage.description;}syncStatusChangeCallback(CodePush.SyncStatus.AWAITING_USER_ACTION);_AlertAdapter.Alert.alert(syncOptions.updateDialog.title,message,dialogButtons);}));case 33:return _context9.abrupt(\"return\",_context9.sent);case 36:_context9.next=38;return _regenerator.default.awrap(doDownloadAndInstall());case 38:return _context9.abrupt(\"return\",_context9.sent);case 39:_context9.next=46;break;case 41:_context9.prev=41;_context9.t0=_context9[\"catch\"](6);syncStatusChangeCallback(CodePush.SyncStatus.UNKNOWN_ERROR);(0,_logging.default)(_context9.t0.message);throw _context9.t0;case 46:case\"end\":return _context9.stop();}}},null,this,[[6,41]]);};var CodePush;function codePushify(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var React;var ReactNative=require(\"react-native\");try{React=require(\"react\");}catch(e){}if(!React){try{React=ReactNative.React;}catch(e){}if(!React){throw new Error(\"Unable to find the 'React' module.\");}}if(!React.Component){throw new Error(\"Unable to find the \\\"Component\\\" class, please either:\\n1. Upgrade to a newer version of React Native that supports it, or\\n2. Call the codePush.sync API in your component instead of using the @codePush decorator\");}var decorator=function decorator(RootComponent){var extended=function(_React$Component){(0,_inherits2.default)(CodePushComponent,_React$Component);function CodePushComponent(){(0,_classCallCheck2.default)(this,CodePushComponent);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(CodePushComponent).apply(this,arguments));}(0,_createClass2.default)(CodePushComponent,[{key:\"componentDidMount\",value:function componentDidMount(){if(options.checkFrequency===CodePush.CheckFrequency.MANUAL){CodePush.notifyAppReady();}else{var rootComponentInstance=this.refs.rootComponent;var syncStatusCallback;if(rootComponentInstance&&rootComponentInstance.codePushStatusDidChange){syncStatusCallback=rootComponentInstance.codePushStatusDidChange;if(rootComponentInstance instanceof React.Component){syncStatusCallback=syncStatusCallback.bind(rootComponentInstance);}}var downloadProgressCallback;if(rootComponentInstance&&rootComponentInstance.codePushDownloadDidProgress){downloadProgressCallback=rootComponentInstance.codePushDownloadDidProgress;if(rootComponentInstance instanceof React.Component){downloadProgressCallback=downloadProgressCallback.bind(rootComponentInstance);}}var handleBinaryVersionMismatchCallback;if(rootComponentInstance&&rootComponentInstance.codePushOnBinaryVersionMismatch){handleBinaryVersionMismatchCallback=rootComponentInstance.codePushOnBinaryVersionMismatch;if(rootComponentInstance instanceof React.Component){handleBinaryVersionMismatchCallback=handleBinaryVersionMismatchCallback.bind(rootComponentInstance);}}CodePush.sync(options,syncStatusCallback,downloadProgressCallback,handleBinaryVersionMismatchCallback);if(options.checkFrequency===CodePush.CheckFrequency.ON_APP_RESUME){ReactNative.AppState.addEventListener(\"change\",function(newState){newState===\"active\"&&CodePush.sync(options,syncStatusCallback,downloadProgressCallback);});}}}},{key:\"render\",value:function render(){var props=(0,_objectSpread2.default)({},this.props);if(RootComponent.prototype.render){props.ref=\"rootComponent\";}return React.createElement(RootComponent,(0,_extends2.default)({},props,{__source:{fileName:_jsxFileName,lineNumber:510}}));}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return CodePushComponent;}(React.Component);return(0,_hoistNonReactStatics.default)(extended,RootComponent);};if(typeof options===\"function\"){return decorator(options);}else{return decorator;}}if(NativeCodePush){CodePush=codePushify;(0,_extends2.default)(CodePush,{AcquisitionSdk:_acquisitionSdk.AcquisitionManager,checkForUpdate:checkForUpdate,getConfiguration:getConfiguration,getCurrentPackage:getCurrentPackage,getUpdateMetadata:getUpdateMetadata,log:_logging.default,notifyAppReady:notifyApplicationReady,notifyApplicationReady:notifyApplicationReady,restartApp:_RestartManager.default.restartApp,setUpTestDependencies:setUpTestDependencies,sync:sync,disallowRestart:_RestartManager.default.disallow,allowRestart:_RestartManager.default.allow,clearUpdates:NativeCodePush.clearUpdates,InstallMode:{IMMEDIATE:NativeCodePush.codePushInstallModeImmediate,ON_NEXT_RESTART:NativeCodePush.codePushInstallModeOnNextRestart,ON_NEXT_RESUME:NativeCodePush.codePushInstallModeOnNextResume,ON_NEXT_SUSPEND:NativeCodePush.codePushInstallModeOnNextSuspend},SyncStatus:{UP_TO_DATE:0,UPDATE_INSTALLED:1,UPDATE_IGNORED:2,UNKNOWN_ERROR:3,SYNC_IN_PROGRESS:4,CHECKING_FOR_UPDATE:5,AWAITING_USER_ACTION:6,DOWNLOADING_PACKAGE:7,INSTALLING_UPDATE:8},CheckFrequency:{ON_APP_START:0,ON_APP_RESUME:1,MANUAL:2},UpdateState:{RUNNING:NativeCodePush.codePushUpdateStateRunning,PENDING:NativeCodePush.codePushUpdateStatePending,LATEST:NativeCodePush.codePushUpdateStateLatest},DeploymentStatus:{FAILED:\"DeploymentFailed\",SUCCEEDED:\"DeploymentSucceeded\"},DEFAULT_UPDATE_DIALOG:{appendReleaseDescription:false,descriptionPrefix:\" Description: \",mandatoryContinueButtonLabel:\"Continue\",mandatoryUpdateMessage:\"An update is available that must be installed.\",optionalIgnoreButtonLabel:\"Ignore\",optionalInstallButtonLabel:\"Install\",optionalUpdateMessage:\"An update is available. Would you like to install it?\",title:\"Update available\"}});}else{(0,_logging.default)(\"The CodePush module doesn't appear to be properly installed. Please double-check that everything is setup correctly.\");}module.exports=CodePush;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(NativeCodePush,\"NativeCodePush\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");reactHotLoader.register(PackageMixins,\"PackageMixins\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");reactHotLoader.register(checkForUpdate,\"checkForUpdate\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");reactHotLoader.register(getConfiguration,\"getConfiguration\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");reactHotLoader.register(getCurrentPackage,\"getCurrentPackage\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");reactHotLoader.register(getUpdateMetadata,\"getUpdateMetadata\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");reactHotLoader.register(getPromisifiedSdk,\"getPromisifiedSdk\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");reactHotLoader.register(notifyApplicationReady,\"notifyApplicationReady\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");reactHotLoader.register(notifyApplicationReadyInternal,\"notifyApplicationReadyInternal\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");reactHotLoader.register(tryReportStatus,\"tryReportStatus\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");reactHotLoader.register(testConfig,\"testConfig\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");reactHotLoader.register(setUpTestDependencies,\"setUpTestDependencies\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");reactHotLoader.register(sync,\"sync\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");reactHotLoader.register(syncInternal,\"syncInternal\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");reactHotLoader.register(CodePush,\"CodePush\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");reactHotLoader.register(codePushify,\"codePushify\",\"/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native-code-push/CodePush.js"],"names":["NativeCodePush","require","NativeModules","CodePush","PackageMixins","checkForUpdate","deploymentKey","handleBinaryVersionMismatchCallback","getConfiguration","nativeConfig","config","sdk","getPromisifiedSdk","requestFetchAdapter","module","exports","getCurrentPackage","localPackage","queryPackage","appVersion","Platform","OS","packageHash","queryUpdateWithCurrentPackage","update","updateAppVersion","_isDebugOnly","remotePackage","remote","reportStatusDownload","isFailedUpdate","failedInstall","testConfig","getUpdateMetadata","UpdateState","LATEST","updateState","RUNNING","updateMetadata","local","isFirstRun","AcquisitionSdk","Promise","resolve","reject","prototype","call","err","reportStatusDeploy","deployedPackage","status","previousLabelOrAppVersion","previousDeploymentKey","downloadedPackage","notifyApplicationReady","notifyApplicationReadyPromise","notifyApplicationReadyInternal","getNewStatusReport","statusReport","tryReportStatus","resumeListener","label","package","recordStatusReported","AppState","removeEventListener","JSON","stringify","saveStatusReportForRetry","newState","refreshedStatusReport","addEventListener","setUpTestDependencies","testSdk","providedTestConfig","testNativeBridge","sync","syncInProgress","setSyncCompleted","options","syncStatusChangeCallback","downloadProgressCallback","syncStatusCallbackWithTryCatch","downloadProgressCallbackkWithTryCatch","error","stack","SyncStatus","SYNC_IN_PROGRESS","syncPromise","syncInternal","then","catch","syncOptions","ignoreFailedUpdates","installMode","InstallMode","ON_NEXT_RESTART","mandatoryInstallMode","IMMEDIATE","minimumBackgroundDuration","updateDialog","syncStatus","CHECKING_FOR_UPDATE","AWAITING_USER_ACTION","DOWNLOADING_PACKAGE","INSTALLING_UPDATE","UP_TO_DATE","UPDATE_IGNORED","UPDATE_INSTALLED","resolvedInstallMode","ON_NEXT_RESUME","UNKNOWN_ERROR","doDownloadAndInstall","download","isMandatory","install","updateShouldBeIgnored","currentPackage","isPending","DEFAULT_UPDATE_DIALOG","message","installButtonText","dialogButtons","mandatoryUpdateMessage","mandatoryContinueButtonLabel","optionalUpdateMessage","optionalInstallButtonLabel","push","text","optionalIgnoreButtonLabel","onPress","appendReleaseDescription","description","descriptionPrefix","Alert","alert","title","codePushify","React","ReactNative","e","Error","Component","decorator","RootComponent","extended","checkFrequency","CheckFrequency","MANUAL","notifyAppReady","rootComponentInstance","refs","rootComponent","syncStatusCallback","codePushStatusDidChange","bind","codePushDownloadDidProgress","codePushOnBinaryVersionMismatch","ON_APP_RESUME","props","render","ref","Sdk","log","restartApp","RestartManager","disallowRestart","disallow","allowRestart","allow","clearUpdates","codePushInstallModeImmediate","codePushInstallModeOnNextRestart","codePushInstallModeOnNextResume","ON_NEXT_SUSPEND","codePushInstallModeOnNextSuspend","ON_APP_START","codePushUpdateStateRunning","PENDING","codePushUpdateStatePending","codePushUpdateStateLatest","DeploymentStatus","FAILED","SUCCEEDED"],"mappings":"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","sourcesContent":["import { AcquisitionManager as Sdk } from \"code-push/script/acquisition-sdk\";\nimport { Alert } from \"./AlertAdapter\";\nimport requestFetchAdapter from \"./request-fetch-adapter\";\nimport { AppState, Platform } from \"react-native\";\nimport RestartManager from \"./RestartManager\";\nimport log from \"./logging\";\nimport hoistStatics from 'hoist-non-react-statics';\n\nlet NativeCodePush = require(\"react-native\").NativeModules.CodePush;\nconst PackageMixins = require(\"./package-mixins\")(NativeCodePush);\n\nasync function checkForUpdate(deploymentKey = null, handleBinaryVersionMismatchCallback = null) {\n  /*\n   * Before we ask the server if an update exists, we\n   * need to retrieve three pieces of information from the\n   * native side: deployment key, app version (e.g. 1.0.1)\n   * and the hash of the currently running update (if there is one).\n   * This allows the client to only receive updates which are targetted\n   * for their specific deployment and version and which are actually\n   * different from the CodePush update they have already installed.\n   */\n  const nativeConfig = await getConfiguration();\n  /*\n   * If a deployment key was explicitly provided,\n   * then let's override the one we retrieved\n   * from the native-side of the app. This allows\n   * dynamically \"redirecting\" end-users at different\n   * deployments (e.g. an early access deployment for insiders).\n   */\n  const config = deploymentKey ? { ...nativeConfig, ...{ deploymentKey } } : nativeConfig;\n  const sdk = getPromisifiedSdk(requestFetchAdapter, config);\n\n  // Use dynamically overridden getCurrentPackage() during tests.\n  const localPackage = await module.exports.getCurrentPackage();\n\n  /*\n   * If the app has a previously installed update, and that update\n   * was targetted at the same app version that is currently running,\n   * then we want to use its package hash to determine whether a new\n   * release has been made on the server. Otherwise, we only need\n   * to send the app version to the server, since we are interested\n   * in any updates for current app store version, regardless of hash.\n   */\n  let queryPackage;\n  if (localPackage) {\n    queryPackage = localPackage;\n  } else {\n    queryPackage = { appVersion: config.appVersion };\n    if (Platform.OS === \"ios\" && config.packageHash) {\n      queryPackage.packageHash = config.packageHash;\n    }\n  }\n\n  const update = await sdk.queryUpdateWithCurrentPackage(queryPackage);\n\n  /*\n   * There are four cases where checkForUpdate will resolve to null:\n   * ----------------------------------------------------------------\n   * 1) The server said there isn't an update. This is the most common case.\n   * 2) The server said there is an update but it requires a newer binary version.\n   *    This would occur when end-users are running an older app store version than\n   *    is available, and CodePush is making sure they don't get an update that\n   *    potentially wouldn't be compatible with what they are running.\n   * 3) The server said there is an update, but the update's hash is the same as\n   *    the currently running update. This should _never_ happen, unless there is a\n   *    bug in the server, but we're adding this check just to double-check that the\n   *    client app is resilient to a potential issue with the update check.\n   * 4) The server said there is an update, but the update's hash is the same as that\n   *    of the binary's currently running version. This should only happen in Android -\n   *    unlike iOS, we don't attach the binary's hash to the updateCheck request\n   *    because we want to avoid having to install diff updates against the binary's\n   *    version, which we can't do yet on Android.\n   */\n  if (!update || update.updateAppVersion ||\n      localPackage && (update.packageHash === localPackage.packageHash) ||\n      (!localPackage || localPackage._isDebugOnly) && config.packageHash === update.packageHash) {\n    if (update && update.updateAppVersion) {\n      log(\"An update is available but it is not targeting the binary version of your app.\");\n      if (handleBinaryVersionMismatchCallback && typeof handleBinaryVersionMismatchCallback === \"function\") {\n        handleBinaryVersionMismatchCallback(update)\n      }\n    }\n\n    return null;\n  } else {\n    const remotePackage = { ...update, ...PackageMixins.remote(sdk.reportStatusDownload) };\n    remotePackage.failedInstall = await NativeCodePush.isFailedUpdate(remotePackage.packageHash);\n    remotePackage.deploymentKey = deploymentKey || nativeConfig.deploymentKey;\n    return remotePackage;\n  }\n}\n\nconst getConfiguration = (() => {\n  let config;\n  return async function getConfiguration() {\n    if (config) {\n      return config;\n    } else if (testConfig) {\n      return testConfig;\n    } else {\n      config = await NativeCodePush.getConfiguration();\n      return config;\n    }\n  }\n})();\n\nasync function getCurrentPackage() {\n  return await getUpdateMetadata(CodePush.UpdateState.LATEST);\n}\n\nasync function getUpdateMetadata(updateState) {\n  let updateMetadata = await NativeCodePush.getUpdateMetadata(updateState || CodePush.UpdateState.RUNNING);\n  if (updateMetadata) {\n    updateMetadata = {...PackageMixins.local, ...updateMetadata};\n    updateMetadata.failedInstall = await NativeCodePush.isFailedUpdate(updateMetadata.packageHash);\n    updateMetadata.isFirstRun = await NativeCodePush.isFirstRun(updateMetadata.packageHash);\n  }\n  return updateMetadata;\n}\n\nfunction getPromisifiedSdk(requestFetchAdapter, config) {\n  // Use dynamically overridden AcquisitionSdk during tests.\n  const sdk = new module.exports.AcquisitionSdk(requestFetchAdapter, config);\n  sdk.queryUpdateWithCurrentPackage = (queryPackage) => {\n    return new Promise((resolve, reject) => {\n      module.exports.AcquisitionSdk.prototype.queryUpdateWithCurrentPackage.call(sdk, queryPackage, (err, update) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(update);\n        }\n      });\n    });\n  };\n\n  sdk.reportStatusDeploy = (deployedPackage, status, previousLabelOrAppVersion, previousDeploymentKey) => {\n    return new Promise((resolve, reject) => {\n      module.exports.AcquisitionSdk.prototype.reportStatusDeploy.call(sdk, deployedPackage, status, previousLabelOrAppVersion, previousDeploymentKey, (err) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      });\n    });\n  };\n\n  sdk.reportStatusDownload = (downloadedPackage) => {\n    return new Promise((resolve, reject) => {\n      module.exports.AcquisitionSdk.prototype.reportStatusDownload.call(sdk, downloadedPackage, (err) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      });\n    });\n  };\n\n  return sdk;\n}\n\n// This ensures that notifyApplicationReadyInternal is only called once\n// in the lifetime of this module instance.\nconst notifyApplicationReady = (() => {\n  let notifyApplicationReadyPromise;\n  return () => {\n    if (!notifyApplicationReadyPromise) {\n      notifyApplicationReadyPromise = notifyApplicationReadyInternal();\n    }\n\n    return notifyApplicationReadyPromise;\n  };\n})();\n\nasync function notifyApplicationReadyInternal() {\n  await NativeCodePush.notifyApplicationReady();\n  const statusReport = await NativeCodePush.getNewStatusReport();\n  statusReport && tryReportStatus(statusReport); // Don't wait for this to complete.\n\n  return statusReport;\n}\n\nasync function tryReportStatus(statusReport, resumeListener) {\n  const config = await getConfiguration();\n  const previousLabelOrAppVersion = statusReport.previousLabelOrAppVersion;\n  const previousDeploymentKey = statusReport.previousDeploymentKey || config.deploymentKey;\n  try {\n    if (statusReport.appVersion) {\n      log(`Reporting binary update (${statusReport.appVersion})`);\n\n      const sdk = getPromisifiedSdk(requestFetchAdapter, config);\n      await sdk.reportStatusDeploy(/* deployedPackage */ null, /* status */ null, previousLabelOrAppVersion, previousDeploymentKey);\n    } else {\n      const label = statusReport.package.label;\n      if (statusReport.status === \"DeploymentSucceeded\") {\n        log(`Reporting CodePush update success (${label})`);\n      } else {\n        log(`Reporting CodePush update rollback (${label})`);\n      }\n\n      config.deploymentKey = statusReport.package.deploymentKey;\n      const sdk = getPromisifiedSdk(requestFetchAdapter, config);\n      await sdk.reportStatusDeploy(statusReport.package, statusReport.status, previousLabelOrAppVersion, previousDeploymentKey);\n    }\n\n    NativeCodePush.recordStatusReported(statusReport);\n    resumeListener && AppState.removeEventListener(\"change\", resumeListener);\n  } catch (e) {\n    log(`Report status failed: ${JSON.stringify(statusReport)}`);\n    NativeCodePush.saveStatusReportForRetry(statusReport);\n    // Try again when the app resumes\n    if (!resumeListener) {\n      resumeListener = async (newState) => {\n        if (newState !== \"active\") return;\n        const refreshedStatusReport = await NativeCodePush.getNewStatusReport();\n        if (refreshedStatusReport) {\n          tryReportStatus(refreshedStatusReport, resumeListener);\n        } else {\n          AppState.removeEventListener(\"change\", resumeListener);\n        }\n      };\n      AppState.addEventListener(\"change\", resumeListener);\n    }\n  }\n}\n\nvar testConfig;\n\n// This function is only used for tests. Replaces the default SDK, configuration and native bridge\nfunction setUpTestDependencies(testSdk, providedTestConfig, testNativeBridge) {\n  if (testSdk) module.exports.AcquisitionSdk = testSdk;\n  if (providedTestConfig) testConfig = providedTestConfig;\n  if (testNativeBridge) NativeCodePush = testNativeBridge;\n}\n\n// This function allows only one syncInternal operation to proceed at any given time.\n// Parallel calls to sync() while one is ongoing yields CodePush.SyncStatus.SYNC_IN_PROGRESS.\nconst sync = (() => {\n  let syncInProgress = false;\n  const setSyncCompleted = () => { syncInProgress = false; };\n\n  return (options = {}, syncStatusChangeCallback, downloadProgressCallback, handleBinaryVersionMismatchCallback) => {\n    let syncStatusCallbackWithTryCatch, downloadProgressCallbackkWithTryCatch;\n    if (typeof syncStatusChangeCallback === \"function\") {\n      syncStatusCallbackWithTryCatch = (...args) => {\n        try {\n          syncStatusChangeCallback(...args);\n        } catch (error) {\n          log(`An error has occurred : ${error.stack}`);\n        }\n      }\n    }\n\n    if (typeof downloadProgressCallback === \"function\") {\n      downloadProgressCallbackkWithTryCatch = (...args) => {\n        try {\n          downloadProgressCallback(...args);\n        } catch (error) {\n          log(`An error has occurred: ${error.stack}`);\n        }\n      }\n    }\n\n    if (syncInProgress) {\n      typeof syncStatusCallbackWithTryCatch === \"function\"\n        ? syncStatusCallbackWithTryCatch(CodePush.SyncStatus.SYNC_IN_PROGRESS)\n        : log(\"Sync already in progress.\");\n      return Promise.resolve(CodePush.SyncStatus.SYNC_IN_PROGRESS);\n    }\n\n    syncInProgress = true;\n    const syncPromise = syncInternal(options, syncStatusCallbackWithTryCatch, downloadProgressCallbackkWithTryCatch, handleBinaryVersionMismatchCallback);\n    syncPromise\n      .then(setSyncCompleted)\n      .catch(setSyncCompleted);\n\n    return syncPromise;\n  };\n})();\n\n/*\n * The syncInternal method provides a simple, one-line experience for\n * incorporating the check, download and installation of an update.\n *\n * It simply composes the existing API methods together and adds additional\n * support for respecting mandatory updates, ignoring previously failed\n * releases, and displaying a standard confirmation UI to the end-user\n * when an update is available.\n */\nasync function syncInternal(options = {}, syncStatusChangeCallback, downloadProgressCallback, handleBinaryVersionMismatchCallback) {\n  let resolvedInstallMode;\n  const syncOptions = {\n    deploymentKey: null,\n    ignoreFailedUpdates: true,\n    installMode: CodePush.InstallMode.ON_NEXT_RESTART,\n    mandatoryInstallMode: CodePush.InstallMode.IMMEDIATE,\n    minimumBackgroundDuration: 0,\n    updateDialog: null,\n    ...options\n  };\n\n  syncStatusChangeCallback = typeof syncStatusChangeCallback === \"function\"\n    ? syncStatusChangeCallback\n    : (syncStatus) => {\n        switch(syncStatus) {\n          case CodePush.SyncStatus.CHECKING_FOR_UPDATE:\n            log(\"Checking for update.\");\n            break;\n          case CodePush.SyncStatus.AWAITING_USER_ACTION:\n            log(\"Awaiting user action.\");\n            break;\n          case CodePush.SyncStatus.DOWNLOADING_PACKAGE:\n            log(\"Downloading package.\");\n            break;\n          case CodePush.SyncStatus.INSTALLING_UPDATE:\n            log(\"Installing update.\");\n            break;\n          case CodePush.SyncStatus.UP_TO_DATE:\n            log(\"App is up to date.\");\n            break;\n          case CodePush.SyncStatus.UPDATE_IGNORED:\n            log(\"User cancelled the update.\");\n            break;\n          case CodePush.SyncStatus.UPDATE_INSTALLED:\n            if (resolvedInstallMode == CodePush.InstallMode.ON_NEXT_RESTART) {\n              log(\"Update is installed and will be run on the next app restart.\");\n            } else if (resolvedInstallMode == CodePush.InstallMode.ON_NEXT_RESUME) {\n              if (syncOptions.minimumBackgroundDuration > 0) {\n                log(`Update is installed and will be run after the app has been in the background for at least ${syncOptions.minimumBackgroundDuration} seconds.`);\n              } else {\n                log(\"Update is installed and will be run when the app next resumes.\");\n              }\n            }\n            break;\n          case CodePush.SyncStatus.UNKNOWN_ERROR:\n            log(\"An unknown error occurred.\");\n            break;\n        }\n      };\n\n  try {\n    await CodePush.notifyApplicationReady();\n\n    syncStatusChangeCallback(CodePush.SyncStatus.CHECKING_FOR_UPDATE);\n    const remotePackage = await checkForUpdate(syncOptions.deploymentKey, handleBinaryVersionMismatchCallback);\n\n    const doDownloadAndInstall = async () => {\n      syncStatusChangeCallback(CodePush.SyncStatus.DOWNLOADING_PACKAGE);\n      const localPackage = await remotePackage.download(downloadProgressCallback);\n\n      // Determine the correct install mode based on whether the update is mandatory or not.\n      resolvedInstallMode = localPackage.isMandatory ? syncOptions.mandatoryInstallMode : syncOptions.installMode;\n\n      syncStatusChangeCallback(CodePush.SyncStatus.INSTALLING_UPDATE);\n      await localPackage.install(resolvedInstallMode, syncOptions.minimumBackgroundDuration, () => {\n        syncStatusChangeCallback(CodePush.SyncStatus.UPDATE_INSTALLED);\n      });\n\n      return CodePush.SyncStatus.UPDATE_INSTALLED;\n    };\n\n    const updateShouldBeIgnored = remotePackage && (remotePackage.failedInstall && syncOptions.ignoreFailedUpdates);\n    if (!remotePackage || updateShouldBeIgnored) {\n      if (updateShouldBeIgnored) {\n          log(\"An update is available, but it is being ignored due to having been previously rolled back.\");\n      }\n\n      const currentPackage = await CodePush.getCurrentPackage();\n      if (currentPackage && currentPackage.isPending) {\n        syncStatusChangeCallback(CodePush.SyncStatus.UPDATE_INSTALLED);\n        return CodePush.SyncStatus.UPDATE_INSTALLED;\n      } else {\n        syncStatusChangeCallback(CodePush.SyncStatus.UP_TO_DATE);\n        return CodePush.SyncStatus.UP_TO_DATE;\n      }\n    } else if (syncOptions.updateDialog) {\n      // updateDialog supports any truthy value (e.g. true, \"goo\", 12),\n      // but we should treat a non-object value as just the default dialog\n      if (typeof syncOptions.updateDialog !== \"object\") {\n        syncOptions.updateDialog = CodePush.DEFAULT_UPDATE_DIALOG;\n      } else {\n        syncOptions.updateDialog = { ...CodePush.DEFAULT_UPDATE_DIALOG, ...syncOptions.updateDialog };\n      }\n\n      return await new Promise((resolve, reject) => {\n        let message = null;\n        let installButtonText = null;\n\n        const dialogButtons = [];\n\n        if (remotePackage.isMandatory) {\n          message = syncOptions.updateDialog.mandatoryUpdateMessage;\n          installButtonText = syncOptions.updateDialog.mandatoryContinueButtonLabel;\n        } else {\n          message = syncOptions.updateDialog.optionalUpdateMessage;\n          installButtonText = syncOptions.updateDialog.optionalInstallButtonLabel;\n          // Since this is an optional update, add a button\n          // to allow the end-user to ignore it\n          dialogButtons.push({\n            text: syncOptions.updateDialog.optionalIgnoreButtonLabel,\n            onPress: () => {\n              syncStatusChangeCallback(CodePush.SyncStatus.UPDATE_IGNORED);\n              resolve(CodePush.SyncStatus.UPDATE_IGNORED);\n            }\n          });\n        }\n        \n        // Since the install button should be placed to the \n        // right of any other button, add it last\n        dialogButtons.push({\n          text: installButtonText,\n          onPress:() => {\n            doDownloadAndInstall()\n              .then(resolve, reject);\n          }\n        })\n\n        // If the update has a description, and the developer\n        // explicitly chose to display it, then set that as the message\n        if (syncOptions.updateDialog.appendReleaseDescription && remotePackage.description) {\n          message += `${syncOptions.updateDialog.descriptionPrefix} ${remotePackage.description}`;\n        }\n\n        syncStatusChangeCallback(CodePush.SyncStatus.AWAITING_USER_ACTION);\n        Alert.alert(syncOptions.updateDialog.title, message, dialogButtons);\n      });\n    } else {\n      return await doDownloadAndInstall();\n    }\n  } catch (error) {\n    syncStatusChangeCallback(CodePush.SyncStatus.UNKNOWN_ERROR);\n    log(error.message);\n    throw error;\n  }\n};\n\nlet CodePush;\n\nfunction codePushify(options = {}) {\n  let React;\n  let ReactNative = require(\"react-native\");\n\n  try { React = require(\"react\"); } catch (e) { }\n  if (!React) {\n    try { React = ReactNative.React; } catch (e) { }\n    if (!React) {\n      throw new Error(\"Unable to find the 'React' module.\");\n    }\n  }\n\n  if (!React.Component) {\n    throw new Error(\n`Unable to find the \"Component\" class, please either:\n1. Upgrade to a newer version of React Native that supports it, or\n2. Call the codePush.sync API in your component instead of using the @codePush decorator`\n    );\n  }\n\n  var decorator = (RootComponent) => {\n    const extended = class CodePushComponent extends React.Component {\n      componentDidMount() {\n        if (options.checkFrequency === CodePush.CheckFrequency.MANUAL) {\n          CodePush.notifyAppReady();\n        } else {\n          let rootComponentInstance = this.refs.rootComponent;\n\n          let syncStatusCallback;\n          if (rootComponentInstance && rootComponentInstance.codePushStatusDidChange) {\n            syncStatusCallback = rootComponentInstance.codePushStatusDidChange;\n            if (rootComponentInstance instanceof React.Component) {\n              syncStatusCallback = syncStatusCallback.bind(rootComponentInstance);\n            }\n          }\n\n          let downloadProgressCallback;\n          if (rootComponentInstance && rootComponentInstance.codePushDownloadDidProgress) {\n            downloadProgressCallback = rootComponentInstance.codePushDownloadDidProgress;\n            if (rootComponentInstance instanceof React.Component) {\n              downloadProgressCallback = downloadProgressCallback.bind(rootComponentInstance);\n            }\n          }\n\n          let handleBinaryVersionMismatchCallback;\n          if (rootComponentInstance && rootComponentInstance.codePushOnBinaryVersionMismatch) {\n            handleBinaryVersionMismatchCallback = rootComponentInstance.codePushOnBinaryVersionMismatch;\n            if (rootComponentInstance instanceof React.Component) {\n              handleBinaryVersionMismatchCallback = handleBinaryVersionMismatchCallback.bind(rootComponentInstance);\n            }\n          }\n\n          CodePush.sync(options, syncStatusCallback, downloadProgressCallback, handleBinaryVersionMismatchCallback);\n          if (options.checkFrequency === CodePush.CheckFrequency.ON_APP_RESUME) {\n            ReactNative.AppState.addEventListener(\"change\", (newState) => {\n              newState === \"active\" && CodePush.sync(options, syncStatusCallback, downloadProgressCallback);\n            });\n          }\n        }\n      }\n\n      render() {\n        const props = {...this.props};\n\n        // we can set ref property on class components only (not stateless)\n        // check it by render method\n        if (RootComponent.prototype.render) {\n          props.ref = \"rootComponent\";\n        }\n\n        return <RootComponent {...props} />\n      }\n    }\n\n    return hoistStatics(extended, RootComponent);\n  }\n\n  if (typeof options === \"function\") {\n    // Infer that the root component was directly passed to us.\n    return decorator(options);\n  } else {\n    return decorator;\n  }\n}\n\n// If the \"NativeCodePush\" variable isn't defined, then\n// the app didn't properly install the native module,\n// and therefore, it doesn't make sense initializing\n// the JS interface when it wouldn't work anyways.\nif (NativeCodePush) {\n  CodePush = codePushify;\n  Object.assign(CodePush, {\n    AcquisitionSdk: Sdk,\n    checkForUpdate,\n    getConfiguration,\n    getCurrentPackage,\n    getUpdateMetadata,\n    log,\n    notifyAppReady: notifyApplicationReady,\n    notifyApplicationReady,\n    restartApp: RestartManager.restartApp,\n    setUpTestDependencies,\n    sync,\n    disallowRestart: RestartManager.disallow,\n    allowRestart: RestartManager.allow,\n    clearUpdates: NativeCodePush.clearUpdates,\n    InstallMode: {\n      IMMEDIATE: NativeCodePush.codePushInstallModeImmediate, // Restart the app immediately\n      ON_NEXT_RESTART: NativeCodePush.codePushInstallModeOnNextRestart, // Don't artificially restart the app. Allow the update to be \"picked up\" on the next app restart\n      ON_NEXT_RESUME: NativeCodePush.codePushInstallModeOnNextResume, // Restart the app the next time it is resumed from the background\n      ON_NEXT_SUSPEND: NativeCodePush.codePushInstallModeOnNextSuspend // Restart the app _while_ it is in the background,\n      // but only after it has been in the background for \"minimumBackgroundDuration\" seconds (0 by default),\n      // so that user context isn't lost unless the app suspension is long enough to not matter\n    },\n    SyncStatus: {\n      UP_TO_DATE: 0, // The running app is up-to-date\n      UPDATE_INSTALLED: 1, // The app had an optional/mandatory update that was successfully downloaded and is about to be installed.\n      UPDATE_IGNORED: 2, // The app had an optional update and the end-user chose to ignore it\n      UNKNOWN_ERROR: 3,\n      SYNC_IN_PROGRESS: 4, // There is an ongoing \"sync\" operation in progress.\n      CHECKING_FOR_UPDATE: 5,\n      AWAITING_USER_ACTION: 6,\n      DOWNLOADING_PACKAGE: 7,\n      INSTALLING_UPDATE: 8\n    },\n    CheckFrequency: {\n      ON_APP_START: 0,\n      ON_APP_RESUME: 1,\n      MANUAL: 2\n    },\n    UpdateState: {\n      RUNNING: NativeCodePush.codePushUpdateStateRunning,\n      PENDING: NativeCodePush.codePushUpdateStatePending,\n      LATEST: NativeCodePush.codePushUpdateStateLatest\n    },\n    DeploymentStatus: {\n      FAILED: \"DeploymentFailed\",\n      SUCCEEDED: \"DeploymentSucceeded\",\n    },\n    DEFAULT_UPDATE_DIALOG: {\n      appendReleaseDescription: false,\n      descriptionPrefix: \" Description: \",\n      mandatoryContinueButtonLabel: \"Continue\",\n      mandatoryUpdateMessage: \"An update is available that must be installed.\",\n      optionalIgnoreButtonLabel: \"Ignore\",\n      optionalInstallButtonLabel: \"Install\",\n      optionalUpdateMessage: \"An update is available. Would you like to install it?\",\n      title: \"Update available\"\n    }\n  });\n} else {\n  log(\"The CodePush module doesn't appear to be properly installed. Please double-check that everything is setup correctly.\");\n}\n\nmodule.exports = CodePush;\n"]}]}
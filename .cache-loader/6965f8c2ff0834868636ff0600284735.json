{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Slider/Slider.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Slider/Slider.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _jsxFileName=\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Slider/Slider.js\";(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var ReactNative=require('ReactNative');var Platform=require('Platform');var React=require('React');var StyleSheet=require('StyleSheet');var requireNativeComponent=require('requireNativeComponent');var RCTSlider=requireNativeComponent('RCTSlider');var Slider=function Slider(props,forwardedRef){var style=StyleSheet.compose(styles.slider,props.style);var onValueChange=props.onValueChange&&function(event){var userEvent=true;if(Platform.OS==='android'){userEvent=event.nativeEvent.fromUser;}props.onValueChange&&userEvent&&props.onValueChange(event.nativeEvent.value);};var onChange=onValueChange;var onSlidingComplete=props.onSlidingComplete&&function(event){props.onSlidingComplete&&props.onSlidingComplete(event.nativeEvent.value);};return React.createElement(RCTSlider,(0,_extends2.default)({},props,{ref:forwardedRef,style:style,onChange:onChange,onSlidingComplete:onSlidingComplete,onValueChange:onValueChange,enabled:!props.disabled,onStartShouldSetResponder:function onStartShouldSetResponder(){return true;},onResponderTerminationRequest:function onResponderTerminationRequest(){return false;},__source:{fileName:_jsxFileName,lineNumber:229}}));};var SliderWithRef=React.forwardRef(Slider);SliderWithRef.defaultProps={disabled:false,value:0,minimumValue:0,maximumValue:1,step:0};var styles;if(Platform.OS==='ios'){styles=StyleSheet.create({slider:{height:40}});}else{styles=StyleSheet.create({slider:{}});}module.exports=SliderWithRef;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(RCTSlider,\"RCTSlider\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Slider/Slider.js\");reactHotLoader.register(Slider,\"Slider\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Slider/Slider.js\");reactHotLoader.register(SliderWithRef,\"SliderWithRef\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Slider/Slider.js\");reactHotLoader.register(styles,\"styles\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Slider/Slider.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Slider/Slider.js"],"names":["ReactNative","require","Platform","React","StyleSheet","requireNativeComponent","RCTSlider","Slider","props","forwardedRef","style","compose","styles","slider","onValueChange","event","userEvent","OS","nativeEvent","fromUser","value","onChange","onSlidingComplete","disabled","SliderWithRef","forwardRef","defaultProps","minimumValue","maximumValue","step","create","height","module","exports"],"mappings":"AAUA,a,2XAEA,GAAMA,CAAAA,WAAW,CAAGC,OAAO,CAAC,aAAD,CAA3B,CACA,GAAMC,CAAAA,QAAQ,CAAGD,OAAO,CAAC,UAAD,CAAxB,CACA,GAAME,CAAAA,KAAK,CAAGF,OAAO,CAAC,OAAD,CAArB,CACA,GAAMG,CAAAA,UAAU,CAAGH,OAAO,CAAC,YAAD,CAA1B,CAEA,GAAMI,CAAAA,sBAAsB,CAAGJ,OAAO,CAAC,wBAAD,CAAtC,CAOA,GAAMK,CAAAA,SAAS,CAAGD,sBAAsB,CAAC,WAAD,CAAxC,CA2KA,GAAME,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CACbC,KADa,CAEbC,YAFa,CAGV,CACH,GAAMC,CAAAA,KAAK,CAAGN,UAAU,CAACO,OAAX,CACZC,MAAM,CAACC,MADK,CAEZL,KAAK,CAACE,KAFM,CAAd,CAKA,GAAMI,CAAAA,aAAa,CACjBN,KAAK,CAACM,aAAN,EACC,SAACC,KAAD,CAAkB,CACjB,GAAIC,CAAAA,SAAS,CAAG,IAAhB,CACA,GAAId,QAAQ,CAACe,EAAT,GAAgB,SAApB,CAA+B,CAG7BD,SAAS,CAAGD,KAAK,CAACG,WAAN,CAAkBC,QAA9B,CACD,CACDX,KAAK,CAACM,aAAN,EACEE,SADF,EAEER,KAAK,CAACM,aAAN,CAAoBC,KAAK,CAACG,WAAN,CAAkBE,KAAtC,CAFF,CAGD,CAZH,CAcA,GAAMC,CAAAA,QAAQ,CAAGP,aAAjB,CAEA,GAAMQ,CAAAA,iBAAiB,CACrBd,KAAK,CAACc,iBAAN,EACC,SAACP,KAAD,CAAkB,CACjBP,KAAK,CAACc,iBAAN,EACEd,KAAK,CAACc,iBAAN,CAAwBP,KAAK,CAACG,WAAN,CAAkBE,KAA1C,CADF,CAED,CALH,CAOA,MACE,qBAAC,SAAD,0BACMZ,KADN,EAEE,GAAG,CAAEC,YAFP,CAGE,KAAK,CAAEC,KAHT,CAIE,QAAQ,CAAEW,QAJZ,CAKE,iBAAiB,CAAEC,iBALrB,CAME,aAAa,CAAER,aANjB,CAOE,OAAO,CAAE,CAACN,KAAK,CAACe,QAPlB,CAQE,yBAAyB,CAAE,2CAAM,KAAN,EAR7B,CASE,6BAA6B,CAAE,+CAAM,MAAN,EATjC,mDADF,CAaD,CA7CD,CAgDA,GAAMC,CAAAA,aAAa,CAAGrB,KAAK,CAACsB,UAAN,CAAiBlB,MAAjB,CAAtB,CAEAiB,aAAa,CAACE,YAAd,CAA6B,CAC3BH,QAAQ,CAAE,KADiB,CAE3BH,KAAK,CAAE,CAFoB,CAG3BO,YAAY,CAAE,CAHa,CAI3BC,YAAY,CAAE,CAJa,CAK3BC,IAAI,CAAE,CALqB,CAA7B,CAQA,GAAIjB,CAAAA,MAAJ,CACA,GAAIV,QAAQ,CAACe,EAAT,GAAgB,KAApB,CAA2B,CACzBL,MAAM,CAAGR,UAAU,CAAC0B,MAAX,CAAkB,CACzBjB,MAAM,CAAE,CACNkB,MAAM,CAAE,EADF,CADiB,CAAlB,CAAT,CAKD,CAND,IAMO,CACLnB,MAAM,CAAGR,UAAU,CAAC0B,MAAX,CAAkB,CACzBjB,MAAM,CAAE,EADiB,CAAlB,CAAT,CAGD,CAEDmB,MAAM,CAACC,OAAP,CAAkBT,aAAlB,C,gLAlPMlB,S,mIA2KAC,M,gIAgDAiB,a,uIAUFZ,M","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst ReactNative = require('ReactNative');\nconst Platform = require('Platform');\nconst React = require('React');\nconst StyleSheet = require('StyleSheet');\n\nconst requireNativeComponent = require('requireNativeComponent');\n\nimport type {ImageSource} from 'ImageSource';\nimport type {ViewStyleProp} from 'StyleSheet';\nimport type {ColorValue} from 'StyleSheetTypes';\nimport type {ViewProps} from 'ViewPropTypes';\n\nconst RCTSlider = requireNativeComponent('RCTSlider');\n\ntype Event = Object;\n\ntype IOSProps = $ReadOnly<{|\n  /**\n   * Assigns a single image for the track. Only static images are supported.\n   * The center pixel of the image will be stretched to fill the track.\n   */\n  trackImage?: ?ImageSource,\n\n  /**\n   * Assigns a minimum track image. Only static images are supported. The\n   * rightmost pixel of the image will be stretched to fill the track.\n   */\n  minimumTrackImage?: ?ImageSource,\n\n  /**\n   * Assigns a maximum track image. Only static images are supported. The\n   * leftmost pixel of the image will be stretched to fill the track.\n   */\n  maximumTrackImage?: ?ImageSource,\n\n  /**\n   * Sets an image for the thumb. Only static images are supported.\n   */\n  thumbImage?: ?ImageSource,\n|}>;\n\ntype AndroidProps = $ReadOnly<{|\n  /**\n   * Color of the foreground switch grip.\n   * @platform android\n   */\n  thumbTintColor?: ?ColorValue,\n|}>;\n\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n  ...IOSProps,\n  ...AndroidProps,\n\n  /**\n   * Used to style and layout the `Slider`.  See `StyleSheet.js` and\n   * `ViewStylePropTypes.js` for more info.\n   */\n  style?: ?ViewStyleProp,\n\n  /**\n   * Initial value of the slider. The value should be between minimumValue\n   * and maximumValue, which default to 0 and 1 respectively.\n   * Default value is 0.\n   *\n   * *This is not a controlled component*, you don't need to update the\n   * value during dragging.\n   */\n  value?: ?number,\n\n  /**\n   * Step value of the slider. The value should be\n   * between 0 and (maximumValue - minimumValue).\n   * Default value is 0.\n   */\n  step?: ?number,\n\n  /**\n   * Initial minimum value of the slider. Default value is 0.\n   */\n  minimumValue?: ?number,\n\n  /**\n   * Initial maximum value of the slider. Default value is 1.\n   */\n  maximumValue?: ?number,\n\n  /**\n   * The color used for the track to the left of the button.\n   * Overrides the default blue gradient image on iOS.\n   */\n  minimumTrackTintColor?: ?ColorValue,\n\n  /**\n   * The color used for the track to the right of the button.\n   * Overrides the default blue gradient image on iOS.\n   */\n  maximumTrackTintColor?: ?ColorValue,\n\n  /**\n   * If true the user won't be able to move the slider.\n   * Default value is false.\n   */\n  disabled?: ?boolean,\n\n  /**\n   * Callback continuously called while the user is dragging the slider.\n   */\n  onValueChange?: ?Function,\n\n  /**\n   * Callback that is called when the user releases the slider,\n   * regardless if the value has changed. The current value is passed\n   * as an argument to the callback handler.\n   */\n  onSlidingComplete?: ?Function,\n\n  /**\n   * Used to locate this view in UI automation tests.\n   */\n  testID?: ?string,\n|}>;\n\n/**\n * A component used to select a single value from a range of values.\n *\n * ### Usage\n *\n * The example below shows how to use `Slider` to change\n * a value used by `Text`. The value is stored using\n * the state of the root component (`App`). The same component\n * subscribes to the `onValueChange`  of `Slider` and changes\n * the value using `setState`.\n *\n *```\n * import React from 'react';\n * import { StyleSheet, Text, View, Slider } from 'react-native';\n *\n * export default class App extends React.Component {\n *   constructor(props) {\n *     super(props);\n *     this.state = {\n *       value: 50\n *     }\n *   }\n *\n *   change(value) {\n *     this.setState(() => {\n *       return {\n *         value: parseFloat(value)\n *       };\n *     });\n *   }\n *\n *   render() {\n *     const {value} = this.state;\n *     return (\n *       <View style={styles.container}>\n *         <Text style={styles.text}>{String(value)}</Text>\n *         <Slider\n *           step={1}\n *           maximumValue={100}\n *           onValueChange={this.change.bind(this)}\n *           value={value} />\n *       </View>\n *     );\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     flexDirection: 'column',\n *     justifyContent: 'center'\n *   },\n *   text: {\n *     fontSize: 50,\n *     textAlign: 'center'\n *   }\n * });\n *```\n *\n */\nconst Slider = (\n  props: Props,\n  forwardedRef?: ?React.Ref<'RCTActivityIndicatorView'>,\n) => {\n  const style = StyleSheet.compose(\n    styles.slider,\n    props.style,\n  );\n\n  const onValueChange =\n    props.onValueChange &&\n    ((event: Event) => {\n      let userEvent = true;\n      if (Platform.OS === 'android') {\n        // On Android there's a special flag telling us the user is\n        // dragging the slider.\n        userEvent = event.nativeEvent.fromUser;\n      }\n      props.onValueChange &&\n        userEvent &&\n        props.onValueChange(event.nativeEvent.value);\n    });\n\n  const onChange = onValueChange;\n\n  const onSlidingComplete =\n    props.onSlidingComplete &&\n    ((event: Event) => {\n      props.onSlidingComplete &&\n        props.onSlidingComplete(event.nativeEvent.value);\n    });\n\n  return (\n    <RCTSlider\n      {...props}\n      ref={forwardedRef}\n      style={style}\n      onChange={onChange}\n      onSlidingComplete={onSlidingComplete}\n      onValueChange={onValueChange}\n      enabled={!props.disabled}\n      onStartShouldSetResponder={() => true}\n      onResponderTerminationRequest={() => false}\n    />\n  );\n};\n\n// $FlowFixMe - TODO T29156721 `React.forwardRef` is not defined in Flow, yet.\nconst SliderWithRef = React.forwardRef(Slider);\n\nSliderWithRef.defaultProps = {\n  disabled: false,\n  value: 0,\n  minimumValue: 0,\n  maximumValue: 1,\n  step: 0,\n};\n\nlet styles;\nif (Platform.OS === 'ios') {\n  styles = StyleSheet.create({\n    slider: {\n      height: 40,\n    },\n  });\n} else {\n  styles = StyleSheet.create({\n    slider: {},\n  });\n}\n\nmodule.exports = (SliderWithRef: Class<ReactNative.NativeComponent<Props>>);\n"]}]}
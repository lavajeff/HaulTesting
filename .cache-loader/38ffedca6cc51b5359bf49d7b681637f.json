{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/stringifySafe.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/stringifySafe.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();function stringifySafe(arg){var ret;var type=typeof arg;if(arg===undefined){ret='undefined';}else if(arg===null){ret='null';}else if(type==='string'){ret='\"'+arg+'\"';}else if(type==='function'){try{ret=arg.toString();}catch(e){ret='[function unknown]';}}else{try{ret=JSON.stringify(arg);}catch(e){if(typeof arg.toString==='function'){try{ret=arg.toString();}catch(E){}}}}return ret||'[\"'+type+'\" failed to stringify]';}module.exports=stringifySafe;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(stringifySafe,\"stringifySafe\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/stringifySafe.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/stringifySafe.js"],"names":["stringifySafe","arg","ret","type","undefined","toString","e","JSON","stringify","E","module","exports"],"mappings":"AAUA,a,0GAMA,QAASA,CAAAA,aAAT,CAAuBC,GAAvB,CAAyC,CACvC,GAAIC,CAAAA,GAAJ,CACA,GAAMC,CAAAA,IAAI,CAAG,MAAOF,CAAAA,GAApB,CACA,GAAIA,GAAG,GAAKG,SAAZ,CAAuB,CACrBF,GAAG,CAAG,WAAN,CACD,CAFD,IAEO,IAAID,GAAG,GAAK,IAAZ,CAAkB,CACvBC,GAAG,CAAG,MAAN,CACD,CAFM,IAEA,IAAIC,IAAI,GAAK,QAAb,CAAuB,CAC5BD,GAAG,CAAG,IAAMD,GAAN,CAAY,GAAlB,CACD,CAFM,IAEA,IAAIE,IAAI,GAAK,UAAb,CAAyB,CAC9B,GAAI,CACFD,GAAG,CAAGD,GAAG,CAACI,QAAJ,EAAN,CACD,CAAC,MAAOC,CAAP,CAAU,CACVJ,GAAG,CAAG,oBAAN,CACD,CACF,CANM,IAMA,CAGL,GAAI,CACFA,GAAG,CAAGK,IAAI,CAACC,SAAL,CAAeP,GAAf,CAAN,CACD,CAAC,MAAOK,CAAP,CAAU,CACV,GAAI,MAAOL,CAAAA,GAAG,CAACI,QAAX,GAAwB,UAA5B,CAAwC,CACtC,GAAI,CACFH,GAAG,CAAGD,GAAG,CAACI,QAAJ,EAAN,CACD,CAAC,MAAOI,CAAP,CAAU,CAAE,CACf,CACF,CACF,CACD,MAAOP,CAAAA,GAAG,EAAI,KAAOC,IAAP,CAAc,wBAA5B,CACD,CAEDO,MAAM,CAACC,OAAP,CAAiBX,aAAjB,C,gLA/BSA,a","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\n/**\n * Tries to stringify with JSON.stringify and toString, but catches exceptions\n * (e.g. from circular objects) and always returns a string and never throws.\n */\nfunction stringifySafe(arg: any): string {\n  let ret;\n  const type = typeof arg;\n  if (arg === undefined) {\n    ret = 'undefined';\n  } else if (arg === null) {\n    ret = 'null';\n  } else if (type === 'string') {\n    ret = '\"' + arg + '\"';\n  } else if (type === 'function') {\n    try {\n      ret = arg.toString();\n    } catch (e) {\n      ret = '[function unknown]';\n    }\n  } else {\n    // Perform a try catch, just in case the object has a circular\n    // reference or stringify throws for some other reason.\n    try {\n      ret = JSON.stringify(arg);\n    } catch (e) {\n      if (typeof arg.toString === 'function') {\n        try {\n          ret = arg.toString();\n        } catch (E) {}\n      }\n    }\n  }\n  return ret || '[\"' + type + '\" failed to stringify]';\n}\n\nmodule.exports = stringifySafe;\n"]}]}
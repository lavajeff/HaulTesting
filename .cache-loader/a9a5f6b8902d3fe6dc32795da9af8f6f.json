{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _jsxFileName=\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js\";(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var EventEmitter=require('EventEmitter');var Image=require('Image');var RCTNavigatorManager=require('NativeModules').NavigatorManager;var React=require('React');var PropTypes=require('prop-types');var ReactNative=require('ReactNative');var StaticContainer=require('StaticContainer.react');var StyleSheet=require('StyleSheet');var TVEventHandler=require('TVEventHandler');var View=require('View');var ViewPropTypes=require('ViewPropTypes');var createReactClass=require('create-react-class');var invariant=require('fbjs/lib/invariant');var requireNativeComponent=require('requireNativeComponent');var keyMirror=require('fbjs/lib/keyMirror');var TRANSITIONER_REF='transitionerRef';var __uid=0;function getuid(){return __uid++;}var NavigatorTransitionerIOS=function(_React$Component){(0,_inherits2.default)(NavigatorTransitionerIOS,_React$Component);function NavigatorTransitionerIOS(){(0,_classCallCheck2.default)(this,NavigatorTransitionerIOS);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(NavigatorTransitionerIOS).apply(this,arguments));}(0,_createClass2.default)(NavigatorTransitionerIOS,[{key:\"requestSchedulingNavigation\",value:function requestSchedulingNavigation(cb){RCTNavigatorManager.requestSchedulingJavaScriptNavigation(ReactNative.findNodeHandle(this),cb);}},{key:\"render\",value:function render(){return React.createElement(RCTNavigator,(0,_extends2.default)({},this.props,{__source:{fileName:_jsxFileName,lineNumber:50}}));}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return NavigatorTransitionerIOS;}(React.Component);var SystemIconLabels={done:true,cancel:true,edit:true,save:true,add:true,compose:true,reply:true,action:true,organize:true,bookmarks:true,search:true,refresh:true,stop:true,camera:true,trash:true,play:true,pause:true,rewind:true,'fast-forward':true,undo:true,redo:true,'page-curl':true};var SystemIcons=keyMirror(SystemIconLabels);var NavigatorIOS=createReactClass({displayName:'NavigatorIOS',propTypes:{initialRoute:PropTypes.shape({component:PropTypes.func.isRequired,title:PropTypes.string.isRequired,titleImage:Image.propTypes.source,passProps:PropTypes.object,backButtonIcon:Image.propTypes.source,backButtonTitle:PropTypes.string,leftButtonIcon:Image.propTypes.source,leftButtonTitle:PropTypes.string,leftButtonSystemIcon:PropTypes.oneOf(Object.keys(SystemIcons)),onLeftButtonPress:PropTypes.func,rightButtonIcon:Image.propTypes.source,rightButtonTitle:PropTypes.string,rightButtonSystemIcon:PropTypes.oneOf(Object.keys(SystemIcons)),onRightButtonPress:PropTypes.func,wrapperStyle:ViewPropTypes.style,navigationBarHidden:PropTypes.bool,shadowHidden:PropTypes.bool,tintColor:PropTypes.string,barTintColor:PropTypes.string,barStyle:PropTypes.oneOf(['default','black']),titleTextColor:PropTypes.string,translucent:PropTypes.bool}).isRequired,navigationBarHidden:PropTypes.bool,shadowHidden:PropTypes.bool,itemWrapperStyle:ViewPropTypes.style,tintColor:PropTypes.string,barTintColor:PropTypes.string,barStyle:PropTypes.oneOf(['default','black']),titleTextColor:PropTypes.string,translucent:PropTypes.bool,interactivePopGestureEnabled:PropTypes.bool},navigator:undefined,UNSAFE_componentWillMount:function UNSAFE_componentWillMount(){this.navigator={push:this.push,pop:this.pop,popN:this.popN,replace:this.replace,replaceAtIndex:this.replaceAtIndex,replacePrevious:this.replacePrevious,replacePreviousAndPop:this.replacePreviousAndPop,resetTo:this.resetTo,popToRoute:this.popToRoute,popToTop:this.popToTop};},componentDidMount:function componentDidMount(){this._enableTVEventHandler();},componentWillUnmount:function componentWillUnmount(){this._disableTVEventHandler();},getDefaultProps:function getDefaultProps(){return{translucent:true};},getInitialState:function getInitialState(){return{idStack:[getuid()],routeStack:[this.props.initialRoute],requestedTopOfStack:0,observedTopOfStack:0,progress:1,fromIndex:0,toIndex:0,makingNavigatorRequest:false,updatingAllIndicesAtOrBeyond:0};},_toFocusOnNavigationComplete:undefined,_handleFocusRequest:function _handleFocusRequest(item){if(this.state.makingNavigatorRequest){this._toFocusOnNavigationComplete=item;}else{this._getFocusEmitter().emit('focus',item);}},_focusEmitter:undefined,_getFocusEmitter:function _getFocusEmitter(){var focusEmitter=this._focusEmitter;if(!focusEmitter){focusEmitter=new EventEmitter();this._focusEmitter=focusEmitter;}return focusEmitter;},getChildContext:function getChildContext(){return{onFocusRequested:this._handleFocusRequest,focusEmitter:this._getFocusEmitter()};},childContextTypes:{onFocusRequested:PropTypes.func,focusEmitter:PropTypes.instanceOf(EventEmitter)},_tryLockNavigator:function _tryLockNavigator(cb){this.refs[TRANSITIONER_REF].requestSchedulingNavigation(function(acquiredLock){return acquiredLock&&cb();});},_handleNavigatorStackChanged:function _handleNavigatorStackChanged(e){var newObservedTopOfStack=e.nativeEvent.stackLength-1;invariant(newObservedTopOfStack<=this.state.requestedTopOfStack,'No navigator item should be pushed without JS knowing about it %s %s',newObservedTopOfStack,this.state.requestedTopOfStack);var wasWaitingForConfirmation=this.state.requestedTopOfStack!==this.state.observedTopOfStack;if(wasWaitingForConfirmation){invariant(newObservedTopOfStack===this.state.requestedTopOfStack,'If waiting for observedTopOfStack to reach requestedTopOfStack, '+'the only valid observedTopOfStack should be requestedTopOfStack.');}var nextState={observedTopOfStack:newObservedTopOfStack,makingNavigatorRequest:false,updatingAllIndicesAtOrBeyond:null,progress:1,toIndex:newObservedTopOfStack,fromIndex:newObservedTopOfStack};this.setState(nextState,this._eliminateUnneededChildren);},_eliminateUnneededChildren:function _eliminateUnneededChildren(){var updatingAllIndicesAtOrBeyond=this.state.routeStack.length>this.state.observedTopOfStack+1?this.state.observedTopOfStack+1:null;this.setState({idStack:this.state.idStack.slice(0,this.state.observedTopOfStack+1),routeStack:this.state.routeStack.slice(0,this.state.observedTopOfStack+1),requestedTopOfStack:this.state.observedTopOfStack,makingNavigatorRequest:true,updatingAllIndicesAtOrBeyond:updatingAllIndicesAtOrBeyond});},push:function push(route){var _this=this;invariant(!!route,'Must supply route to push');if(this.state.requestedTopOfStack===this.state.observedTopOfStack){this._tryLockNavigator(function(){var nextStack=_this.state.routeStack.concat([route]);var nextIDStack=_this.state.idStack.concat([getuid()]);_this.setState({idStack:nextIDStack,routeStack:nextStack,requestedTopOfStack:nextStack.length-1,makingNavigatorRequest:true,updatingAllIndicesAtOrBeyond:nextStack.length-1});});}},popN:function popN(n){var _this2=this;if(n===0){return;}if(this.state.requestedTopOfStack===this.state.observedTopOfStack){if(this.state.requestedTopOfStack>0){this._tryLockNavigator(function(){var newRequestedTopOfStack=_this2.state.requestedTopOfStack-n;invariant(newRequestedTopOfStack>=0,'Cannot pop below 0');_this2.setState({requestedTopOfStack:newRequestedTopOfStack,makingNavigatorRequest:true,updatingAllIndicesAtOrBeyond:_this2.state.requestedTopOfStack-n});});}}},pop:function pop(){this.popN(1);},replaceAtIndex:function replaceAtIndex(route,index){invariant(!!route,'Must supply route to replace');if(index<0){index+=this.state.routeStack.length;}if(this.state.routeStack.length<=index){return;}var nextIDStack=this.state.idStack.slice();var nextRouteStack=this.state.routeStack.slice();nextIDStack[index]=getuid();nextRouteStack[index]=route;this.setState({idStack:nextIDStack,routeStack:nextRouteStack,makingNavigatorRequest:false,updatingAllIndicesAtOrBeyond:index});},replace:function replace(route){this.replaceAtIndex(route,-1);},replacePrevious:function replacePrevious(route){this.replaceAtIndex(route,-2);},popToTop:function popToTop(){this.popToRoute(this.state.routeStack[0]);},popToRoute:function popToRoute(route){var indexOfRoute=this.state.routeStack.indexOf(route);invariant(indexOfRoute!==-1,\"Calling pop to route for a route that doesn't exist!\");var numToPop=this.state.routeStack.length-indexOfRoute-1;this.popN(numToPop);},replacePreviousAndPop:function replacePreviousAndPop(route){var _this3=this;if(this.state.requestedTopOfStack!==this.state.observedTopOfStack){return;}if(this.state.routeStack.length<2){return;}this._tryLockNavigator(function(){_this3.replacePrevious(route);_this3.setState({requestedTopOfStack:_this3.state.requestedTopOfStack-1,makingNavigatorRequest:true});});},resetTo:function resetTo(route){invariant(!!route,'Must supply route to push');if(this.state.requestedTopOfStack!==this.state.observedTopOfStack){return;}this.replaceAtIndex(route,0);this.popToRoute(route);},_handleNavigationComplete:function _handleNavigationComplete(e){e.stopPropagation();if(this._toFocusOnNavigationComplete){this._getFocusEmitter().emit('focus',this._toFocusOnNavigationComplete);this._toFocusOnNavigationComplete=null;}this._handleNavigatorStackChanged(e);},_routeToStackItem:function _routeToStackItem(routeArg,i){var component=routeArg.component,wrapperStyle=routeArg.wrapperStyle,passProps=routeArg.passProps,route=(0,_objectWithoutProperties2.default)(routeArg,[\"component\",\"wrapperStyle\",\"passProps\"]);var _this$props=this.props,itemWrapperStyle=_this$props.itemWrapperStyle,props=(0,_objectWithoutProperties2.default)(_this$props,[\"itemWrapperStyle\"]);var shouldUpdateChild=this.state.updatingAllIndicesAtOrBeyond!=null&&this.state.updatingAllIndicesAtOrBeyond>=i;var Component=component;return React.createElement(StaticContainer,{key:'nav'+i,shouldUpdate:shouldUpdateChild,__source:{fileName:_jsxFileName,lineNumber:850}},React.createElement(RCTNavigatorItem,(0,_extends2.default)({},props,route,{style:[styles.stackItem,itemWrapperStyle,wrapperStyle],__source:{fileName:_jsxFileName,lineNumber:851}}),React.createElement(Component,(0,_extends2.default)({navigator:this.navigator,route:route},passProps,{__source:{fileName:_jsxFileName,lineNumber:855}}))));},_renderNavigationStackItems:function _renderNavigationStackItems(){var shouldRecurseToNavigator=this.state.makingNavigatorRequest||this.state.updatingAllIndicesAtOrBeyond!==null;var items=shouldRecurseToNavigator?this.state.routeStack.map(this._routeToStackItem):null;return React.createElement(StaticContainer,{shouldUpdate:shouldRecurseToNavigator,__source:{fileName:_jsxFileName,lineNumber:871}},React.createElement(NavigatorTransitionerIOS,{ref:TRANSITIONER_REF,style:styles.transitioner,vertical:this.props.vertical,requestedTopOfStack:this.state.requestedTopOfStack,onNavigationComplete:this._handleNavigationComplete,interactivePopGestureEnabled:this.props.interactivePopGestureEnabled,__source:{fileName:_jsxFileName,lineNumber:872}},items));},_tvEventHandler:undefined,_enableTVEventHandler:function _enableTVEventHandler(){this._tvEventHandler=new TVEventHandler();this._tvEventHandler.enable(this,function(cmp,evt){if(evt&&evt.eventType==='menu'){cmp.pop();}});},_disableTVEventHandler:function _disableTVEventHandler(){if(this._tvEventHandler){this._tvEventHandler.disable();delete this._tvEventHandler;}},render:function render(){return React.createElement(View,{style:this.props.style,__source:{fileName:_jsxFileName,lineNumber:909}},this._renderNavigationStackItems());}});var styles=StyleSheet.create({stackItem:{backgroundColor:'white',overflow:'hidden',position:'absolute',top:0,left:0,right:0,bottom:0},transitioner:{flex:1}});var RCTNavigator=requireNativeComponent('RCTNavigator');var RCTNavigatorItem=requireNativeComponent('RCTNavItem');module.exports=NavigatorIOS;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(RCTNavigatorManager,\"RCTNavigatorManager\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js\");reactHotLoader.register(TRANSITIONER_REF,\"TRANSITIONER_REF\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js\");reactHotLoader.register(__uid,\"__uid\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js\");reactHotLoader.register(getuid,\"getuid\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js\");reactHotLoader.register(NavigatorTransitionerIOS,\"NavigatorTransitionerIOS\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js\");reactHotLoader.register(SystemIconLabels,\"SystemIconLabels\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js\");reactHotLoader.register(SystemIcons,\"SystemIcons\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js\");reactHotLoader.register(NavigatorIOS,\"NavigatorIOS\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js\");reactHotLoader.register(styles,\"styles\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js\");reactHotLoader.register(RCTNavigator,\"RCTNavigator\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js\");reactHotLoader.register(RCTNavigatorItem,\"RCTNavigatorItem\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js"],"names":["EventEmitter","require","Image","RCTNavigatorManager","NavigatorManager","React","PropTypes","ReactNative","StaticContainer","StyleSheet","TVEventHandler","View","ViewPropTypes","createReactClass","invariant","requireNativeComponent","keyMirror","TRANSITIONER_REF","__uid","getuid","NavigatorTransitionerIOS","cb","requestSchedulingJavaScriptNavigation","findNodeHandle","props","Component","SystemIconLabels","done","cancel","edit","save","add","compose","reply","action","organize","bookmarks","search","refresh","stop","camera","trash","play","pause","rewind","undo","redo","SystemIcons","NavigatorIOS","displayName","propTypes","initialRoute","shape","component","func","isRequired","title","string","titleImage","source","passProps","object","backButtonIcon","backButtonTitle","leftButtonIcon","leftButtonTitle","leftButtonSystemIcon","oneOf","Object","keys","onLeftButtonPress","rightButtonIcon","rightButtonTitle","rightButtonSystemIcon","onRightButtonPress","wrapperStyle","style","navigationBarHidden","bool","shadowHidden","tintColor","barTintColor","barStyle","titleTextColor","translucent","itemWrapperStyle","interactivePopGestureEnabled","navigator","undefined","UNSAFE_componentWillMount","push","pop","popN","replace","replaceAtIndex","replacePrevious","replacePreviousAndPop","resetTo","popToRoute","popToTop","componentDidMount","_enableTVEventHandler","componentWillUnmount","_disableTVEventHandler","getDefaultProps","getInitialState","idStack","routeStack","requestedTopOfStack","observedTopOfStack","progress","fromIndex","toIndex","makingNavigatorRequest","updatingAllIndicesAtOrBeyond","_toFocusOnNavigationComplete","_handleFocusRequest","item","state","_getFocusEmitter","emit","_focusEmitter","focusEmitter","getChildContext","onFocusRequested","childContextTypes","instanceOf","_tryLockNavigator","refs","requestSchedulingNavigation","acquiredLock","_handleNavigatorStackChanged","e","newObservedTopOfStack","nativeEvent","stackLength","wasWaitingForConfirmation","nextState","setState","_eliminateUnneededChildren","length","slice","route","nextStack","concat","nextIDStack","n","newRequestedTopOfStack","index","nextRouteStack","indexOfRoute","indexOf","numToPop","_handleNavigationComplete","stopPropagation","_routeToStackItem","routeArg","i","shouldUpdateChild","styles","stackItem","_renderNavigationStackItems","shouldRecurseToNavigator","items","map","transitioner","vertical","_tvEventHandler","enable","cmp","evt","eventType","disable","render","create","backgroundColor","overflow","position","top","left","right","bottom","flex","RCTNavigator","RCTNavigatorItem","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst EventEmitter = require('EventEmitter');\nconst Image = require('Image');\nconst RCTNavigatorManager = require('NativeModules').NavigatorManager;\nconst React = require('React');\nconst PropTypes = require('prop-types');\nconst ReactNative = require('ReactNative');\nconst StaticContainer = require('StaticContainer.react');\nconst StyleSheet = require('StyleSheet');\nconst TVEventHandler = require('TVEventHandler');\nconst View = require('View');\nconst ViewPropTypes = require('ViewPropTypes');\n\nconst createReactClass = require('create-react-class');\nconst invariant = require('fbjs/lib/invariant');\nconst requireNativeComponent = require('requireNativeComponent');\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst keyMirror = require('fbjs/lib/keyMirror');\n\nconst TRANSITIONER_REF = 'transitionerRef';\n\nlet __uid = 0;\nfunction getuid() {\n  return __uid++;\n}\n\nclass NavigatorTransitionerIOS extends React.Component<$FlowFixMeProps> {\n  requestSchedulingNavigation(cb) {\n    RCTNavigatorManager.requestSchedulingJavaScriptNavigation(\n      ReactNative.findNodeHandle(this),\n      cb,\n    );\n  }\n\n  render() {\n    return <RCTNavigator {...this.props} />;\n  }\n}\n\nconst SystemIconLabels = {\n  done: true,\n  cancel: true,\n  edit: true,\n  save: true,\n  add: true,\n  compose: true,\n  reply: true,\n  action: true,\n  organize: true,\n  bookmarks: true,\n  search: true,\n  refresh: true,\n  stop: true,\n  camera: true,\n  trash: true,\n  play: true,\n  pause: true,\n  rewind: true,\n  'fast-forward': true,\n  undo: true,\n  redo: true,\n  'page-curl': true,\n};\nconst SystemIcons = keyMirror(SystemIconLabels);\n\ntype SystemButtonType = $Enum<typeof SystemIconLabels>;\n\ntype Route = {\n  component: Function,\n  title: string,\n  titleImage?: Object,\n  passProps?: Object,\n  backButtonTitle?: string,\n  backButtonIcon?: Object,\n  leftButtonTitle?: string,\n  leftButtonIcon?: Object,\n  leftButtonSystemIcon?: SystemButtonType,\n  onLeftButtonPress?: Function,\n  rightButtonTitle?: string,\n  rightButtonIcon?: Object,\n  rightButtonSystemIcon?: SystemButtonType,\n  onRightButtonPress?: Function,\n  wrapperStyle?: any,\n};\n\ntype State = {\n  idStack: Array<number>,\n  routeStack: Array<Route>,\n  requestedTopOfStack: number,\n  observedTopOfStack: number,\n  progress: number,\n  fromIndex: number,\n  toIndex: number,\n  makingNavigatorRequest: boolean,\n  updatingAllIndicesAtOrBeyond: ?number,\n};\n\ntype Event = Object;\n\n/**\n * Think of `<NavigatorIOS>` as simply a component that renders an\n * `RCTNavigator`, and moves the `RCTNavigator`'s `requestedTopOfStack` pointer\n * forward and backward. The `RCTNavigator` interprets changes in\n * `requestedTopOfStack` to be pushes and pops of children that are rendered.\n * `<NavigatorIOS>` always ensures that whenever the `requestedTopOfStack`\n * pointer is moved, that we've also rendered enough children so that the\n * `RCTNavigator` can carry out the push/pop with those children.\n * `<NavigatorIOS>` also removes children that will no longer be needed\n * (after the pop of a child has been fully completed/animated out).\n */\n\n/**\n * `NavigatorIOS` is a wrapper around\n * [`UINavigationController`](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UINavigationController_Class/),\n * enabling you to implement a navigation stack. It works exactly the same as it\n * would on a native app using `UINavigationController`, providing the same\n * animations and behavior from UIKit.\n *\n * As the name implies, it is only available on iOS. Take a look at\n * [`React Navigation`](https://reactnavigation.org/) for a cross-platform\n * solution in JavaScript, or check out either of these components for native\n * solutions: [native-navigation](http://airbnb.io/native-navigation/),\n * [react-native-navigation](https://github.com/wix/react-native-navigation).\n *\n * To set up the navigator, provide the `initialRoute` prop with a route\n * object. A route object is used to describe each scene that your app\n * navigates to. `initialRoute` represents the first route in your navigator.\n *\n * ```\n * import PropTypes from 'prop-types';\n * import React, { Component } from 'react';\n * import { NavigatorIOS, Text } from 'react-native';\n *\n * export default class NavigatorIOSApp extends Component {\n *   render() {\n *     return (\n *       <NavigatorIOS\n *         initialRoute={{\n *           component: MyScene,\n *           title: 'My Initial Scene',\n *         }}\n *         style={{flex: 1}}\n *       />\n *     );\n *   }\n * }\n *\n * class MyScene extends Component {\n *   static propTypes = {\n *     title: PropTypes.string.isRequired,\n *     navigator: PropTypes.object.isRequired,\n *   }\n *\n *   _onForward = () => {\n *     this.props.navigator.push({\n *       title: 'Scene ' + nextIndex,\n *     });\n *   }\n *\n *   render() {\n *     return (\n *       <View>\n *         <Text>Current Scene: { this.props.title }</Text>\n *         <TouchableHighlight onPress={this._onForward}>\n *           <Text>Tap me to load the next scene</Text>\n *         </TouchableHighlight>\n *       </View>\n *     )\n *   }\n * }\n * ```\n *\n * In this code, the navigator renders the component specified in initialRoute,\n * which in this case is `MyScene`. This component will receive a `route` prop\n * and a `navigator` prop representing the navigator. The navigator's navigation\n * bar will render the title for the current scene, \"My Initial Scene\".\n *\n * You can optionally pass in a `passProps` property to your `initialRoute`.\n * `NavigatorIOS` passes this in as props to the rendered component:\n *\n * ```\n * initialRoute={{\n *   component: MyScene,\n *   title: 'My Initial Scene',\n *   passProps: { myProp: 'foo' }\n * }}\n * ```\n *\n * You can then access the props passed in via `{this.props.myProp}`.\n *\n * #### Handling Navigation\n *\n * To trigger navigation functionality such as pushing or popping a view, you\n * have access to a `navigator` object. The object is passed in as a prop to any\n * component that is rendered by `NavigatorIOS`. You can then call the\n * relevant methods to perform the navigation action you need:\n *\n * ```\n * class MyView extends Component {\n *   _handleBackPress() {\n *     this.props.navigator.pop();\n *   }\n *\n *   _handleNextPress(nextRoute) {\n *     this.props.navigator.push(nextRoute);\n *   }\n *\n *   render() {\n *     const nextRoute = {\n *       component: MyView,\n *       title: 'Bar That',\n *       passProps: { myProp: 'bar' }\n *     };\n *     return(\n *       <TouchableHighlight onPress={() => this._handleNextPress(nextRoute)}>\n *         <Text style={{marginTop: 200, alignSelf: 'center'}}>\n *           See you on the other nav {this.props.myProp}!\n *         </Text>\n *       </TouchableHighlight>\n *     );\n *   }\n * }\n * ```\n *\n * You can also trigger navigator functionality from the `NavigatorIOS`\n * component:\n *\n * ```\n * class NavvyIOS extends Component {\n *   _handleNavigationRequest() {\n *     this.refs.nav.push({\n *       component: MyView,\n *       title: 'Genius',\n *       passProps: { myProp: 'genius' },\n *     });\n *   }\n *\n *   render() {\n *     return (\n *       <NavigatorIOS\n *         ref='nav'\n *         initialRoute={{\n *           component: MyView,\n *           title: 'Foo This',\n *           passProps: { myProp: 'foo' },\n *           rightButtonTitle: 'Add',\n *           onRightButtonPress: () => this._handleNavigationRequest(),\n *         }}\n *         style={{flex: 1}}\n *       />\n *     );\n *   }\n * }\n * ```\n *\n * The code above adds a `_handleNavigationRequest` private method that is\n * invoked from the `NavigatorIOS` component when the right navigation bar item\n * is pressed. To get access to the navigator functionality, a reference to it\n * is saved in the `ref` prop and later referenced to push a new scene into the\n * navigation stack.\n *\n * #### Navigation Bar Configuration\n *\n * Props passed to `NavigatorIOS` will set the default configuration\n * for the navigation bar. Props passed as properties to a route object will set\n * the configuration for that route's navigation bar, overriding any props\n * passed to the `NavigatorIOS` component.\n *\n * ```\n * _handleNavigationRequest() {\n *   this.refs.nav.push({\n *     //...\n *     passProps: { myProp: 'genius' },\n *     barTintColor: '#996699',\n *   });\n * }\n *\n * render() {\n *   return (\n *     <NavigatorIOS\n *       //...\n *       style={{flex: 1}}\n *       barTintColor='#ffffcc'\n *     />\n *   );\n * }\n * ```\n *\n * In the example above the navigation bar color is changed when the new route\n * is pushed.\n *\n */\nconst NavigatorIOS = createReactClass({\n  displayName: 'NavigatorIOS',\n\n  propTypes: {\n    /**\n     * NavigatorIOS uses `route` objects to identify child views, their props,\n     * and navigation bar configuration. Navigation operations such as push\n     * operations expect routes to look like this the `initialRoute`.\n     */\n    initialRoute: PropTypes.shape({\n      /**\n       * The React Class to render for this route\n       */\n      component: PropTypes.func.isRequired,\n\n      /**\n       * The title displayed in the navigation bar and the back button for this\n       * route.\n       */\n      title: PropTypes.string.isRequired,\n\n      /**\n       * If set, a title image will appear instead of the text title.\n       */\n      titleImage: Image.propTypes.source,\n\n      /**\n       * Use this to specify additional props to pass to the rendered\n       * component. `NavigatorIOS` will automatically pass in `route` and\n       * `navigator` props to the component.\n       */\n      passProps: PropTypes.object,\n\n      /**\n       * If set, the left navigation button image will be displayed using this\n       * source. Note that this doesn't apply to the header of the current\n       * view, but to those views that are subsequently pushed.\n       */\n      backButtonIcon: Image.propTypes.source,\n\n      /**\n       * If set, the left navigation button text will be set to this. Note that\n       * this doesn't apply to the left button of the current view, but to\n       * those views that are subsequently pushed\n       */\n      backButtonTitle: PropTypes.string,\n\n      /**\n       * If set, the left navigation button image will be displayed using\n       * this source.\n       */\n      leftButtonIcon: Image.propTypes.source,\n\n      /**\n       * If set, the left navigation button will display this text.\n       */\n      leftButtonTitle: PropTypes.string,\n\n      /**\n       * If set, the left header button will appear with this system icon\n       *\n       * Supported icons are `done`, `cancel`, `edit`, `save`, `add`,\n       * `compose`, `reply`, `action`, `organize`, `bookmarks`, `search`,\n       * `refresh`, `stop`, `camera`, `trash`, `play`, `pause`, `rewind`,\n       * `fast-forward`, `undo`, `redo`, and `page-curl`\n       */\n      leftButtonSystemIcon: PropTypes.oneOf(Object.keys(SystemIcons)),\n\n      /**\n       * This function will be invoked when the left navigation bar item is\n       * pressed.\n       */\n      onLeftButtonPress: PropTypes.func,\n\n      /**\n       * If set, the right navigation button image will be displayed using\n       * this source.\n       */\n      rightButtonIcon: Image.propTypes.source,\n\n      /**\n       * If set, the right navigation button will display this text.\n       */\n      rightButtonTitle: PropTypes.string,\n\n      /**\n       * If set, the right header button will appear with this system icon\n       *\n       * See leftButtonSystemIcon for supported icons\n       */\n      rightButtonSystemIcon: PropTypes.oneOf(Object.keys(SystemIcons)),\n\n      /**\n       * This function will be invoked when the right navigation bar item is\n       * pressed.\n       */\n      onRightButtonPress: PropTypes.func,\n\n      /**\n       * Styles for the navigation item containing the component.\n       */\n      wrapperStyle: ViewPropTypes.style,\n\n      /**\n       * Boolean value that indicates whether the navigation bar is hidden.\n       */\n      navigationBarHidden: PropTypes.bool,\n\n      /**\n       * Boolean value that indicates whether to hide the 1px hairline\n       * shadow.\n       */\n      shadowHidden: PropTypes.bool,\n\n      /**\n       * The color used for the buttons in the navigation bar.\n       */\n      tintColor: PropTypes.string,\n\n      /**\n       * The background color of the navigation bar.\n       */\n      barTintColor: PropTypes.string,\n\n      /**\n       * The style of the navigation bar. Supported values are 'default', 'black'.\n       * Use 'black' instead of setting `barTintColor` to black. This produces\n       * a navigation bar with the native iOS style with higher translucency.\n       */\n      barStyle: PropTypes.oneOf(['default', 'black']),\n\n      /**\n       * The text color of the navigation bar title.\n       */\n      titleTextColor: PropTypes.string,\n\n      /**\n       * Boolean value that indicates whether the navigation bar is\n       * translucent.\n       */\n      translucent: PropTypes.bool,\n    }).isRequired,\n\n    /**\n     * Boolean value that indicates whether the navigation bar is hidden\n     * by default.\n     */\n    navigationBarHidden: PropTypes.bool,\n\n    /**\n     * Boolean value that indicates whether to hide the 1px hairline shadow\n     * by default.\n     */\n    shadowHidden: PropTypes.bool,\n\n    /**\n     * The default wrapper style for components in the navigator.\n     * A common use case is to set the `backgroundColor` for every scene.\n     */\n    itemWrapperStyle: ViewPropTypes.style,\n\n    /**\n     * The default color used for the buttons in the navigation bar.\n     */\n    tintColor: PropTypes.string,\n\n    /**\n     * The default background color of the navigation bar.\n     */\n    barTintColor: PropTypes.string,\n\n    /**\n     * The style of the navigation bar. Supported values are 'default', 'black'.\n     * Use 'black' instead of setting `barTintColor` to black. This produces\n     * a navigation bar with the native iOS style with higher translucency.\n     */\n    barStyle: PropTypes.oneOf(['default', 'black']),\n\n    /**\n     * The default text color of the navigation bar title.\n     */\n    titleTextColor: PropTypes.string,\n\n    /**\n     * Boolean value that indicates whether the navigation bar is\n     * translucent by default\n     */\n    translucent: PropTypes.bool,\n\n    /**\n     * Boolean value that indicates whether the interactive pop gesture is\n     * enabled. This is useful for enabling/disabling the back swipe navigation\n     * gesture.\n     *\n     * If this prop is not provided, the default behavior is for the back swipe\n     * gesture to be enabled when the navigation bar is shown and disabled when\n     * the navigation bar is hidden. Once you've provided the\n     * `interactivePopGestureEnabled` prop, you can never restore the default\n     * behavior.\n     */\n    interactivePopGestureEnabled: PropTypes.bool,\n  },\n\n  navigator: (undefined: ?Object),\n\n  UNSAFE_componentWillMount: function() {\n    // Precompute a pack of callbacks that's frequently generated and passed to\n    // instances.\n    this.navigator = {\n      push: this.push,\n      pop: this.pop,\n      popN: this.popN,\n      replace: this.replace,\n      replaceAtIndex: this.replaceAtIndex,\n      replacePrevious: this.replacePrevious,\n      replacePreviousAndPop: this.replacePreviousAndPop,\n      resetTo: this.resetTo,\n      popToRoute: this.popToRoute,\n      popToTop: this.popToTop,\n    };\n  },\n\n  componentDidMount: function() {\n    this._enableTVEventHandler();\n  },\n\n  componentWillUnmount: function() {\n    this._disableTVEventHandler();\n  },\n\n  getDefaultProps: function(): Object {\n    return {\n      translucent: true,\n    };\n  },\n\n  getInitialState: function(): State {\n    return {\n      idStack: [getuid()],\n      routeStack: [this.props.initialRoute],\n      // The navigation index that we wish to push/pop to.\n      requestedTopOfStack: 0,\n      // The last index that native has sent confirmation of completed push/pop\n      // for. At this point, we can discard any views that are beyond the\n      // `requestedTopOfStack`. A value of `null` means we have not received\n      // any confirmation, ever. We may receive an `observedTopOfStack` without\n      // ever requesting it - native can instigate pops of its own with the\n      // backswipe gesture.\n      observedTopOfStack: 0,\n      progress: 1,\n      fromIndex: 0,\n      toIndex: 0,\n      // Whether or not we are making a navigator request to push/pop. (Used\n      // for performance optimization).\n      makingNavigatorRequest: false,\n      // Whether or not we are updating children of navigator and if so (not\n      // `null`) which index marks the beginning of all updates. Used for\n      // performance optimization.\n      updatingAllIndicesAtOrBeyond: 0,\n    };\n  },\n\n  _toFocusOnNavigationComplete: (undefined: any),\n\n  _handleFocusRequest: function(item: any) {\n    if (this.state.makingNavigatorRequest) {\n      this._toFocusOnNavigationComplete = item;\n    } else {\n      this._getFocusEmitter().emit('focus', item);\n    }\n  },\n\n  _focusEmitter: (undefined: ?EventEmitter),\n\n  _getFocusEmitter: function(): EventEmitter {\n    // Flow not yet tracking assignments to instance fields.\n    let focusEmitter = this._focusEmitter;\n    if (!focusEmitter) {\n      focusEmitter = new EventEmitter();\n      this._focusEmitter = focusEmitter;\n    }\n    return focusEmitter;\n  },\n\n  getChildContext: function(): {\n    onFocusRequested: Function,\n    focusEmitter: EventEmitter,\n  } {\n    return {\n      onFocusRequested: this._handleFocusRequest,\n      focusEmitter: this._getFocusEmitter(),\n    };\n  },\n\n  childContextTypes: {\n    onFocusRequested: PropTypes.func,\n    focusEmitter: PropTypes.instanceOf(EventEmitter),\n  },\n\n  _tryLockNavigator: function(cb: () => void) {\n    this.refs[TRANSITIONER_REF].requestSchedulingNavigation(\n      acquiredLock => acquiredLock && cb(),\n    );\n  },\n\n  _handleNavigatorStackChanged: function(e: Event) {\n    const newObservedTopOfStack = e.nativeEvent.stackLength - 1;\n\n    invariant(\n      newObservedTopOfStack <= this.state.requestedTopOfStack,\n      'No navigator item should be pushed without JS knowing about it %s %s',\n      newObservedTopOfStack,\n      this.state.requestedTopOfStack,\n    );\n    const wasWaitingForConfirmation =\n      this.state.requestedTopOfStack !== this.state.observedTopOfStack;\n    if (wasWaitingForConfirmation) {\n      invariant(\n        newObservedTopOfStack === this.state.requestedTopOfStack,\n        'If waiting for observedTopOfStack to reach requestedTopOfStack, ' +\n          'the only valid observedTopOfStack should be requestedTopOfStack.',\n      );\n    }\n    // Mark the most recent observation regardless of if we can lock the\n    // navigator. `observedTopOfStack` merely represents what we've observed\n    // and this first `setState` is only executed to update debugging\n    // overlays/navigation bar.\n    // Also reset progress, toIndex, and fromIndex as they might not end\n    // in the correct states for a two possible reasons:\n    // Progress isn't always 0 or 1 at the end, the system rounds\n    // If the Navigator is offscreen these values won't be updated\n    // TOOD: Revisit this decision when no longer relying on native navigator.\n    const nextState = {\n      observedTopOfStack: newObservedTopOfStack,\n      makingNavigatorRequest: false,\n      updatingAllIndicesAtOrBeyond: null,\n      progress: 1,\n      toIndex: newObservedTopOfStack,\n      fromIndex: newObservedTopOfStack,\n    };\n    this.setState(nextState, this._eliminateUnneededChildren);\n  },\n\n  _eliminateUnneededChildren: function() {\n    // Updating the indices that we're deleting and that's all. (Truth: Nothing\n    // even uses the indices in this case, but let's make this describe the\n    // truth anyways).\n    const updatingAllIndicesAtOrBeyond =\n      this.state.routeStack.length > this.state.observedTopOfStack + 1\n        ? this.state.observedTopOfStack + 1\n        : null;\n    this.setState({\n      idStack: this.state.idStack.slice(0, this.state.observedTopOfStack + 1),\n      routeStack: this.state.routeStack.slice(\n        0,\n        this.state.observedTopOfStack + 1,\n      ),\n      // Now we rerequest the top of stack that we observed.\n      requestedTopOfStack: this.state.observedTopOfStack,\n      makingNavigatorRequest: true,\n      updatingAllIndicesAtOrBeyond: updatingAllIndicesAtOrBeyond,\n    });\n  },\n\n  /**\n   * Navigate forward to a new route.\n   * @param route The new route to navigate to.\n   */\n  push: function(route: Route) {\n    invariant(!!route, 'Must supply route to push');\n    // Make sure all previous requests are caught up first. Otherwise reject.\n    if (this.state.requestedTopOfStack === this.state.observedTopOfStack) {\n      this._tryLockNavigator(() => {\n        const nextStack = this.state.routeStack.concat([route]);\n        const nextIDStack = this.state.idStack.concat([getuid()]);\n        this.setState({\n          // We have to make sure that we've also supplied enough views to\n          // satisfy our request to adjust the `requestedTopOfStack`.\n          idStack: nextIDStack,\n          routeStack: nextStack,\n          requestedTopOfStack: nextStack.length - 1,\n          makingNavigatorRequest: true,\n          updatingAllIndicesAtOrBeyond: nextStack.length - 1,\n        });\n      });\n    }\n  },\n\n  /**\n   * Go back N scenes at once. When N=1, behavior matches `pop()`.\n   * @param n The number of scenes to pop.\n   */\n  popN: function(n: number) {\n    if (n === 0) {\n      return;\n    }\n    // Make sure all previous requests are caught up first. Otherwise reject.\n    if (this.state.requestedTopOfStack === this.state.observedTopOfStack) {\n      if (this.state.requestedTopOfStack > 0) {\n        this._tryLockNavigator(() => {\n          const newRequestedTopOfStack = this.state.requestedTopOfStack - n;\n          invariant(newRequestedTopOfStack >= 0, 'Cannot pop below 0');\n          this.setState({\n            requestedTopOfStack: newRequestedTopOfStack,\n            makingNavigatorRequest: true,\n            updatingAllIndicesAtOrBeyond: this.state.requestedTopOfStack - n,\n          });\n        });\n      }\n    }\n  },\n\n  /**\n   * Pop back to the previous scene.\n   */\n  pop: function() {\n    this.popN(1);\n  },\n\n  /**\n   * Replace a route in the navigation stack.\n   *\n   * @param route The new route that will replace the specified one.\n   * @param index The route into the stack that should be replaced.\n   *    If it is negative, it counts from the back of the stack.\n   */\n  replaceAtIndex: function(route: Route, index: number) {\n    invariant(!!route, 'Must supply route to replace');\n    if (index < 0) {\n      index += this.state.routeStack.length;\n    }\n\n    if (this.state.routeStack.length <= index) {\n      return;\n    }\n\n    // I don't believe we need to lock for a replace since there's no\n    // navigation actually happening\n    const nextIDStack = this.state.idStack.slice();\n    const nextRouteStack = this.state.routeStack.slice();\n    nextIDStack[index] = getuid();\n    nextRouteStack[index] = route;\n\n    this.setState({\n      idStack: nextIDStack,\n      routeStack: nextRouteStack,\n      makingNavigatorRequest: false,\n      updatingAllIndicesAtOrBeyond: index,\n    });\n  },\n\n  /**\n   * Replace the route for the current scene and immediately\n   * load the view for the new route.\n   * @param route The new route to navigate to.\n   */\n  replace: function(route: Route) {\n    this.replaceAtIndex(route, -1);\n  },\n\n  /**\n   * Replace the route/view for the previous scene.\n   * @param route The new route to will replace the previous scene.\n   */\n  replacePrevious: function(route: Route) {\n    this.replaceAtIndex(route, -2);\n  },\n\n  /**\n   * Go back to the topmost item in the navigation stack.\n   */\n  popToTop: function() {\n    this.popToRoute(this.state.routeStack[0]);\n  },\n\n  /**\n   * Go back to the item for a particular route object.\n   * @param route The new route to navigate to.\n   */\n  popToRoute: function(route: Route) {\n    const indexOfRoute = this.state.routeStack.indexOf(route);\n    invariant(\n      indexOfRoute !== -1,\n      \"Calling pop to route for a route that doesn't exist!\",\n    );\n    const numToPop = this.state.routeStack.length - indexOfRoute - 1;\n    this.popN(numToPop);\n  },\n\n  /**\n   * Replaces the previous route/view and transitions back to it.\n   * @param route The new route that replaces the previous scene.\n   */\n  replacePreviousAndPop: function(route: Route) {\n    // Make sure all previous requests are caught up first. Otherwise reject.\n    if (this.state.requestedTopOfStack !== this.state.observedTopOfStack) {\n      return;\n    }\n    if (this.state.routeStack.length < 2) {\n      return;\n    }\n    this._tryLockNavigator(() => {\n      this.replacePrevious(route);\n      this.setState({\n        requestedTopOfStack: this.state.requestedTopOfStack - 1,\n        makingNavigatorRequest: true,\n      });\n    });\n  },\n\n  /**\n   * Replaces the top item and pop to it.\n   * @param route The new route that will replace the topmost item.\n   */\n  resetTo: function(route: Route) {\n    invariant(!!route, 'Must supply route to push');\n    // Make sure all previous requests are caught up first. Otherwise reject.\n    if (this.state.requestedTopOfStack !== this.state.observedTopOfStack) {\n      return;\n    }\n    this.replaceAtIndex(route, 0);\n    this.popToRoute(route);\n  },\n\n  _handleNavigationComplete: function(e: Event) {\n    // Don't propagate to other NavigatorIOS instances this is nested in:\n    e.stopPropagation();\n\n    if (this._toFocusOnNavigationComplete) {\n      this._getFocusEmitter().emit('focus', this._toFocusOnNavigationComplete);\n      this._toFocusOnNavigationComplete = null;\n    }\n    this._handleNavigatorStackChanged(e);\n  },\n\n  _routeToStackItem: function(routeArg: Route, i: number) {\n    const {component, wrapperStyle, passProps, ...route} = routeArg;\n    const {itemWrapperStyle, ...props} = this.props;\n    const shouldUpdateChild =\n      this.state.updatingAllIndicesAtOrBeyond != null &&\n      this.state.updatingAllIndicesAtOrBeyond >= i;\n    const Component = component;\n    return (\n      <StaticContainer key={'nav' + i} shouldUpdate={shouldUpdateChild}>\n        <RCTNavigatorItem\n          {...props}\n          {...route}\n          style={[styles.stackItem, itemWrapperStyle, wrapperStyle]}>\n          <Component navigator={this.navigator} route={route} {...passProps} />\n        </RCTNavigatorItem>\n      </StaticContainer>\n    );\n  },\n\n  _renderNavigationStackItems: function() {\n    const shouldRecurseToNavigator =\n      this.state.makingNavigatorRequest ||\n      this.state.updatingAllIndicesAtOrBeyond !== null;\n    // If not recursing update to navigator at all, may as well avoid\n    // computation of navigator children.\n    const items = shouldRecurseToNavigator\n      ? this.state.routeStack.map(this._routeToStackItem)\n      : null;\n    return (\n      <StaticContainer shouldUpdate={shouldRecurseToNavigator}>\n        <NavigatorTransitionerIOS\n          ref={TRANSITIONER_REF}\n          style={styles.transitioner}\n          // $FlowFixMe(>=0.41.0)\n          vertical={this.props.vertical}\n          requestedTopOfStack={this.state.requestedTopOfStack}\n          onNavigationComplete={this._handleNavigationComplete}\n          interactivePopGestureEnabled={\n            this.props.interactivePopGestureEnabled\n          }>\n          {items}\n        </NavigatorTransitionerIOS>\n      </StaticContainer>\n    );\n  },\n\n  _tvEventHandler: (undefined: ?TVEventHandler),\n\n  _enableTVEventHandler: function() {\n    this._tvEventHandler = new TVEventHandler();\n    this._tvEventHandler.enable(this, function(cmp, evt) {\n      if (evt && evt.eventType === 'menu') {\n        cmp.pop();\n      }\n    });\n  },\n\n  _disableTVEventHandler: function() {\n    if (this._tvEventHandler) {\n      this._tvEventHandler.disable();\n      delete this._tvEventHandler;\n    }\n  },\n\n  render: function() {\n    return (\n      // $FlowFixMe(>=0.41.0)\n      <View style={this.props.style}>{this._renderNavigationStackItems()}</View>\n    );\n  },\n});\n\nconst styles = StyleSheet.create({\n  stackItem: {\n    backgroundColor: 'white',\n    overflow: 'hidden',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  transitioner: {\n    flex: 1,\n  },\n});\n\nconst RCTNavigator = requireNativeComponent('RCTNavigator');\nconst RCTNavigatorItem = requireNativeComponent('RCTNavItem');\n\nmodule.exports = NavigatorIOS;\n"]}]}
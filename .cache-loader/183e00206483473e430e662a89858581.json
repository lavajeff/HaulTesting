{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Switch/SwitchNativeComponent.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Switch/SwitchNativeComponent.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var Platform=require('Platform');var ReactNative=require('ReactNative');var requireNativeComponent=require('requireNativeComponent');var SwitchNativeComponent=Platform.OS==='android'?requireNativeComponent('AndroidSwitch'):requireNativeComponent('RCTSwitch');module.exports=SwitchNativeComponent;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(SwitchNativeComponent,\"SwitchNativeComponent\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Switch/SwitchNativeComponent.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Switch/SwitchNativeComponent.js"],"names":["Platform","require","ReactNative","requireNativeComponent","SwitchNativeComponent","OS","module","exports"],"mappings":"AAUA,a,0GAEA,GAAMA,CAAAA,QAAQ,CAAGC,OAAO,CAAC,UAAD,CAAxB,CACA,GAAMC,CAAAA,WAAW,CAAGD,OAAO,CAAC,aAAD,CAA3B,CAEA,GAAME,CAAAA,sBAAsB,CAAGF,OAAO,CAAC,wBAAD,CAAtC,CAmCA,GAAMG,CAAAA,qBAAgD,CACpDJ,QAAQ,CAACK,EAAT,GAAgB,SAAhB,CACKF,sBAAsB,CAAC,eAAD,CAD3B,CAEKA,sBAAsB,CAAC,WAAD,CAH7B,CAKAG,MAAM,CAACC,OAAP,CAAiBH,qBAAjB,C,gLALMA,qB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst Platform = require('Platform');\nconst ReactNative = require('ReactNative');\n\nconst requireNativeComponent = require('requireNativeComponent');\n\nimport type {SwitchChangeEvent} from 'CoreEventTypes';\nimport type {ViewProps} from 'ViewPropTypes';\n\n// @see ReactSwitchManager.java\nexport type NativeAndroidProps = $ReadOnly<{|\n  ...ViewProps,\n  enabled?: ?boolean,\n  on?: ?boolean,\n  onChange?: ?(event: SwitchChangeEvent) => mixed,\n  thumbTintColor?: ?string,\n  trackTintColor?: ?string,\n|}>;\n\n// @see RCTSwitchManager.m\nexport type NativeIOSProps = $ReadOnly<{|\n  ...ViewProps,\n  disabled?: ?boolean,\n  onChange?: ?(event: SwitchChangeEvent) => mixed,\n  onTintColor?: ?string,\n  thumbTintColor?: ?string,\n  tintColor?: ?string,\n  value?: ?boolean,\n|}>;\n\ntype SwitchNativeComponentType = Class<\n  ReactNative.NativeComponent<\n    $ReadOnly<{|\n      ...NativeAndroidProps,\n      ...NativeIOSProps,\n    |}>,\n  >,\n>;\n\nconst SwitchNativeComponent: SwitchNativeComponentType =\n  Platform.OS === 'android'\n    ? (requireNativeComponent('AndroidSwitch'): any)\n    : (requireNativeComponent('RCTSwitch'): any);\n\nmodule.exports = SwitchNativeComponent;\n"]}]}
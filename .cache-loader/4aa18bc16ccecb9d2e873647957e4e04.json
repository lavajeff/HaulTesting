{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/emitter/EventEmitterWithHolding.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/emitter/EventEmitterWithHolding.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var EventEmitterWithHolding=function(){function EventEmitterWithHolding(emitter,holder){(0,_classCallCheck2.default)(this,EventEmitterWithHolding);this._emitter=emitter;this._eventHolder=holder;this._currentEventToken=null;this._emittingHeldEvents=false;}(0,_createClass2.default)(EventEmitterWithHolding,[{key:\"addListener\",value:function addListener(eventType,listener,context){return this._emitter.addListener(eventType,listener,context);}},{key:\"once\",value:function once(eventType,listener,context){return this._emitter.once(eventType,listener,context);}},{key:\"addRetroactiveListener\",value:function addRetroactiveListener(eventType,listener,context){var subscription=this._emitter.addListener(eventType,listener,context);this._emittingHeldEvents=true;this._eventHolder.emitToListener(eventType,listener,context);this._emittingHeldEvents=false;return subscription;}},{key:\"removeAllListeners\",value:function removeAllListeners(eventType){this._emitter.removeAllListeners(eventType);}},{key:\"removeCurrentListener\",value:function removeCurrentListener(){this._emitter.removeCurrentListener();}},{key:\"listeners\",value:function listeners(eventType){return this._emitter.listeners(eventType);}},{key:\"emit\",value:function emit(eventType){var _this$_emitter;for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}(_this$_emitter=this._emitter).emit.apply(_this$_emitter,[eventType].concat(args));}},{key:\"emitAndHold\",value:function emitAndHold(eventType){var _this$_eventHolder,_this$_emitter2;for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){args[_key2-1]=arguments[_key2];}this._currentEventToken=(_this$_eventHolder=this._eventHolder).holdEvent.apply(_this$_eventHolder,[eventType].concat(args));(_this$_emitter2=this._emitter).emit.apply(_this$_emitter2,[eventType].concat(args));this._currentEventToken=null;}},{key:\"releaseCurrentEvent\",value:function releaseCurrentEvent(){if(this._currentEventToken){this._eventHolder.releaseEvent(this._currentEventToken);}else if(this._emittingHeldEvents){this._eventHolder.releaseCurrentEvent();}}},{key:\"releaseHeldEventType\",value:function releaseHeldEventType(eventType){this._eventHolder.releaseEventType(eventType);}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return EventEmitterWithHolding;}();module.exports=EventEmitterWithHolding;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(EventEmitterWithHolding,\"EventEmitterWithHolding\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/emitter/EventEmitterWithHolding.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/emitter/EventEmitterWithHolding.js"],"names":["EventEmitterWithHolding","emitter","holder","_emitter","_eventHolder","_currentEventToken","_emittingHeldEvents","eventType","listener","context","addListener","once","subscription","emitToListener","removeAllListeners","removeCurrentListener","listeners","args","emit","holdEvent","releaseEvent","releaseCurrentEvent","releaseEventType","module","exports"],"mappings":"AAUA,a,sXAkBMA,CAAAA,uB,YAaJ,iCAAYC,OAAZ,CAAmCC,MAAnC,CAAwD,4DACtD,KAAKC,QAAL,CAAgBF,OAAhB,CACA,KAAKG,YAAL,CAAoBF,MAApB,CACA,KAAKG,kBAAL,CAA0B,IAA1B,CACA,KAAKC,mBAAL,CAA2B,KAA3B,CACD,C,iGAKWC,S,CAAmBC,Q,CAAoBC,O,CAAkB,CACnE,MAAO,MAAKN,QAAL,CAAcO,WAAd,CAA0BH,SAA1B,CAAqCC,QAArC,CAA+CC,OAA/C,CAAP,CACD,C,kCAKIF,S,CAAmBC,Q,CAAoBC,O,CAAkB,CAC5D,MAAO,MAAKN,QAAL,CAAcQ,IAAd,CAAmBJ,SAAnB,CAA8BC,QAA9B,CAAwCC,OAAxC,CAAP,CACD,C,sEAuBCF,S,CACAC,Q,CACAC,O,CACqB,CACrB,GAAMG,CAAAA,YAAY,CAAG,KAAKT,QAAL,CAAcO,WAAd,CACnBH,SADmB,CAEnBC,QAFmB,CAGnBC,OAHmB,CAArB,CAMA,KAAKH,mBAAL,CAA2B,IAA3B,CACA,KAAKF,YAAL,CAAkBS,cAAlB,CAAiCN,SAAjC,CAA4CC,QAA5C,CAAsDC,OAAtD,EACA,KAAKH,mBAAL,CAA2B,KAA3B,CAEA,MAAOM,CAAAA,YAAP,CACD,C,8DAKkBL,S,CAAmB,CACpC,KAAKJ,QAAL,CAAcW,kBAAd,CAAiCP,SAAjC,EACD,C,qEAKuB,CACtB,KAAKJ,QAAL,CAAcY,qBAAd,GACD,C,4CAKSR,S,CAAyD,CACjE,MAAO,MAAKJ,QAAL,CAAca,SAAd,CAAwBT,SAAxB,CAAP,CACD,C,kCAKIA,S,CAAiC,kDAAXU,IAAW,qDAAXA,IAAW,0BACpC,qBAAKd,QAAL,EAAce,IAAd,uBAAmBX,SAAnB,SAAiCU,IAAjC,GACD,C,gDAiBWV,S,CAAiC,uEAAXU,IAAW,2DAAXA,IAAW,4BAC3C,KAAKZ,kBAAL,CAA0B,yBAAKD,YAAL,EAAkBe,SAAlB,2BAA4BZ,SAA5B,SAA0CU,IAA1C,EAA1B,CACA,sBAAKd,QAAL,EAAce,IAAd,wBAAmBX,SAAnB,SAAiCU,IAAjC,GACA,KAAKZ,kBAAL,CAA0B,IAA1B,CACD,C,iEAKqB,CACpB,GAAI,KAAKA,kBAAT,CAA6B,CAC3B,KAAKD,YAAL,CAAkBgB,YAAlB,CAA+B,KAAKf,kBAApC,EACD,CAFD,IAEO,IAAI,KAAKC,mBAAT,CAA8B,CACnC,KAAKF,YAAL,CAAkBiB,mBAAlB,GACD,CACF,C,kEAMoBd,S,CAAmB,CACtC,KAAKH,YAAL,CAAkBkB,gBAAlB,CAAmCf,SAAnC,EACD,C,iKAGHgB,MAAM,CAACC,OAAP,CAAiBxB,uBAAjB,C,gLA7IMA,uB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type EmitterSubscription from 'EmitterSubscription';\nimport type EventEmitter from 'EventEmitter';\nimport type EventHolder from 'EventHolder';\n\n/**\n * @class EventEmitterWithHolding\n * @description\n * An EventEmitterWithHolding decorates an event emitter and enables one to\n * \"hold\" or cache events and then have a handler register later to actually\n * handle them.\n *\n * This is separated into its own decorator so that only those who want to use\n * the holding functionality have to and others can just use an emitter. Since\n * it implements the emitter interface it can also be combined with anything\n * that uses an emitter.\n */\nclass EventEmitterWithHolding {\n  _emitter: EventEmitter;\n  _eventHolder: EventHolder;\n  _currentEventToken: ?Object;\n  _emittingHeldEvents: boolean;\n\n  /**\n   * @constructor\n   * @param {object} emitter - The object responsible for emitting the actual\n   *   events.\n   * @param {object} holder - The event holder that is responsible for holding\n   *   and then emitting held events.\n   */\n  constructor(emitter: EventEmitter, holder: EventHolder) {\n    this._emitter = emitter;\n    this._eventHolder = holder;\n    this._currentEventToken = null;\n    this._emittingHeldEvents = false;\n  }\n\n  /**\n   * @see EventEmitter#addListener\n   */\n  addListener(eventType: string, listener: Function, context: ?Object) {\n    return this._emitter.addListener(eventType, listener, context);\n  }\n\n  /**\n   * @see EventEmitter#once\n   */\n  once(eventType: string, listener: Function, context: ?Object) {\n    return this._emitter.once(eventType, listener, context);\n  }\n\n  /**\n   * Adds a listener to be invoked when events of the specified type are\n   * emitted. An optional calling context may be provided. The data arguments\n   * emitted will be passed to the listener function. In addition to subscribing\n   * to all subsequent events, this method will also handle any events that have\n   * already been emitted, held, and not released.\n   *\n   * @param {string} eventType - Name of the event to listen to\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   *\n   * @example\n   *   emitter.emitAndHold('someEvent', 'abc');\n   *\n   *   emitter.addRetroactiveListener('someEvent', function(message) {\n   *     console.log(message);\n   *   }); // logs 'abc'\n   */\n  addRetroactiveListener(\n    eventType: string,\n    listener: Function,\n    context: ?Object,\n  ): EmitterSubscription {\n    const subscription = this._emitter.addListener(\n      eventType,\n      listener,\n      context,\n    );\n\n    this._emittingHeldEvents = true;\n    this._eventHolder.emitToListener(eventType, listener, context);\n    this._emittingHeldEvents = false;\n\n    return subscription;\n  }\n\n  /**\n   * @see EventEmitter#removeAllListeners\n   */\n  removeAllListeners(eventType: string) {\n    this._emitter.removeAllListeners(eventType);\n  }\n\n  /**\n   * @see EventEmitter#removeCurrentListener\n   */\n  removeCurrentListener() {\n    this._emitter.removeCurrentListener();\n  }\n\n  /**\n   * @see EventEmitter#listeners\n   */\n  listeners(eventType: string) /* TODO: Annotate return type here */ {\n    return this._emitter.listeners(eventType);\n  }\n\n  /**\n   * @see EventEmitter#emit\n   */\n  emit(eventType: string, ...args: any) {\n    this._emitter.emit(eventType, ...args);\n  }\n\n  /**\n   * Emits an event of the given type with the given data, and holds that event\n   * in order to be able to dispatch it to a later subscriber when they say they\n   * want to handle held events.\n   *\n   * @param {string} eventType - Name of the event to emit\n   * @param {...*} Arbitrary arguments to be passed to each registered listener\n   *\n   * @example\n   *   emitter.emitAndHold('someEvent', 'abc');\n   *\n   *   emitter.addRetroactiveListener('someEvent', function(message) {\n   *     console.log(message);\n   *   }); // logs 'abc'\n   */\n  emitAndHold(eventType: string, ...args: any) {\n    this._currentEventToken = this._eventHolder.holdEvent(eventType, ...args);\n    this._emitter.emit(eventType, ...args);\n    this._currentEventToken = null;\n  }\n\n  /**\n   * @see EventHolder#releaseCurrentEvent\n   */\n  releaseCurrentEvent() {\n    if (this._currentEventToken) {\n      this._eventHolder.releaseEvent(this._currentEventToken);\n    } else if (this._emittingHeldEvents) {\n      this._eventHolder.releaseCurrentEvent();\n    }\n  }\n\n  /**\n   * @see EventHolder#releaseEventType\n   * @param {string} eventType\n   */\n  releaseHeldEventType(eventType: string) {\n    this._eventHolder.releaseEventType(eventType);\n  }\n}\n\nmodule.exports = EventEmitterWithHolding;\n"]}]}
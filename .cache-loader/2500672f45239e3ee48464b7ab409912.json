{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/processTransform.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/processTransform.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var MatrixMath=require('MatrixMath');var Platform=require('Platform');var invariant=require('fbjs/lib/invariant');var stringifySafe=require('stringifySafe');function processTransform(transform){if(__DEV__){_validateTransforms(transform);}if(Platform.OS==='android'||Platform.OS==='ios'){return transform;}var result=MatrixMath.createIdentityMatrix();transform.forEach(function(transformation){var key=Object.keys(transformation)[0];var value=transformation[key];switch(key){case'matrix':MatrixMath.multiplyInto(result,result,value);break;case'perspective':_multiplyTransform(result,MatrixMath.reusePerspectiveCommand,[value]);break;case'rotateX':_multiplyTransform(result,MatrixMath.reuseRotateXCommand,[_convertToRadians(value)]);break;case'rotateY':_multiplyTransform(result,MatrixMath.reuseRotateYCommand,[_convertToRadians(value)]);break;case'rotate':case'rotateZ':_multiplyTransform(result,MatrixMath.reuseRotateZCommand,[_convertToRadians(value)]);break;case'scale':_multiplyTransform(result,MatrixMath.reuseScaleCommand,[value]);break;case'scaleX':_multiplyTransform(result,MatrixMath.reuseScaleXCommand,[value]);break;case'scaleY':_multiplyTransform(result,MatrixMath.reuseScaleYCommand,[value]);break;case'translate':_multiplyTransform(result,MatrixMath.reuseTranslate3dCommand,[value[0],value[1],value[2]||0]);break;case'translateX':_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[value,0]);break;case'translateY':_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[0,value]);break;case'skewX':_multiplyTransform(result,MatrixMath.reuseSkewXCommand,[_convertToRadians(value)]);break;case'skewY':_multiplyTransform(result,MatrixMath.reuseSkewYCommand,[_convertToRadians(value)]);break;default:throw new Error('Invalid transform name: '+key);}});return result;}function _multiplyTransform(result,matrixMathFunction,args){var matrixToApply=MatrixMath.createIdentityMatrix();var argsWithIdentity=[matrixToApply].concat(args);matrixMathFunction.apply(this,argsWithIdentity);MatrixMath.multiplyInto(result,result,matrixToApply);}function _convertToRadians(value){var floatValue=parseFloat(value);return value.indexOf('rad')>-1?floatValue:floatValue*Math.PI/180;}function _validateTransforms(transform){transform.forEach(function(transformation){var keys=Object.keys(transformation);invariant(keys.length===1,'You must specify exactly one property per transform object. Passed properties: %s',stringifySafe(transformation));var key=keys[0];var value=transformation[key];_validateTransform(key,value,transformation);});}function _validateTransform(key,value,transformation){invariant(!value.getValue,'You passed an Animated.Value to a normal component. '+'You need to wrap that component in an Animated. For example, '+'replace <View /> by <Animated.View />.');var multivalueTransforms=['matrix','translate'];if(multivalueTransforms.indexOf(key)!==-1){invariant(Array.isArray(value),'Transform with key of %s must have an array as the value: %s',key,stringifySafe(transformation));}switch(key){case'matrix':invariant(value.length===9||value.length===16,'Matrix transform must have a length of 9 (2d) or 16 (3d). '+'Provided matrix has a length of %s: %s',value.length,stringifySafe(transformation));break;case'translate':invariant(value.length===2||value.length===3,'Transform with key translate must be an array of length 2 or 3, found %s: %s',value.length,stringifySafe(transformation));break;case'rotateX':case'rotateY':case'rotateZ':case'rotate':case'skewX':case'skewY':invariant(typeof value==='string','Transform with key of \"%s\" must be a string: %s',key,stringifySafe(transformation));invariant(value.indexOf('deg')>-1||value.indexOf('rad')>-1,'Rotate transform must be expressed in degrees (deg) or radians '+'(rad): %s',stringifySafe(transformation));break;case'perspective':invariant(typeof value==='number','Transform with key of \"%s\" must be a number: %s',key,stringifySafe(transformation));invariant(value!==0,'Transform with key of \"%s\" cannot be zero: %s',key,stringifySafe(transformation));break;case'translateX':case'translateY':case'scale':case'scaleX':case'scaleY':invariant(typeof value==='number','Transform with key of \"%s\" must be a number: %s',key,stringifySafe(transformation));break;default:invariant(false,'Invalid transform %s: %s',key,stringifySafe(transformation));}}module.exports=processTransform;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(processTransform,\"processTransform\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/processTransform.js\");reactHotLoader.register(_multiplyTransform,\"_multiplyTransform\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/processTransform.js\");reactHotLoader.register(_convertToRadians,\"_convertToRadians\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/processTransform.js\");reactHotLoader.register(_validateTransforms,\"_validateTransforms\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/processTransform.js\");reactHotLoader.register(_validateTransform,\"_validateTransform\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/processTransform.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/processTransform.js"],"names":["MatrixMath","require","Platform","invariant","stringifySafe","processTransform","transform","__DEV__","_validateTransforms","OS","result","createIdentityMatrix","forEach","transformation","key","Object","keys","value","multiplyInto","_multiplyTransform","reusePerspectiveCommand","reuseRotateXCommand","_convertToRadians","reuseRotateYCommand","reuseRotateZCommand","reuseScaleCommand","reuseScaleXCommand","reuseScaleYCommand","reuseTranslate3dCommand","reuseTranslate2dCommand","reuseSkewXCommand","reuseSkewYCommand","Error","matrixMathFunction","args","matrixToApply","argsWithIdentity","concat","apply","floatValue","parseFloat","indexOf","Math","PI","length","_validateTransform","getValue","multivalueTransforms","Array","isArray","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst MatrixMath = require('MatrixMath');\nconst Platform = require('Platform');\n\nconst invariant = require('fbjs/lib/invariant');\nconst stringifySafe = require('stringifySafe');\n\n/**\n * Generate a transform matrix based on the provided transforms, and use that\n * within the style object instead.\n *\n * This allows us to provide an API that is similar to CSS, where transforms may\n * be applied in an arbitrary order, and yet have a universal, singular\n * interface to native code.\n */\nfunction processTransform(\n  transform: Array<Object>,\n): Array<Object> | Array<number> {\n  if (__DEV__) {\n    _validateTransforms(transform);\n  }\n\n  // Android & iOS implementations of transform property accept the list of\n  // transform properties as opposed to a transform Matrix. This is necessary\n  // to control transform property updates completely on the native thread.\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return transform;\n  }\n\n  const result = MatrixMath.createIdentityMatrix();\n\n  transform.forEach(transformation => {\n    const key = Object.keys(transformation)[0];\n    const value = transformation[key];\n\n    switch (key) {\n      case 'matrix':\n        MatrixMath.multiplyInto(result, result, value);\n        break;\n      case 'perspective':\n        _multiplyTransform(result, MatrixMath.reusePerspectiveCommand, [value]);\n        break;\n      case 'rotateX':\n        _multiplyTransform(result, MatrixMath.reuseRotateXCommand, [\n          _convertToRadians(value),\n        ]);\n        break;\n      case 'rotateY':\n        _multiplyTransform(result, MatrixMath.reuseRotateYCommand, [\n          _convertToRadians(value),\n        ]);\n        break;\n      case 'rotate':\n      case 'rotateZ':\n        _multiplyTransform(result, MatrixMath.reuseRotateZCommand, [\n          _convertToRadians(value),\n        ]);\n        break;\n      case 'scale':\n        _multiplyTransform(result, MatrixMath.reuseScaleCommand, [value]);\n        break;\n      case 'scaleX':\n        _multiplyTransform(result, MatrixMath.reuseScaleXCommand, [value]);\n        break;\n      case 'scaleY':\n        _multiplyTransform(result, MatrixMath.reuseScaleYCommand, [value]);\n        break;\n      case 'translate':\n        _multiplyTransform(result, MatrixMath.reuseTranslate3dCommand, [\n          value[0],\n          value[1],\n          value[2] || 0,\n        ]);\n        break;\n      case 'translateX':\n        _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [\n          value,\n          0,\n        ]);\n        break;\n      case 'translateY':\n        _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [\n          0,\n          value,\n        ]);\n        break;\n      case 'skewX':\n        _multiplyTransform(result, MatrixMath.reuseSkewXCommand, [\n          _convertToRadians(value),\n        ]);\n        break;\n      case 'skewY':\n        _multiplyTransform(result, MatrixMath.reuseSkewYCommand, [\n          _convertToRadians(value),\n        ]);\n        break;\n      default:\n        throw new Error('Invalid transform name: ' + key);\n    }\n  });\n\n  return result;\n}\n\n/**\n * Performs a destructive operation on a transform matrix.\n */\nfunction _multiplyTransform(\n  result: Array<number>,\n  matrixMathFunction: Function,\n  args: Array<number>,\n): void {\n  const matrixToApply = MatrixMath.createIdentityMatrix();\n  const argsWithIdentity = [matrixToApply].concat(args);\n  matrixMathFunction.apply(this, argsWithIdentity);\n  MatrixMath.multiplyInto(result, result, matrixToApply);\n}\n\n/**\n * Parses a string like '0.5rad' or '60deg' into radians expressed in a float.\n * Note that validation on the string is done in `_validateTransform()`.\n */\nfunction _convertToRadians(value: string): number {\n  const floatValue = parseFloat(value);\n  return value.indexOf('rad') > -1 ? floatValue : (floatValue * Math.PI) / 180;\n}\n\nfunction _validateTransforms(transform: Array<Object>): void {\n  transform.forEach(transformation => {\n    const keys = Object.keys(transformation);\n    invariant(\n      keys.length === 1,\n      'You must specify exactly one property per transform object. Passed properties: %s',\n      stringifySafe(transformation),\n    );\n    const key = keys[0];\n    const value = transformation[key];\n    _validateTransform(key, value, transformation);\n  });\n}\n\nfunction _validateTransform(key, value, transformation) {\n  invariant(\n    !value.getValue,\n    'You passed an Animated.Value to a normal component. ' +\n      'You need to wrap that component in an Animated. For example, ' +\n      'replace <View /> by <Animated.View />.',\n  );\n\n  const multivalueTransforms = ['matrix', 'translate'];\n  if (multivalueTransforms.indexOf(key) !== -1) {\n    invariant(\n      Array.isArray(value),\n      'Transform with key of %s must have an array as the value: %s',\n      key,\n      stringifySafe(transformation),\n    );\n  }\n  switch (key) {\n    case 'matrix':\n      invariant(\n        value.length === 9 || value.length === 16,\n        'Matrix transform must have a length of 9 (2d) or 16 (3d). ' +\n          'Provided matrix has a length of %s: %s',\n        value.length,\n        stringifySafe(transformation),\n      );\n      break;\n    case 'translate':\n      invariant(\n        value.length === 2 || value.length === 3,\n        'Transform with key translate must be an array of length 2 or 3, found %s: %s',\n        value.length,\n        stringifySafe(transformation),\n      );\n      break;\n    case 'rotateX':\n    case 'rotateY':\n    case 'rotateZ':\n    case 'rotate':\n    case 'skewX':\n    case 'skewY':\n      invariant(\n        typeof value === 'string',\n        'Transform with key of \"%s\" must be a string: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      invariant(\n        value.indexOf('deg') > -1 || value.indexOf('rad') > -1,\n        'Rotate transform must be expressed in degrees (deg) or radians ' +\n          '(rad): %s',\n        stringifySafe(transformation),\n      );\n      break;\n    case 'perspective':\n      invariant(\n        typeof value === 'number',\n        'Transform with key of \"%s\" must be a number: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      invariant(\n        value !== 0,\n        'Transform with key of \"%s\" cannot be zero: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      break;\n    case 'translateX':\n    case 'translateY':\n    case 'scale':\n    case 'scaleX':\n    case 'scaleY':\n      invariant(\n        typeof value === 'number',\n        'Transform with key of \"%s\" must be a number: %s',\n        key,\n        stringifySafe(transformation),\n      );\n      break;\n    default:\n      invariant(\n        false,\n        'Invalid transform %s: %s',\n        key,\n        stringifySafe(transformation),\n      );\n  }\n}\n\nmodule.exports = processTransform;\n"]}]}
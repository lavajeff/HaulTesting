{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/PermissionsAndroid/PermissionsAndroid.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/PermissionsAndroid/PermissionsAndroid.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var NativeModules=require('NativeModules');var PermissionsAndroid=function(){function PermissionsAndroid(){(0,_classCallCheck2.default)(this,PermissionsAndroid);this.PERMISSIONS={READ_CALENDAR:'android.permission.READ_CALENDAR',WRITE_CALENDAR:'android.permission.WRITE_CALENDAR',CAMERA:'android.permission.CAMERA',READ_CONTACTS:'android.permission.READ_CONTACTS',WRITE_CONTACTS:'android.permission.WRITE_CONTACTS',GET_ACCOUNTS:'android.permission.GET_ACCOUNTS',ACCESS_FINE_LOCATION:'android.permission.ACCESS_FINE_LOCATION',ACCESS_COARSE_LOCATION:'android.permission.ACCESS_COARSE_LOCATION',RECORD_AUDIO:'android.permission.RECORD_AUDIO',READ_PHONE_STATE:'android.permission.READ_PHONE_STATE',CALL_PHONE:'android.permission.CALL_PHONE',READ_CALL_LOG:'android.permission.READ_CALL_LOG',WRITE_CALL_LOG:'android.permission.WRITE_CALL_LOG',ADD_VOICEMAIL:'com.android.voicemail.permission.ADD_VOICEMAIL',USE_SIP:'android.permission.USE_SIP',PROCESS_OUTGOING_CALLS:'android.permission.PROCESS_OUTGOING_CALLS',BODY_SENSORS:'android.permission.BODY_SENSORS',SEND_SMS:'android.permission.SEND_SMS',RECEIVE_SMS:'android.permission.RECEIVE_SMS',READ_SMS:'android.permission.READ_SMS',RECEIVE_WAP_PUSH:'android.permission.RECEIVE_WAP_PUSH',RECEIVE_MMS:'android.permission.RECEIVE_MMS',READ_EXTERNAL_STORAGE:'android.permission.READ_EXTERNAL_STORAGE',WRITE_EXTERNAL_STORAGE:'android.permission.WRITE_EXTERNAL_STORAGE'};this.RESULTS={GRANTED:'granted',DENIED:'denied',NEVER_ASK_AGAIN:'never_ask_again'};}(0,_createClass2.default)(PermissionsAndroid,[{key:\"checkPermission\",value:function checkPermission(permission){console.warn('\"PermissionsAndroid.checkPermission\" is deprecated. Use \"PermissionsAndroid.check\" instead');return NativeModules.PermissionsAndroid.checkPermission(permission);}},{key:\"check\",value:function check(permission){return NativeModules.PermissionsAndroid.checkPermission(permission);}},{key:\"requestPermission\",value:function requestPermission(permission,rationale){var response;return _regenerator.default.async(function requestPermission$(_context){while(1){switch(_context.prev=_context.next){case 0:console.warn('\"PermissionsAndroid.requestPermission\" is deprecated. Use \"PermissionsAndroid.request\" instead');_context.next=3;return _regenerator.default.awrap(this.request(permission,rationale));case 3:response=_context.sent;return _context.abrupt(\"return\",response===this.RESULTS.GRANTED);case 5:case\"end\":return _context.stop();}}},null,this);}},{key:\"request\",value:function request(permission,rationale){var shouldShowRationale;return _regenerator.default.async(function request$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!rationale){_context2.next=6;break;}_context2.next=3;return _regenerator.default.awrap(NativeModules.PermissionsAndroid.shouldShowRequestPermissionRationale(permission));case 3:shouldShowRationale=_context2.sent;if(!shouldShowRationale){_context2.next=6;break;}return _context2.abrupt(\"return\",new Promise(function(resolve,reject){NativeModules.DialogManagerAndroid.showAlert(rationale,function(){return reject(new Error('Error showing rationale'));},function(){return resolve(NativeModules.PermissionsAndroid.requestPermission(permission));});}));case 6:return _context2.abrupt(\"return\",NativeModules.PermissionsAndroid.requestPermission(permission));case 7:case\"end\":return _context2.stop();}}},null,this);}},{key:\"requestMultiple\",value:function requestMultiple(permissions){return NativeModules.PermissionsAndroid.requestMultiplePermissions(permissions);}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return PermissionsAndroid;}();PermissionsAndroid=new PermissionsAndroid();module.exports=PermissionsAndroid;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(PermissionsAndroid,\"PermissionsAndroid\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/PermissionsAndroid/PermissionsAndroid.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/PermissionsAndroid/PermissionsAndroid.js"],"names":["NativeModules","require","PermissionsAndroid","PERMISSIONS","READ_CALENDAR","WRITE_CALENDAR","CAMERA","READ_CONTACTS","WRITE_CONTACTS","GET_ACCOUNTS","ACCESS_FINE_LOCATION","ACCESS_COARSE_LOCATION","RECORD_AUDIO","READ_PHONE_STATE","CALL_PHONE","READ_CALL_LOG","WRITE_CALL_LOG","ADD_VOICEMAIL","USE_SIP","PROCESS_OUTGOING_CALLS","BODY_SENSORS","SEND_SMS","RECEIVE_SMS","READ_SMS","RECEIVE_WAP_PUSH","RECEIVE_MMS","READ_EXTERNAL_STORAGE","WRITE_EXTERNAL_STORAGE","RESULTS","GRANTED","DENIED","NEVER_ASK_AGAIN","permission","console","warn","checkPermission","rationale","request","response","shouldShowRequestPermissionRationale","shouldShowRationale","Promise","resolve","reject","DialogManagerAndroid","showAlert","Error","requestPermission","permissions","requestMultiplePermissions","module","exports"],"mappings":"AAUA,a,kcAEA,GAAMA,CAAAA,aAAa,CAAGC,OAAO,CAAC,eAAD,CAA7B,C,GAcMC,CAAAA,kB,YAIJ,6BAAc,uDAIZ,KAAKC,WAAL,CAAmB,CACjBC,aAAa,CAAE,kCADE,CAEjBC,cAAc,CAAE,mCAFC,CAGjBC,MAAM,CAAE,2BAHS,CAIjBC,aAAa,CAAE,kCAJE,CAKjBC,cAAc,CAAE,mCALC,CAMjBC,YAAY,CAAE,iCANG,CAOjBC,oBAAoB,CAAE,yCAPL,CAQjBC,sBAAsB,CAAE,2CARP,CASjBC,YAAY,CAAE,iCATG,CAUjBC,gBAAgB,CAAE,qCAVD,CAWjBC,UAAU,CAAE,+BAXK,CAYjBC,aAAa,CAAE,kCAZE,CAajBC,cAAc,CAAE,mCAbC,CAcjBC,aAAa,CAAE,gDAdE,CAejBC,OAAO,CAAE,4BAfQ,CAgBjBC,sBAAsB,CAAE,2CAhBP,CAiBjBC,YAAY,CAAE,iCAjBG,CAkBjBC,QAAQ,CAAE,6BAlBO,CAmBjBC,WAAW,CAAE,gCAnBI,CAoBjBC,QAAQ,CAAE,6BApBO,CAqBjBC,gBAAgB,CAAE,qCArBD,CAsBjBC,WAAW,CAAE,gCAtBI,CAuBjBC,qBAAqB,CAAE,0CAvBN,CAwBjBC,sBAAsB,CAAE,2CAxBP,CAAnB,CA2BA,KAAKC,OAAL,CAAe,CACbC,OAAO,CAAE,SADI,CAEbC,MAAM,CAAE,QAFK,CAGbC,eAAe,CAAE,iBAHJ,CAAf,CAKD,C,oGAUeC,U,CAAsC,CACpDC,OAAO,CAACC,IAAR,CACE,4FADF,EAGA,MAAOlC,CAAAA,aAAa,CAACE,kBAAd,CAAiCiC,eAAjC,CAAiDH,UAAjD,CAAP,CACD,C,oCAQKA,U,CAAsC,CAC1C,MAAOhC,CAAAA,aAAa,CAACE,kBAAd,CAAiCiC,eAAjC,CAAiDH,UAAjD,CAAP,CACD,C,4DAiBCA,U,CACAI,S,2IAEAH,OAAO,CAACC,IAAR,CACE,gGADF,E,kDAGuB,KAAKG,OAAL,CAAaL,UAAb,CAAyBI,SAAzB,C,SAAjBE,Q,+CACCA,QAAQ,GAAK,KAAKV,OAAL,CAAaC,O,kGAUjCG,U,CACAI,S,mJAEIA,S,6EACgCpC,aAAa,CAACE,kBAAd,CAAiCqC,oCAAjC,CAChCP,UADgC,C,SAA5BQ,mB,oBAIFA,mB,2DACK,GAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtC3C,aAAa,CAAC4C,oBAAd,CAAmCC,SAAnC,CACET,SADF,CAEE,iBAAMO,CAAAA,MAAM,CAAC,GAAIG,CAAAA,KAAJ,CAAU,yBAAV,CAAD,CAAZ,EAFF,CAGE,iBACEJ,CAAAA,OAAO,CACL1C,aAAa,CAACE,kBAAd,CAAiC6C,iBAAjC,CAAmDf,UAAnD,CADK,CADT,EAHF,EAQD,CATM,C,0CAYJhC,aAAa,CAACE,kBAAd,CAAiC6C,iBAAjC,CAAmDf,UAAnD,C,mHAWPgB,W,CACmD,CACnD,MAAOhD,CAAAA,aAAa,CAACE,kBAAd,CAAiC+C,0BAAjC,CACLD,WADK,CAAP,CAGD,C,4JAGH9C,kBAAkB,CAAG,GAAIA,CAAAA,kBAAJ,EAArB,CAEAgD,MAAM,CAACC,OAAP,CAAiBjD,kBAAjB,C,gLA7IMA,kB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst NativeModules = require('NativeModules');\n\ntype Rationale = {\n  title: string,\n  message: string,\n};\n\ntype PermissionStatus = 'granted' | 'denied' | 'never_ask_again';\n/**\n * `PermissionsAndroid` provides access to Android M's new permissions model.\n *\n * See https://facebook.github.io/react-native/docs/permissionsandroid.html\n */\n\nclass PermissionsAndroid {\n  PERMISSIONS: Object;\n  RESULTS: Object;\n\n  constructor() {\n    /**\n     * A list of specified \"dangerous\" permissions that require prompting the user\n     */\n    this.PERMISSIONS = {\n      READ_CALENDAR: 'android.permission.READ_CALENDAR',\n      WRITE_CALENDAR: 'android.permission.WRITE_CALENDAR',\n      CAMERA: 'android.permission.CAMERA',\n      READ_CONTACTS: 'android.permission.READ_CONTACTS',\n      WRITE_CONTACTS: 'android.permission.WRITE_CONTACTS',\n      GET_ACCOUNTS: 'android.permission.GET_ACCOUNTS',\n      ACCESS_FINE_LOCATION: 'android.permission.ACCESS_FINE_LOCATION',\n      ACCESS_COARSE_LOCATION: 'android.permission.ACCESS_COARSE_LOCATION',\n      RECORD_AUDIO: 'android.permission.RECORD_AUDIO',\n      READ_PHONE_STATE: 'android.permission.READ_PHONE_STATE',\n      CALL_PHONE: 'android.permission.CALL_PHONE',\n      READ_CALL_LOG: 'android.permission.READ_CALL_LOG',\n      WRITE_CALL_LOG: 'android.permission.WRITE_CALL_LOG',\n      ADD_VOICEMAIL: 'com.android.voicemail.permission.ADD_VOICEMAIL',\n      USE_SIP: 'android.permission.USE_SIP',\n      PROCESS_OUTGOING_CALLS: 'android.permission.PROCESS_OUTGOING_CALLS',\n      BODY_SENSORS: 'android.permission.BODY_SENSORS',\n      SEND_SMS: 'android.permission.SEND_SMS',\n      RECEIVE_SMS: 'android.permission.RECEIVE_SMS',\n      READ_SMS: 'android.permission.READ_SMS',\n      RECEIVE_WAP_PUSH: 'android.permission.RECEIVE_WAP_PUSH',\n      RECEIVE_MMS: 'android.permission.RECEIVE_MMS',\n      READ_EXTERNAL_STORAGE: 'android.permission.READ_EXTERNAL_STORAGE',\n      WRITE_EXTERNAL_STORAGE: 'android.permission.WRITE_EXTERNAL_STORAGE',\n    };\n\n    this.RESULTS = {\n      GRANTED: 'granted',\n      DENIED: 'denied',\n      NEVER_ASK_AGAIN: 'never_ask_again',\n    };\n  }\n\n  /**\n   * DEPRECATED - use check\n   *\n   * Returns a promise resolving to a boolean value as to whether the specified\n   * permissions has been granted\n   *\n   * @deprecated\n   */\n  checkPermission(permission: string): Promise<boolean> {\n    console.warn(\n      '\"PermissionsAndroid.checkPermission\" is deprecated. Use \"PermissionsAndroid.check\" instead',\n    );\n    return NativeModules.PermissionsAndroid.checkPermission(permission);\n  }\n\n  /**\n   * Returns a promise resolving to a boolean value as to whether the specified\n   * permissions has been granted\n   *\n   * See https://facebook.github.io/react-native/docs/permissionsandroid.html#check\n   */\n  check(permission: string): Promise<boolean> {\n    return NativeModules.PermissionsAndroid.checkPermission(permission);\n  }\n\n  /**\n   * DEPRECATED - use request\n   *\n   * Prompts the user to enable a permission and returns a promise resolving to a\n   * boolean value indicating whether the user allowed or denied the request\n   *\n   * If the optional rationale argument is included (which is an object with a\n   * `title` and `message`), this function checks with the OS whether it is\n   * necessary to show a dialog explaining why the permission is needed\n   * (https://developer.android.com/training/permissions/requesting.html#explain)\n   * and then shows the system permission dialog\n   *\n   * @deprecated\n   */\n  async requestPermission(\n    permission: string,\n    rationale?: Rationale,\n  ): Promise<boolean> {\n    console.warn(\n      '\"PermissionsAndroid.requestPermission\" is deprecated. Use \"PermissionsAndroid.request\" instead',\n    );\n    const response = await this.request(permission, rationale);\n    return response === this.RESULTS.GRANTED;\n  }\n\n  /**\n   * Prompts the user to enable a permission and returns a promise resolving to a\n   * string value indicating whether the user allowed or denied the request\n   *\n   * See https://facebook.github.io/react-native/docs/permissionsandroid.html#request\n   */\n  async request(\n    permission: string,\n    rationale?: Rationale,\n  ): Promise<PermissionStatus> {\n    if (rationale) {\n      const shouldShowRationale = await NativeModules.PermissionsAndroid.shouldShowRequestPermissionRationale(\n        permission,\n      );\n\n      if (shouldShowRationale) {\n        return new Promise((resolve, reject) => {\n          NativeModules.DialogManagerAndroid.showAlert(\n            rationale,\n            () => reject(new Error('Error showing rationale')),\n            () =>\n              resolve(\n                NativeModules.PermissionsAndroid.requestPermission(permission),\n              ),\n          );\n        });\n      }\n    }\n    return NativeModules.PermissionsAndroid.requestPermission(permission);\n  }\n\n  /**\n   * Prompts the user to enable multiple permissions in the same dialog and\n   * returns an object with the permissions as keys and strings as values\n   * indicating whether the user allowed or denied the request\n   *\n   * See https://facebook.github.io/react-native/docs/permissionsandroid.html#requestmultiple\n   */\n  requestMultiple(\n    permissions: Array<string>,\n  ): Promise<{[permission: string]: PermissionStatus}> {\n    return NativeModules.PermissionsAndroid.requestMultiplePermissions(\n      permissions,\n    );\n  }\n}\n\nPermissionsAndroid = new PermissionsAndroid();\n\nmodule.exports = PermissionsAndroid;\n"]}]}
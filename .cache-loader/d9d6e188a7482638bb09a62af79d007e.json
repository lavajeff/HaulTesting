{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var EdgeInsetsPropType=require('EdgeInsetsPropType');var React=require('React');var PropTypes=require('prop-types');var TimerMixin=require('react-timer-mixin');var Touchable=require('Touchable');var View=require('View');var createReactClass=require('create-react-class');var ensurePositiveDelayProps=require('ensurePositiveDelayProps');var warning=require('fbjs/lib/warning');var _require=require('ViewAccessibility'),AccessibilityComponentTypes=_require.AccessibilityComponentTypes,AccessibilityRoles=_require.AccessibilityRoles,AccessibilityStates=_require.AccessibilityStates,AccessibilityTraits=_require.AccessibilityTraits;var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30};var TouchableWithoutFeedback=createReactClass({displayName:'TouchableWithoutFeedback',mixins:[TimerMixin,Touchable.Mixin],propTypes:{accessible:PropTypes.bool,accessibilityLabel:PropTypes.node,accessibilityHint:PropTypes.string,accessibilityComponentType:PropTypes.oneOf(AccessibilityComponentTypes),accessibilityRole:PropTypes.oneOf(AccessibilityRoles),accessibilityStates:PropTypes.arrayOf(PropTypes.oneOf(AccessibilityStates)),accessibilityTraits:PropTypes.oneOfType([PropTypes.oneOf(AccessibilityTraits),PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),onFocus:PropTypes.func,onBlur:PropTypes.func,disabled:PropTypes.bool,onPress:PropTypes.func,onPressIn:PropTypes.func,onPressOut:PropTypes.func,onLayout:PropTypes.func,onLongPress:PropTypes.func,nativeID:PropTypes.string,testID:PropTypes.string,delayPressIn:PropTypes.number,delayPressOut:PropTypes.number,delayLongPress:PropTypes.number,pressRetentionOffset:EdgeInsetsPropType,hitSlop:EdgeInsetsPropType},getInitialState:function getInitialState(){return this.touchableGetInitialState();},componentDidMount:function componentDidMount(){ensurePositiveDelayProps(this.props);},UNSAFE_componentWillReceiveProps:function UNSAFE_componentWillReceiveProps(nextProps){ensurePositiveDelayProps(nextProps);},touchableHandlePress:function touchableHandlePress(e){this.props.onPress&&this.props.onPress(e);},touchableHandleActivePressIn:function touchableHandleActivePressIn(e){this.props.onPressIn&&this.props.onPressIn(e);},touchableHandleActivePressOut:function touchableHandleActivePressOut(e){this.props.onPressOut&&this.props.onPressOut(e);},touchableHandleLongPress:function touchableHandleLongPress(e){this.props.onLongPress&&this.props.onLongPress(e);},touchableGetPressRectOffset:function touchableGetPressRectOffset(){return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET;},touchableGetHitSlop:function touchableGetHitSlop(){return this.props.hitSlop;},touchableGetHighlightDelayMS:function touchableGetHighlightDelayMS(){return this.props.delayPressIn||0;},touchableGetLongPressDelayMS:function touchableGetLongPressDelayMS(){return this.props.delayLongPress===0?0:this.props.delayLongPress||500;},touchableGetPressOutDelayMS:function touchableGetPressOutDelayMS(){return this.props.delayPressOut||0;},render:function render(){var child=React.Children.only(this.props.children);var children=child.props.children;if(Touchable.TOUCH_TARGET_DEBUG&&child.type===View){children=React.Children.toArray(children);children.push(Touchable.renderDebugView({color:'red',hitSlop:this.props.hitSlop}));}return React.cloneElement(child,{accessible:this.props.accessible!==false,accessibilityLabel:this.props.accessibilityLabel,accessibilityHint:this.props.accessibilityHint,accessibilityComponentType:this.props.accessibilityComponentType,accessibilityRole:this.props.accessibilityRole,accessibilityStates:this.props.accessibilityStates,accessibilityTraits:this.props.accessibilityTraits,nativeID:this.props.nativeID,testID:this.props.testID,onLayout:this.props.onLayout,hitSlop:this.props.hitSlop,onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,onResponderGrant:this.touchableHandleResponderGrant,onResponderMove:this.touchableHandleResponderMove,onResponderRelease:this.touchableHandleResponderRelease,onResponderTerminate:this.touchableHandleResponderTerminate,children:children});}});module.exports=TouchableWithoutFeedback;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(PRESS_RETENTION_OFFSET,\"PRESS_RETENTION_OFFSET\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.js\");reactHotLoader.register(TouchableWithoutFeedback,\"TouchableWithoutFeedback\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.js"],"names":["EdgeInsetsPropType","require","React","PropTypes","TimerMixin","Touchable","View","createReactClass","ensurePositiveDelayProps","warning","AccessibilityComponentTypes","AccessibilityRoles","AccessibilityStates","AccessibilityTraits","PRESS_RETENTION_OFFSET","top","left","right","bottom","TouchableWithoutFeedback","displayName","mixins","Mixin","propTypes","accessible","bool","accessibilityLabel","node","accessibilityHint","string","accessibilityComponentType","oneOf","accessibilityRole","accessibilityStates","arrayOf","accessibilityTraits","oneOfType","onFocus","func","onBlur","disabled","onPress","onPressIn","onPressOut","onLayout","onLongPress","nativeID","testID","delayPressIn","number","delayPressOut","delayLongPress","pressRetentionOffset","hitSlop","getInitialState","touchableGetInitialState","componentDidMount","props","UNSAFE_componentWillReceiveProps","nextProps","touchableHandlePress","e","touchableHandleActivePressIn","touchableHandleActivePressOut","touchableHandleLongPress","touchableGetPressRectOffset","touchableGetHitSlop","touchableGetHighlightDelayMS","touchableGetLongPressDelayMS","touchableGetPressOutDelayMS","render","child","Children","only","children","TOUCH_TARGET_DEBUG","type","toArray","push","renderDebugView","color","cloneElement","onStartShouldSetResponder","touchableHandleStartShouldSetResponder","onResponderTerminationRequest","touchableHandleResponderTerminationRequest","onResponderGrant","touchableHandleResponderGrant","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst EdgeInsetsPropType = require('EdgeInsetsPropType');\nconst React = require('React');\nconst PropTypes = require('prop-types');\nconst TimerMixin = require('react-timer-mixin');\nconst Touchable = require('Touchable');\nconst View = require('View');\n\nconst createReactClass = require('create-react-class');\nconst ensurePositiveDelayProps = require('ensurePositiveDelayProps');\nconst warning = require('fbjs/lib/warning');\n\nconst {\n  AccessibilityComponentTypes,\n  AccessibilityRoles,\n  AccessibilityStates,\n  AccessibilityTraits,\n} = require('ViewAccessibility');\n\nimport type {PressEvent} from 'CoreEventTypes';\nimport type {EdgeInsetsProp} from 'EdgeInsetsPropType';\nimport type {\n  AccessibilityComponentType,\n  AccessibilityRole,\n  AccessibilityStates as AccessibilityStatesFlow,\n  AccessibilityTraits as AccessibilityTraitsFlow,\n} from 'ViewAccessibility';\n\nconst PRESS_RETENTION_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\nexport type Props = $ReadOnly<{|\n  accessible?: ?boolean,\n  accessibilityComponentType?: ?AccessibilityComponentType,\n  accessibilityLabel?:\n    | null\n    | React$PropType$Primitive<any>\n    | string\n    | Array<any>\n    | any,\n  accessibilityHint?: string,\n  accessibilityRole?: ?AccessibilityRole,\n  accessibilityStates?: ?AccessibilityStatesFlow,\n  accessibilityTraits?: ?AccessibilityTraitsFlow,\n  children?: ?React.Node,\n  delayLongPress?: ?number,\n  delayPressIn?: ?number,\n  delayPressOut?: ?number,\n  disabled?: ?boolean,\n  hitSlop?: ?EdgeInsetsProp,\n  nativeID?: ?string,\n  onLayout?: ?Function,\n  onLongPress?: ?Function,\n  onPress?: ?Function,\n  onPressIn?: ?Function,\n  onPressOut?: ?Function,\n  pressRetentionOffset?: ?EdgeInsetsProp,\n  rejectResponderTermination?: ?boolean,\n  testID?: ?string,\n|}>;\n\n/**\n * Do not use unless you have a very good reason. All elements that\n * respond to press should have a visual feedback when touched.\n *\n * TouchableWithoutFeedback supports only one child.\n * If you wish to have several child components, wrap them in a View.\n */\nconst TouchableWithoutFeedback = ((createReactClass({\n  displayName: 'TouchableWithoutFeedback',\n  mixins: [TimerMixin, Touchable.Mixin],\n\n  propTypes: {\n    accessible: PropTypes.bool,\n    accessibilityLabel: PropTypes.node,\n    accessibilityHint: PropTypes.string,\n    accessibilityComponentType: PropTypes.oneOf(AccessibilityComponentTypes),\n    accessibilityRole: PropTypes.oneOf(AccessibilityRoles),\n    accessibilityStates: PropTypes.arrayOf(\n      PropTypes.oneOf(AccessibilityStates),\n    ),\n    accessibilityTraits: PropTypes.oneOfType([\n      PropTypes.oneOf(AccessibilityTraits),\n      PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits)),\n    ]),\n    /**\n     * When `accessible` is true (which is the default) this may be called when\n     * the OS-specific concept of \"focus\" occurs. Some platforms may not have\n     * the concept of focus.\n     */\n    onFocus: PropTypes.func,\n    /**\n     * When `accessible` is true (which is the default) this may be called when\n     * the OS-specific concept of \"blur\" occurs, meaning the element lost focus.\n     * Some platforms may not have the concept of blur.\n     */\n    onBlur: PropTypes.func,\n    /**\n     * If true, disable all interactions for this component.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Called when the touch is released, but not if cancelled (e.g. by a scroll\n     * that steals the responder lock).\n     */\n    onPress: PropTypes.func,\n    /**\n     * Called as soon as the touchable element is pressed and invoked even before onPress.\n     * This can be useful when making network requests.\n     */\n    onPressIn: PropTypes.func,\n    /**\n     * Called as soon as the touch is released even before onPress.\n     */\n    onPressOut: PropTypes.func,\n    /**\n     * Invoked on mount and layout changes with\n     *\n     *   `{nativeEvent: {layout: {x, y, width, height}}}`\n     */\n    onLayout: PropTypes.func,\n\n    onLongPress: PropTypes.func,\n\n    nativeID: PropTypes.string,\n    testID: PropTypes.string,\n\n    /**\n     * Delay in ms, from the start of the touch, before onPressIn is called.\n     */\n    delayPressIn: PropTypes.number,\n    /**\n     * Delay in ms, from the release of the touch, before onPressOut is called.\n     */\n    delayPressOut: PropTypes.number,\n    /**\n     * Delay in ms, from onPressIn, before onLongPress is called.\n     */\n    delayLongPress: PropTypes.number,\n    /**\n     * When the scroll view is disabled, this defines how far your touch may\n     * move off of the button, before deactivating the button. Once deactivated,\n     * try moving it back and you'll see that the button is once again\n     * reactivated! Move it back and forth several times while the scroll view\n     * is disabled. Ensure you pass in a constant to reduce memory allocations.\n     */\n    pressRetentionOffset: EdgeInsetsPropType,\n    /**\n     * This defines how far your touch can start away from the button. This is\n     * added to `pressRetentionOffset` when moving off of the button.\n     * ** NOTE **\n     * The touch area never extends past the parent view bounds and the Z-index\n     * of sibling views always takes precedence if a touch hits two overlapping\n     * views.\n     */\n    hitSlop: EdgeInsetsPropType,\n  },\n\n  getInitialState: function() {\n    return this.touchableGetInitialState();\n  },\n\n  componentDidMount: function() {\n    ensurePositiveDelayProps(this.props);\n  },\n\n  UNSAFE_componentWillReceiveProps: function(nextProps: Object) {\n    ensurePositiveDelayProps(nextProps);\n  },\n\n  /**\n   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are\n   * defined on your component.\n   */\n  touchableHandlePress: function(e: PressEvent) {\n    this.props.onPress && this.props.onPress(e);\n  },\n\n  touchableHandleActivePressIn: function(e: PressEvent) {\n    this.props.onPressIn && this.props.onPressIn(e);\n  },\n\n  touchableHandleActivePressOut: function(e: PressEvent) {\n    this.props.onPressOut && this.props.onPressOut(e);\n  },\n\n  touchableHandleLongPress: function(e: PressEvent) {\n    this.props.onLongPress && this.props.onLongPress(e);\n  },\n\n  touchableGetPressRectOffset: function(): typeof PRESS_RETENTION_OFFSET {\n    // $FlowFixMe Invalid prop usage\n    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop: function(): ?Object {\n    return this.props.hitSlop;\n  },\n\n  touchableGetHighlightDelayMS: function(): number {\n    return this.props.delayPressIn || 0;\n  },\n\n  touchableGetLongPressDelayMS: function(): number {\n    return this.props.delayLongPress === 0\n      ? 0\n      : this.props.delayLongPress || 500;\n  },\n\n  touchableGetPressOutDelayMS: function(): number {\n    return this.props.delayPressOut || 0;\n  },\n\n  render: function(): React.Element<any> {\n    // Note(avik): remove dynamic typecast once Flow has been upgraded\n    // $FlowFixMe(>=0.41.0)\n    const child = React.Children.only(this.props.children);\n    let children = child.props.children;\n    if (Touchable.TOUCH_TARGET_DEBUG && child.type === View) {\n      children = React.Children.toArray(children);\n      children.push(\n        Touchable.renderDebugView({color: 'red', hitSlop: this.props.hitSlop}),\n      );\n    }\n    return (React: any).cloneElement(child, {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityComponentType: this.props.accessibilityComponentType,\n      accessibilityRole: this.props.accessibilityRole,\n      accessibilityStates: this.props.accessibilityStates,\n      accessibilityTraits: this.props.accessibilityTraits,\n      nativeID: this.props.nativeID,\n      testID: this.props.testID,\n      onLayout: this.props.onLayout,\n      hitSlop: this.props.hitSlop,\n      onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,\n      onResponderTerminationRequest: this\n        .touchableHandleResponderTerminationRequest,\n      onResponderGrant: this.touchableHandleResponderGrant,\n      onResponderMove: this.touchableHandleResponderMove,\n      onResponderRelease: this.touchableHandleResponderRelease,\n      onResponderTerminate: this.touchableHandleResponderTerminate,\n      children,\n    });\n  },\n}): any): React.ComponentType<Props>);\n\nmodule.exports = TouchableWithoutFeedback;\n"]}]}
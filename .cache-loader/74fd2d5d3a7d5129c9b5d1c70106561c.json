{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/TransformPropTypes.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/TransformPropTypes.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var ReactPropTypes=require('prop-types');var deprecatedPropType=require('deprecatedPropType');var TransformMatrixPropType=function TransformMatrixPropType(props,propName,componentName){if(props[propName]){return new Error('The transformMatrix style property is deprecated. '+'Use `transform: [{ matrix: ... }]` instead.');}};var DecomposedMatrixPropType=function DecomposedMatrixPropType(props,propName,componentName){if(props[propName]){return new Error('The decomposedMatrix style property is deprecated. '+'Use `transform: [...]` instead.');}};var TransformPropTypes={transform:ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({perspective:ReactPropTypes.number}),ReactPropTypes.shape({rotate:ReactPropTypes.string}),ReactPropTypes.shape({rotateX:ReactPropTypes.string}),ReactPropTypes.shape({rotateY:ReactPropTypes.string}),ReactPropTypes.shape({rotateZ:ReactPropTypes.string}),ReactPropTypes.shape({scale:ReactPropTypes.number}),ReactPropTypes.shape({scaleX:ReactPropTypes.number}),ReactPropTypes.shape({scaleY:ReactPropTypes.number}),ReactPropTypes.shape({translateX:ReactPropTypes.number}),ReactPropTypes.shape({translateY:ReactPropTypes.number}),ReactPropTypes.shape({skewX:ReactPropTypes.string}),ReactPropTypes.shape({skewY:ReactPropTypes.string})])),transformMatrix:TransformMatrixPropType,decomposedMatrix:DecomposedMatrixPropType,scaleX:deprecatedPropType(ReactPropTypes.number,'Use the transform prop instead.'),scaleY:deprecatedPropType(ReactPropTypes.number,'Use the transform prop instead.'),rotation:deprecatedPropType(ReactPropTypes.number,'Use the transform prop instead.'),translateX:deprecatedPropType(ReactPropTypes.number,'Use the transform prop instead.'),translateY:deprecatedPropType(ReactPropTypes.number,'Use the transform prop instead.')};module.exports=TransformPropTypes;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(TransformMatrixPropType,\"TransformMatrixPropType\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/TransformPropTypes.js\");reactHotLoader.register(DecomposedMatrixPropType,\"DecomposedMatrixPropType\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/TransformPropTypes.js\");reactHotLoader.register(TransformPropTypes,\"TransformPropTypes\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/TransformPropTypes.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/StyleSheet/TransformPropTypes.js"],"names":["ReactPropTypes","require","deprecatedPropType","TransformMatrixPropType","props","propName","componentName","Error","DecomposedMatrixPropType","TransformPropTypes","transform","arrayOf","oneOfType","shape","perspective","number","rotate","string","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","translateX","translateY","skewX","skewY","transformMatrix","decomposedMatrix","rotation","module","exports"],"mappings":"AAUA,a,0GAEA,GAAMA,CAAAA,cAAc,CAAGC,OAAO,CAAC,YAAD,CAA9B,CAEA,GAAMC,CAAAA,kBAAkB,CAAGD,OAAO,CAAC,oBAAD,CAAlC,CAEA,GAAME,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAC9BC,KAD8B,CAE9BC,QAF8B,CAG9BC,aAH8B,CAItB,CACR,GAAIF,KAAK,CAACC,QAAD,CAAT,CAAqB,CACnB,MAAO,IAAIE,CAAAA,KAAJ,CACL,qDACE,6CAFG,CAAP,CAID,CACF,CAXD,CAaA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAC/BJ,KAD+B,CAE/BC,QAF+B,CAG/BC,aAH+B,CAIvB,CACR,GAAIF,KAAK,CAACC,QAAD,CAAT,CAAqB,CACnB,MAAO,IAAIE,CAAAA,KAAJ,CACL,sDACE,iCAFG,CAAP,CAID,CACF,CAXD,CAaA,GAAME,CAAAA,kBAAkB,CAAG,CAiBzBC,SAAS,CAAEV,cAAc,CAACW,OAAf,CACTX,cAAc,CAACY,SAAf,CAAyB,CACvBZ,cAAc,CAACa,KAAf,CAAqB,CAACC,WAAW,CAAEd,cAAc,CAACe,MAA7B,CAArB,CADuB,CAEvBf,cAAc,CAACa,KAAf,CAAqB,CAACG,MAAM,CAAEhB,cAAc,CAACiB,MAAxB,CAArB,CAFuB,CAGvBjB,cAAc,CAACa,KAAf,CAAqB,CAACK,OAAO,CAAElB,cAAc,CAACiB,MAAzB,CAArB,CAHuB,CAIvBjB,cAAc,CAACa,KAAf,CAAqB,CAACM,OAAO,CAAEnB,cAAc,CAACiB,MAAzB,CAArB,CAJuB,CAKvBjB,cAAc,CAACa,KAAf,CAAqB,CAACO,OAAO,CAAEpB,cAAc,CAACiB,MAAzB,CAArB,CALuB,CAMvBjB,cAAc,CAACa,KAAf,CAAqB,CAACQ,KAAK,CAAErB,cAAc,CAACe,MAAvB,CAArB,CANuB,CAOvBf,cAAc,CAACa,KAAf,CAAqB,CAACS,MAAM,CAAEtB,cAAc,CAACe,MAAxB,CAArB,CAPuB,CAQvBf,cAAc,CAACa,KAAf,CAAqB,CAACU,MAAM,CAAEvB,cAAc,CAACe,MAAxB,CAArB,CARuB,CASvBf,cAAc,CAACa,KAAf,CAAqB,CAACW,UAAU,CAAExB,cAAc,CAACe,MAA5B,CAArB,CATuB,CAUvBf,cAAc,CAACa,KAAf,CAAqB,CAACY,UAAU,CAAEzB,cAAc,CAACe,MAA5B,CAArB,CAVuB,CAWvBf,cAAc,CAACa,KAAf,CAAqB,CAACa,KAAK,CAAE1B,cAAc,CAACiB,MAAvB,CAArB,CAXuB,CAYvBjB,cAAc,CAACa,KAAf,CAAqB,CAACc,KAAK,CAAE3B,cAAc,CAACiB,MAAvB,CAArB,CAZuB,CAAzB,CADS,CAjBc,CAqCzBW,eAAe,CAAEzB,uBArCQ,CAyCzB0B,gBAAgB,CAAErB,wBAzCO,CA4CzBc,MAAM,CAAEpB,kBAAkB,CACxBF,cAAc,CAACe,MADS,CAExB,iCAFwB,CA5CD,CAgDzBQ,MAAM,CAAErB,kBAAkB,CACxBF,cAAc,CAACe,MADS,CAExB,iCAFwB,CAhDD,CAoDzBe,QAAQ,CAAE5B,kBAAkB,CAC1BF,cAAc,CAACe,MADW,CAE1B,iCAF0B,CApDH,CAwDzBS,UAAU,CAAEtB,kBAAkB,CAC5BF,cAAc,CAACe,MADa,CAE5B,iCAF4B,CAxDL,CA4DzBU,UAAU,CAAEvB,kBAAkB,CAC5BF,cAAc,CAACe,MADa,CAE5B,iCAF4B,CA5DL,CAA3B,CAkEAgB,MAAM,CAACC,OAAP,CAAiBvB,kBAAjB,C,gLA5FMN,uB,sJAaAK,wB,uJAaAC,kB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst ReactPropTypes = require('prop-types');\n\nconst deprecatedPropType = require('deprecatedPropType');\n\nconst TransformMatrixPropType = function(\n  props: Object,\n  propName: string,\n  componentName: string,\n): ?Error {\n  if (props[propName]) {\n    return new Error(\n      'The transformMatrix style property is deprecated. ' +\n        'Use `transform: [{ matrix: ... }]` instead.',\n    );\n  }\n};\n\nconst DecomposedMatrixPropType = function(\n  props: Object,\n  propName: string,\n  componentName: string,\n): ?Error {\n  if (props[propName]) {\n    return new Error(\n      'The decomposedMatrix style property is deprecated. ' +\n        'Use `transform: [...]` instead.',\n    );\n  }\n};\n\nconst TransformPropTypes = {\n  /**\n   * `transform` accepts an array of transformation objects. Each object specifies\n   * the property that will be transformed as the key, and the value to use in the\n   * transformation. Objects should not be combined. Use a single key/value pair\n   * per object.\n   *\n   * The rotate transformations require a string so that the transform may be\n   * expressed in degrees (deg) or radians (rad). For example:\n   *\n   * `transform([{ rotateX: '45deg' }, { rotateZ: '0.785398rad' }])`\n   *\n   * The skew transformations require a string so that the transform may be\n   * expressed in degrees (deg). For example:\n   *\n   * `transform([{ skewX: '45deg' }])`\n   */\n  transform: ReactPropTypes.arrayOf(\n    ReactPropTypes.oneOfType([\n      ReactPropTypes.shape({perspective: ReactPropTypes.number}),\n      ReactPropTypes.shape({rotate: ReactPropTypes.string}),\n      ReactPropTypes.shape({rotateX: ReactPropTypes.string}),\n      ReactPropTypes.shape({rotateY: ReactPropTypes.string}),\n      ReactPropTypes.shape({rotateZ: ReactPropTypes.string}),\n      ReactPropTypes.shape({scale: ReactPropTypes.number}),\n      ReactPropTypes.shape({scaleX: ReactPropTypes.number}),\n      ReactPropTypes.shape({scaleY: ReactPropTypes.number}),\n      ReactPropTypes.shape({translateX: ReactPropTypes.number}),\n      ReactPropTypes.shape({translateY: ReactPropTypes.number}),\n      ReactPropTypes.shape({skewX: ReactPropTypes.string}),\n      ReactPropTypes.shape({skewY: ReactPropTypes.string}),\n    ]),\n  ),\n\n  /**\n   * Deprecated. Use the transform prop instead.\n   */\n  transformMatrix: TransformMatrixPropType,\n  /**\n   * Deprecated. Use the transform prop instead.\n   */\n  decomposedMatrix: DecomposedMatrixPropType,\n\n  /* Deprecated transform props used on Android only */\n  scaleX: deprecatedPropType(\n    ReactPropTypes.number,\n    'Use the transform prop instead.',\n  ),\n  scaleY: deprecatedPropType(\n    ReactPropTypes.number,\n    'Use the transform prop instead.',\n  ),\n  rotation: deprecatedPropType(\n    ReactPropTypes.number,\n    'Use the transform prop instead.',\n  ),\n  translateX: deprecatedPropType(\n    ReactPropTypes.number,\n    'Use the transform prop instead.',\n  ),\n  translateY: deprecatedPropType(\n    ReactPropTypes.number,\n    'Use the transform prop instead.',\n  ),\n};\n\nmodule.exports = TransformPropTypes;\n"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/PooledClass.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/PooledClass.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var invariant=require('fbjs/lib/invariant');var oneArgumentPooler=function oneArgumentPooler(copyFieldsFrom){var Klass=this;if(Klass.instancePool.length){var _instance=Klass.instancePool.pop();Klass.call(_instance,copyFieldsFrom);return _instance;}else{return new Klass(copyFieldsFrom);}};var twoArgumentPooler=function twoArgumentPooler(a1,a2){var Klass=this;if(Klass.instancePool.length){var _instance2=Klass.instancePool.pop();Klass.call(_instance2,a1,a2);return _instance2;}else{return new Klass(a1,a2);}};var threeArgumentPooler=function threeArgumentPooler(a1,a2,a3){var Klass=this;if(Klass.instancePool.length){var _instance3=Klass.instancePool.pop();Klass.call(_instance3,a1,a2,a3);return _instance3;}else{return new Klass(a1,a2,a3);}};var fourArgumentPooler=function fourArgumentPooler(a1,a2,a3,a4){var Klass=this;if(Klass.instancePool.length){var _instance4=Klass.instancePool.pop();Klass.call(_instance4,a1,a2,a3,a4);return _instance4;}else{return new Klass(a1,a2,a3,a4);}};var standardReleaser=function standardReleaser(instance){var Klass=this;invariant(instance instanceof Klass,'Trying to release an instance into a pool of a different type.');instance.destructor();if(Klass.instancePool.length<Klass.poolSize){Klass.instancePool.push(instance);}};var DEFAULT_POOL_SIZE=10;var DEFAULT_POOLER=oneArgumentPooler;var addPoolingTo=function addPoolingTo(CopyConstructor,pooler){var NewKlass=CopyConstructor;NewKlass.instancePool=[];NewKlass.getPooled=pooler||DEFAULT_POOLER;if(!NewKlass.poolSize){NewKlass.poolSize=DEFAULT_POOL_SIZE;}NewKlass.release=standardReleaser;return NewKlass;};var PooledClass={addPoolingTo:addPoolingTo,oneArgumentPooler:oneArgumentPooler,twoArgumentPooler:twoArgumentPooler,threeArgumentPooler:threeArgumentPooler,fourArgumentPooler:fourArgumentPooler};module.exports=PooledClass;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(oneArgumentPooler,\"oneArgumentPooler\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/PooledClass.js\");reactHotLoader.register(twoArgumentPooler,\"twoArgumentPooler\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/PooledClass.js\");reactHotLoader.register(threeArgumentPooler,\"threeArgumentPooler\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/PooledClass.js\");reactHotLoader.register(fourArgumentPooler,\"fourArgumentPooler\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/PooledClass.js\");reactHotLoader.register(standardReleaser,\"standardReleaser\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/PooledClass.js\");reactHotLoader.register(DEFAULT_POOL_SIZE,\"DEFAULT_POOL_SIZE\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/PooledClass.js\");reactHotLoader.register(DEFAULT_POOLER,\"DEFAULT_POOLER\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/PooledClass.js\");reactHotLoader.register(addPoolingTo,\"addPoolingTo\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/PooledClass.js\");reactHotLoader.register(PooledClass,\"PooledClass\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/PooledClass.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/PooledClass.js"],"names":["invariant","require","oneArgumentPooler","copyFieldsFrom","Klass","instancePool","length","instance","pop","call","twoArgumentPooler","a1","a2","threeArgumentPooler","a3","fourArgumentPooler","a4","standardReleaser","destructor","poolSize","push","DEFAULT_POOL_SIZE","DEFAULT_POOLER","addPoolingTo","CopyConstructor","pooler","NewKlass","getPooled","release","PooledClass","module","exports"],"mappings":"AAUA,a,0GAEA,GAAMA,CAAAA,SAAS,CAAGC,OAAO,CAAC,oBAAD,CAAzB,CASA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAASC,cAAT,CAAyB,CACjD,GAAMC,CAAAA,KAAK,CAAG,IAAd,CACA,GAAIA,KAAK,CAACC,YAAN,CAAmBC,MAAvB,CAA+B,CAC7B,GAAMC,CAAAA,SAAQ,CAAGH,KAAK,CAACC,YAAN,CAAmBG,GAAnB,EAAjB,CACAJ,KAAK,CAACK,IAAN,CAAWF,SAAX,CAAqBJ,cAArB,EACA,MAAOI,CAAAA,SAAP,CACD,CAJD,IAIO,CACL,MAAO,IAAIH,CAAAA,KAAJ,CAAUD,cAAV,CAAP,CACD,CACF,CATD,CAWA,GAAMO,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAASC,EAAT,CAAaC,EAAb,CAAiB,CACzC,GAAMR,CAAAA,KAAK,CAAG,IAAd,CACA,GAAIA,KAAK,CAACC,YAAN,CAAmBC,MAAvB,CAA+B,CAC7B,GAAMC,CAAAA,UAAQ,CAAGH,KAAK,CAACC,YAAN,CAAmBG,GAAnB,EAAjB,CACAJ,KAAK,CAACK,IAAN,CAAWF,UAAX,CAAqBI,EAArB,CAAyBC,EAAzB,EACA,MAAOL,CAAAA,UAAP,CACD,CAJD,IAIO,CACL,MAAO,IAAIH,CAAAA,KAAJ,CAAUO,EAAV,CAAcC,EAAd,CAAP,CACD,CACF,CATD,CAWA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAASF,EAAT,CAAaC,EAAb,CAAiBE,EAAjB,CAAqB,CAC/C,GAAMV,CAAAA,KAAK,CAAG,IAAd,CACA,GAAIA,KAAK,CAACC,YAAN,CAAmBC,MAAvB,CAA+B,CAC7B,GAAMC,CAAAA,UAAQ,CAAGH,KAAK,CAACC,YAAN,CAAmBG,GAAnB,EAAjB,CACAJ,KAAK,CAACK,IAAN,CAAWF,UAAX,CAAqBI,EAArB,CAAyBC,EAAzB,CAA6BE,EAA7B,EACA,MAAOP,CAAAA,UAAP,CACD,CAJD,IAIO,CACL,MAAO,IAAIH,CAAAA,KAAJ,CAAUO,EAAV,CAAcC,EAAd,CAAkBE,EAAlB,CAAP,CACD,CACF,CATD,CAWA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAASJ,EAAT,CAAaC,EAAb,CAAiBE,EAAjB,CAAqBE,EAArB,CAAyB,CAClD,GAAMZ,CAAAA,KAAK,CAAG,IAAd,CACA,GAAIA,KAAK,CAACC,YAAN,CAAmBC,MAAvB,CAA+B,CAC7B,GAAMC,CAAAA,UAAQ,CAAGH,KAAK,CAACC,YAAN,CAAmBG,GAAnB,EAAjB,CACAJ,KAAK,CAACK,IAAN,CAAWF,UAAX,CAAqBI,EAArB,CAAyBC,EAAzB,CAA6BE,EAA7B,CAAiCE,EAAjC,EACA,MAAOT,CAAAA,UAAP,CACD,CAJD,IAIO,CACL,MAAO,IAAIH,CAAAA,KAAJ,CAAUO,EAAV,CAAcC,EAAd,CAAkBE,EAAlB,CAAsBE,EAAtB,CAAP,CACD,CACF,CATD,CAWA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAASV,QAAT,CAAmB,CAC1C,GAAMH,CAAAA,KAAK,CAAG,IAAd,CACAJ,SAAS,CACPO,QAAQ,WAAYH,CAAAA,KADb,CAEP,gEAFO,CAAT,CAIAG,QAAQ,CAACW,UAAT,GACA,GAAId,KAAK,CAACC,YAAN,CAAmBC,MAAnB,CAA4BF,KAAK,CAACe,QAAtC,CAAgD,CAC9Cf,KAAK,CAACC,YAAN,CAAmBe,IAAnB,CAAwBb,QAAxB,EACD,CACF,CAVD,CAYA,GAAMc,CAAAA,iBAAiB,CAAG,EAA1B,CACA,GAAMC,CAAAA,cAAc,CAAGpB,iBAAvB,CAaA,GAAMqB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CACnBC,eADmB,CAEnBC,MAFmB,CAQnB,CAGA,GAAMC,CAAAA,QAAQ,CAAIF,eAAlB,CACAE,QAAQ,CAACrB,YAAT,CAAwB,EAAxB,CACAqB,QAAQ,CAACC,SAAT,CAAqBF,MAAM,EAAIH,cAA/B,CACA,GAAI,CAACI,QAAQ,CAACP,QAAd,CAAwB,CACtBO,QAAQ,CAACP,QAAT,CAAoBE,iBAApB,CACD,CACDK,QAAQ,CAACE,OAAT,CAAmBX,gBAAnB,CACA,MAAOS,CAAAA,QAAP,CACD,CAnBD,CAqBA,GAAMG,CAAAA,WAAW,CAAG,CAClBN,YAAY,CAAEA,YADI,CAElBrB,iBAAiB,CAAGA,iBAFF,CAGlBQ,iBAAiB,CAAGA,iBAHF,CAIlBG,mBAAmB,CAAGA,mBAJJ,CAKlBE,kBAAkB,CAAGA,kBALH,CAApB,CAQAe,MAAM,CAACC,OAAP,CAAiBF,WAAjB,C,gLAnGM3B,iB,mJAWAQ,iB,mJAWAG,mB,qJAWAE,kB,oJAWAE,gB,kJAYAI,iB,mJACAC,c,gJAaAC,Y,8IAqBAM,W","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nconst oneArgumentPooler = function(copyFieldsFrom) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nconst twoArgumentPooler = function(a1, a2) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nconst threeArgumentPooler = function(a1, a2, a3) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nconst fourArgumentPooler = function(a1, a2, a3, a4) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nconst standardReleaser = function(instance) {\n  const Klass = this;\n  invariant(\n    instance instanceof Klass,\n    'Trying to release an instance into a pool of a different type.',\n  );\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nconst DEFAULT_POOL_SIZE = 10;\nconst DEFAULT_POOLER = oneArgumentPooler;\n\ntype Pooler = any;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nconst addPoolingTo = function<T>(\n  CopyConstructor: Class<T>,\n  pooler: Pooler,\n): Class<T> & {\n  getPooled(\n    ...args: $ReadOnlyArray<mixed>\n  ): /* arguments of the constructor */ T,\n  release(instance: mixed): void,\n} {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  const NewKlass = (CopyConstructor: any);\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nconst PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: (oneArgumentPooler: Pooler),\n  twoArgumentPooler: (twoArgumentPooler: Pooler),\n  threeArgumentPooler: (threeArgumentPooler: Pooler),\n  fourArgumentPooler: (fourArgumentPooler: Pooler),\n};\n\nmodule.exports = PooledClass;\n"]}]}
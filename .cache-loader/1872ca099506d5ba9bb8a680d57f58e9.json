{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/Image.ios.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/Image.ios.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _jsxFileName=\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/Image.ios.js\";(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var ImageProps=require('ImageProps');var NativeModules=require('NativeModules');var React=require('React');var ReactNative=require('ReactNative');var StyleSheet=require('StyleSheet');var flattenStyle=require('flattenStyle');var requireNativeComponent=require('requireNativeComponent');var resolveAssetSource=require('resolveAssetSource');var ImageViewManager=NativeModules.ImageViewManager;var RCTImageView=requireNativeComponent('RCTImageView');function getSize(uri,success,failure){ImageViewManager.getSize(uri,success,failure||function(){console.warn('Failed to get size for image: '+uri);});}function prefetch(url){return ImageViewManager.prefetchImage(url);}var Image=function Image(props,forwardedRef){var source=resolveAssetSource(props.source)||{uri:undefined,width:undefined,height:undefined};var sources;var style;if(Array.isArray(source)){style=flattenStyle([styles.base,props.style])||{};sources=source;}else{var _width=source.width,_height=source.height,uri=source.uri;style=flattenStyle([{width:_width,height:_height},styles.base,props.style])||{};sources=[source];if(uri===''){console.warn('source.uri should not be an empty string');}}var resizeMode=props.resizeMode||style.resizeMode||'cover';var tintColor=style.tintColor;if(props.src!=null){console.warn('The <Image> component requires a `source` property rather than `src`.');}if(props.children!=null){throw new Error('The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.');}return React.createElement(RCTImageView,(0,_extends2.default)({},props,{ref:forwardedRef,style:style,resizeMode:resizeMode,tintColor:tintColor,source:sources,__source:{fileName:_jsxFileName,lineNumber:104}}));};Image=React.forwardRef(Image);Image.getSize=getSize;Image.prefetch=prefetch;Image.resolveAssetSource=resolveAssetSource;Image.propTypes=ImageProps;var styles=StyleSheet.create({base:{overflow:'hidden'}});module.exports=Image;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(ImageViewManager,\"ImageViewManager\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/Image.ios.js\");reactHotLoader.register(RCTImageView,\"RCTImageView\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/Image.ios.js\");reactHotLoader.register(getSize,\"getSize\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/Image.ios.js\");reactHotLoader.register(prefetch,\"prefetch\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/Image.ios.js\");reactHotLoader.register(Image,\"Image\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/Image.ios.js\");reactHotLoader.register(styles,\"styles\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/Image.ios.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Image/Image.ios.js"],"names":["ImageProps","require","NativeModules","React","ReactNative","StyleSheet","flattenStyle","requireNativeComponent","resolveAssetSource","ImageViewManager","RCTImageView","getSize","uri","success","failure","console","warn","prefetch","url","prefetchImage","Image","props","forwardedRef","source","undefined","width","height","sources","style","Array","isArray","styles","base","resizeMode","tintColor","src","children","Error","forwardRef","propTypes","create","overflow","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst ImageProps = require('ImageProps');\nconst NativeModules = require('NativeModules');\nconst React = require('React');\nconst ReactNative = require('ReactNative');\nconst StyleSheet = require('StyleSheet');\n\nconst flattenStyle = require('flattenStyle');\nconst requireNativeComponent = require('requireNativeComponent');\nconst resolveAssetSource = require('resolveAssetSource');\n\nconst ImageViewManager = NativeModules.ImageViewManager;\n\nconst RCTImageView = requireNativeComponent('RCTImageView');\n\nimport type {ImageProps as ImagePropsType} from 'ImageProps';\n\nfunction getSize(\n  uri: string,\n  success: (width: number, height: number) => void,\n  failure?: (error: any) => void,\n) {\n  ImageViewManager.getSize(\n    uri,\n    success,\n    failure ||\n      function() {\n        console.warn('Failed to get size for image: ' + uri);\n      },\n  );\n}\n\nfunction prefetch(url: string) {\n  return ImageViewManager.prefetchImage(url);\n}\n\ndeclare class ImageComponentType extends ReactNative.NativeComponent<\n  ImagePropsType,\n> {\n  static getSize: typeof getSize;\n  static prefetch: typeof prefetch;\n  static resolveAssetSource: typeof resolveAssetSource;\n  static propTypes: typeof ImageProps;\n}\n\n/**\n * A React component for displaying different types of images,\n * including network images, static resources, temporary local images, and\n * images from local disk, such as the camera roll.\n *\n * See https://facebook.github.io/react-native/docs/image.html\n */\nlet Image = (\n  props: ImagePropsType,\n  forwardedRef: ?React.Ref<'RCTImageView'>,\n) => {\n  const source = resolveAssetSource(props.source) || {\n    uri: undefined,\n    width: undefined,\n    height: undefined,\n  };\n\n  let sources;\n  let style;\n  if (Array.isArray(source)) {\n    style = flattenStyle([styles.base, props.style]) || {};\n    sources = source;\n  } else {\n    const {width, height, uri} = source;\n    style = flattenStyle([{width, height}, styles.base, props.style]) || {};\n    sources = [source];\n\n    if (uri === '') {\n      console.warn('source.uri should not be an empty string');\n    }\n  }\n\n  const resizeMode = props.resizeMode || style.resizeMode || 'cover';\n  const tintColor = style.tintColor;\n\n  if (props.src != null) {\n    console.warn(\n      'The <Image> component requires a `source` property rather than `src`.',\n    );\n  }\n\n  if (props.children != null) {\n    throw new Error(\n      'The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.',\n    );\n  }\n\n  return (\n    <RCTImageView\n      {...props}\n      ref={forwardedRef}\n      style={style}\n      resizeMode={resizeMode}\n      tintColor={tintColor}\n      source={sources}\n    />\n  );\n};\n\n// $FlowFixMe - TODO T29156721 `React.forwardRef` is not defined in Flow, yet.\nImage = React.forwardRef(Image);\n\n/**\n * Retrieve the width and height (in pixels) of an image prior to displaying it.\n *\n * See https://facebook.github.io/react-native/docs/image.html#getsize\n */\nImage.getSize = getSize;\n\n/**\n * Prefetches a remote image for later use by downloading it to the disk\n * cache.\n *\n * See https://facebook.github.io/react-native/docs/image.html#prefetch\n */\nImage.prefetch = prefetch;\n\n/**\n * Resolves an asset reference into an object.\n *\n * See https://facebook.github.io/react-native/docs/image.html#resolveassetsource\n */\nImage.resolveAssetSource = resolveAssetSource;\n\nImage.propTypes = ImageProps;\n\nconst styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n});\n\nmodule.exports = (Image: Class<ImageComponentType>);\n"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/core/mergeHelpers.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/core/mergeHelpers.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var invariant=require('fbjs/lib/invariant');var MAX_MERGE_DEPTH=36;var isTerminal=function isTerminal(o){return typeof o!=='object'||o instanceof Date||o===null;};var mergeHelpers={MAX_MERGE_DEPTH:MAX_MERGE_DEPTH,isTerminal:isTerminal,normalizeMergeArg:function normalizeMergeArg(arg){return arg===undefined||arg===null?{}:arg;},checkMergeArrayArgs:function checkMergeArrayArgs(one,two){invariant(Array.isArray(one)&&Array.isArray(two),'Tried to merge arrays, instead got %s and %s.',one,two);},checkMergeObjectArgs:function checkMergeObjectArgs(one,two){mergeHelpers.checkMergeObjectArg(one);mergeHelpers.checkMergeObjectArg(two);},checkMergeObjectArg:function checkMergeObjectArg(arg){invariant(!isTerminal(arg)&&!Array.isArray(arg),'Tried to merge an object, instead got %s.',arg);},checkMergeIntoObjectArg:function checkMergeIntoObjectArg(arg){invariant((!isTerminal(arg)||typeof arg==='function')&&!Array.isArray(arg),'Tried to merge into an object, instead got %s.',arg);},checkMergeLevel:function checkMergeLevel(level){invariant(level<MAX_MERGE_DEPTH,'Maximum deep merge depth exceeded. You may be attempting to merge '+'circular structures in an unsupported way.');},checkArrayStrategy:function checkArrayStrategy(strategy){invariant(strategy===undefined||strategy in mergeHelpers.ArrayStrategies,'You must provide an array strategy to deep merge functions to '+'instruct the deep merge how to resolve merging two arrays.');},ArrayStrategies:{Clobber:'Clobber',Concat:'Concat',IndexByIndex:'IndexByIndex'}};module.exports=mergeHelpers;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(MAX_MERGE_DEPTH,\"MAX_MERGE_DEPTH\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/core/mergeHelpers.js\");reactHotLoader.register(isTerminal,\"isTerminal\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/core/mergeHelpers.js\");reactHotLoader.register(mergeHelpers,\"mergeHelpers\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/core/mergeHelpers.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/vendor/core/mergeHelpers.js"],"names":["invariant","require","MAX_MERGE_DEPTH","isTerminal","o","Date","mergeHelpers","normalizeMergeArg","arg","undefined","checkMergeArrayArgs","one","two","Array","isArray","checkMergeObjectArgs","checkMergeObjectArg","checkMergeIntoObjectArg","checkMergeLevel","level","checkArrayStrategy","strategy","ArrayStrategies","Clobber","Concat","IndexByIndex","module","exports"],"mappings":"AAYA,a,0GAEA,GAAMA,CAAAA,SAAS,CAAGC,OAAO,CAAC,oBAAD,CAAzB,CAMA,GAAMC,CAAAA,eAAe,CAAG,EAAxB,CAQA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAASC,CAAT,CAAY,CAC7B,MAAO,OAAOA,CAAAA,CAAP,GAAa,QAAb,EAAyBA,CAAC,WAAYC,CAAAA,IAAtC,EAA8CD,CAAC,GAAK,IAA3D,CACD,CAFD,CAIA,GAAME,CAAAA,YAAY,CAAG,CACnBJ,eAAe,CAAEA,eADE,CAGnBC,UAAU,CAAEA,UAHO,CAWnBI,iBAAiB,CAAE,2BAASC,GAAT,CAAc,CAC/B,MAAOA,CAAAA,GAAG,GAAKC,SAAR,EAAqBD,GAAG,GAAK,IAA7B,CAAoC,EAApC,CAAyCA,GAAhD,CACD,CAbkB,CAuBnBE,mBAAmB,CAAE,6BAASC,GAAT,CAAcC,GAAd,CAAmB,CACtCZ,SAAS,CACPa,KAAK,CAACC,OAAN,CAAcH,GAAd,GAAsBE,KAAK,CAACC,OAAN,CAAcF,GAAd,CADf,CAEP,+CAFO,CAGPD,GAHO,CAIPC,GAJO,CAAT,CAMD,CA9BkB,CAoCnBG,oBAAoB,CAAE,8BAASJ,GAAT,CAAcC,GAAd,CAAmB,CACvCN,YAAY,CAACU,mBAAb,CAAiCL,GAAjC,EACAL,YAAY,CAACU,mBAAb,CAAiCJ,GAAjC,EACD,CAvCkB,CA4CnBI,mBAAmB,CAAE,6BAASR,GAAT,CAAc,CACjCR,SAAS,CACP,CAACG,UAAU,CAACK,GAAD,CAAX,EAAoB,CAACK,KAAK,CAACC,OAAN,CAAcN,GAAd,CADd,CAEP,2CAFO,CAGPA,GAHO,CAAT,CAKD,CAlDkB,CAuDnBS,uBAAuB,CAAE,iCAAST,GAAT,CAAc,CACrCR,SAAS,CACP,CAAC,CAACG,UAAU,CAACK,GAAD,CAAX,EAAoB,MAAOA,CAAAA,GAAP,GAAe,UAApC,GAAmD,CAACK,KAAK,CAACC,OAAN,CAAcN,GAAd,CAD7C,CAEP,gDAFO,CAGPA,GAHO,CAAT,CAKD,CA7DkB,CAqEnBU,eAAe,CAAE,yBAASC,KAAT,CAAgB,CAC/BnB,SAAS,CACPmB,KAAK,CAAGjB,eADD,CAEP,qEACE,4CAHK,CAAT,CAKD,CA3EkB,CAkFnBkB,kBAAkB,CAAE,4BAASC,QAAT,CAAmB,CACrCrB,SAAS,CACPqB,QAAQ,GAAKZ,SAAb,EAA0BY,QAAQ,GAAIf,CAAAA,YAAY,CAACgB,eAD5C,CAEP,iEACE,4DAHK,CAAT,CAKD,CAxFkB,CAiGnBA,eAAe,CAAE,CACfC,OAAO,CAAE,SADM,CAEfC,MAAM,CAAE,QAFO,CAGfC,YAAY,CAAE,cAHC,CAjGE,CAArB,CAwGAC,MAAM,CAACC,OAAP,CAAiBrB,YAAjB,C,gLApHMJ,e,yIAQAC,U,oIAIAG,Y","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * requiresPolyfills: Array.isArray\n *\n * @format\n */\n\n'use strict';\n\nconst invariant = require('fbjs/lib/invariant');\n\n/**\n * Maximum number of levels to traverse. Will catch circular structures.\n * @const\n */\nconst MAX_MERGE_DEPTH = 36;\n\n/**\n * We won't worry about edge cases like new String('x') or new Boolean(true).\n * Functions and Dates are considered terminals, and arrays are not.\n * @param {*} o The item/object/value to test.\n * @return {boolean} true iff the argument is a terminal.\n */\nconst isTerminal = function(o) {\n  return typeof o !== 'object' || o instanceof Date || o === null;\n};\n\nconst mergeHelpers = {\n  MAX_MERGE_DEPTH: MAX_MERGE_DEPTH,\n\n  isTerminal: isTerminal,\n\n  /**\n   * Converts null/undefined values into empty object.\n   *\n   * @param {?Object=} arg Argument to be normalized (nullable optional)\n   * @return {!Object}\n   */\n  normalizeMergeArg: function(arg) {\n    return arg === undefined || arg === null ? {} : arg;\n  },\n\n  /**\n   * If merging Arrays, a merge strategy *must* be supplied. If not, it is\n   * likely the caller's fault. If this function is ever called with anything\n   * but `one` and `two` being `Array`s, it is the fault of the merge utilities.\n   *\n   * @param {*} one Array to merge into.\n   * @param {*} two Array to merge from.\n   */\n  checkMergeArrayArgs: function(one, two) {\n    invariant(\n      Array.isArray(one) && Array.isArray(two),\n      'Tried to merge arrays, instead got %s and %s.',\n      one,\n      two,\n    );\n  },\n\n  /**\n   * @param {*} one Object to merge into.\n   * @param {*} two Object to merge from.\n   */\n  checkMergeObjectArgs: function(one, two) {\n    mergeHelpers.checkMergeObjectArg(one);\n    mergeHelpers.checkMergeObjectArg(two);\n  },\n\n  /**\n   * @param {*} arg\n   */\n  checkMergeObjectArg: function(arg) {\n    invariant(\n      !isTerminal(arg) && !Array.isArray(arg),\n      'Tried to merge an object, instead got %s.',\n      arg,\n    );\n  },\n\n  /**\n   * @param {*} arg\n   */\n  checkMergeIntoObjectArg: function(arg) {\n    invariant(\n      (!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg),\n      'Tried to merge into an object, instead got %s.',\n      arg,\n    );\n  },\n\n  /**\n   * Checks that a merge was not given a circular object or an object that had\n   * too great of depth.\n   *\n   * @param {number} Level of recursion to validate against maximum.\n   */\n  checkMergeLevel: function(level) {\n    invariant(\n      level < MAX_MERGE_DEPTH,\n      'Maximum deep merge depth exceeded. You may be attempting to merge ' +\n        'circular structures in an unsupported way.',\n    );\n  },\n\n  /**\n   * Checks that the supplied merge strategy is valid.\n   *\n   * @param {string} Array merge strategy.\n   */\n  checkArrayStrategy: function(strategy) {\n    invariant(\n      strategy === undefined || strategy in mergeHelpers.ArrayStrategies,\n      'You must provide an array strategy to deep merge functions to ' +\n        'instruct the deep merge how to resolve merging two arrays.',\n    );\n  },\n\n  /**\n   * Set of possible behaviors of merge algorithms when encountering two Arrays\n   * that must be merged together.\n   * - `clobber`: The left `Array` is ignored.\n   * - `indexByIndex`: The result is achieved by recursively deep merging at\n   *   each index. (not yet supported.)\n   */\n  ArrayStrategies: {\n    Clobber: 'Clobber',\n    Concat: 'Concat',\n    IndexByIndex: 'IndexByIndex',\n  },\n};\n\nmodule.exports = mergeHelpers;\n"]}]}
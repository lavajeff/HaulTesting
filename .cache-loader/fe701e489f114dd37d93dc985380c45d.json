{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxWarning.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxWarning.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var YellowBoxCategory=require('YellowBoxCategory');var YellowBoxSymbolication=require('YellowBoxSymbolication');var parseErrorStack=require('parseErrorStack');var YellowBoxWarning=function(){(0,_createClass2.default)(YellowBoxWarning,null,[{key:\"parse\",value:function parse(_ref){var args=_ref.args,framesToPop=_ref.framesToPop;return(0,_objectSpread2.default)({},YellowBoxCategory.parse(args),{stack:createStack({framesToPop:framesToPop+1})});}}]);function YellowBoxWarning(message,stack){(0,_classCallCheck2.default)(this,YellowBoxWarning);this.symbolicated={error:null,stack:null,status:'NONE'};this.message=message;this.stack=stack;}(0,_createClass2.default)(YellowBoxWarning,[{key:\"getAvailableStack\",value:function getAvailableStack(){return this.symbolicated.status==='COMPLETE'?this.symbolicated.stack:this.stack;}},{key:\"symbolicate\",value:function symbolicate(callback){var _this=this;var aborted=false;if(this.symbolicated.status!=='COMPLETE'){var updateStatus=function updateStatus(error,stack){if(error!=null){_this.symbolicated={error:error,stack:null,status:'FAILED'};}else if(stack!=null){_this.symbolicated={error:null,stack:stack,status:'COMPLETE'};}else{_this.symbolicated={error:null,stack:null,status:'PENDING'};}if(!aborted){callback();}};updateStatus(null,null);YellowBoxSymbolication.symbolicate(this.stack).then(function(stack){updateStatus(null,stack);},function(error){updateStatus(error,null);});}return{abort:function abort(){aborted=true;}};}},{key:\"__reactstandin__regenerateByEval\",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code);}}]);return YellowBoxWarning;}();function createStack(_ref2){var framesToPop=_ref2.framesToPop;var error=new Error();error.framesToPop=framesToPop+1;return parseErrorStack(error);}module.exports=YellowBoxWarning;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(YellowBoxWarning,\"YellowBoxWarning\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxWarning.js\");reactHotLoader.register(createStack,\"createStack\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxWarning.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxWarning.js"],"names":["YellowBoxCategory","require","YellowBoxSymbolication","parseErrorStack","YellowBoxWarning","args","framesToPop","parse","stack","createStack","message","symbolicated","error","status","callback","aborted","updateStatus","symbolicate","then","abort","Error","module","exports"],"mappings":"AAUA,a,6cAEA,GAAMA,CAAAA,iBAAiB,CAAGC,OAAO,CAAC,mBAAD,CAAjC,CACA,GAAMC,CAAAA,sBAAsB,CAAGD,OAAO,CAAC,wBAAD,CAAtC,CAEA,GAAME,CAAAA,eAAe,CAAGF,OAAO,CAAC,iBAAD,CAA/B,C,GASMG,CAAAA,gB,oGAWD,IATDC,CAAAA,IASC,MATDA,IASC,CARDC,WAQC,MARDA,WAQC,CACD,oCACKN,iBAAiB,CAACO,KAAlB,CAAwBF,IAAxB,CADL,EAEEG,KAAK,CAAEC,WAAW,CAAC,CAACH,WAAW,CAAEA,WAAW,CAAG,CAA5B,CAAD,CAFpB,GAID,C,IAcD,0BAAYI,OAAZ,CAA8BF,KAA9B,CAA4C,0DAV5CG,YAU4C,CANqB,CAC/DC,KAAK,CAAE,IADwD,CAE/DJ,KAAK,CAAE,IAFwD,CAG/DK,MAAM,CAAE,MAHuD,CAMrB,CAC1C,KAAKH,OAAL,CAAeA,OAAf,CACA,KAAKF,KAAL,CAAaA,KAAb,CACD,C,uGAE0B,CACzB,MAAO,MAAKG,YAAL,CAAkBE,MAAlB,GAA6B,UAA7B,CACH,KAAKF,YAAL,CAAkBH,KADf,CAEH,KAAKA,KAFT,CAGD,C,gDAEWM,Q,CAA4C,gBACtD,GAAIC,CAAAA,OAAO,CAAG,KAAd,CAEA,GAAI,KAAKJ,YAAL,CAAkBE,MAAlB,GAA6B,UAAjC,CAA6C,CAC3C,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,KAAD,CAAgBJ,KAAhB,CAAwC,CAC3D,GAAII,KAAK,EAAI,IAAb,CAAmB,CACjB,KAAI,CAACD,YAAL,CAAoB,CAACC,KAAK,CAALA,KAAD,CAAQJ,KAAK,CAAE,IAAf,CAAqBK,MAAM,CAAE,QAA7B,CAApB,CACD,CAFD,IAEO,IAAIL,KAAK,EAAI,IAAb,CAAmB,CACxB,KAAI,CAACG,YAAL,CAAoB,CAACC,KAAK,CAAE,IAAR,CAAcJ,KAAK,CAALA,KAAd,CAAqBK,MAAM,CAAE,UAA7B,CAApB,CACD,CAFM,IAEA,CACL,KAAI,CAACF,YAAL,CAAoB,CAACC,KAAK,CAAE,IAAR,CAAcJ,KAAK,CAAE,IAArB,CAA2BK,MAAM,CAAE,SAAnC,CAApB,CACD,CACD,GAAI,CAACE,OAAL,CAAc,CACZD,QAAQ,GACT,CACF,CAXD,CAaAE,YAAY,CAAC,IAAD,CAAO,IAAP,CAAZ,CACAd,sBAAsB,CAACe,WAAvB,CAAmC,KAAKT,KAAxC,EAA+CU,IAA/C,CACE,SAAAV,KAAK,CAAI,CACPQ,YAAY,CAAC,IAAD,CAAOR,KAAP,CAAZ,CACD,CAHH,CAIE,SAAAI,KAAK,CAAI,CACPI,YAAY,CAACJ,KAAD,CAAQ,IAAR,CAAZ,CACD,CANH,EAQD,CAED,MAAO,CACLO,KADK,iBACS,CACZJ,OAAO,CAAG,IAAV,CACD,CAHI,CAAP,CAKD,C,0JAGH,QAASN,CAAAA,WAAT,OAA+E,IAAzDH,CAAAA,WAAyD,OAAzDA,WAAyD,CAC7E,GAAMM,CAAAA,KAAU,CAAG,GAAIQ,CAAAA,KAAJ,EAAnB,CACAR,KAAK,CAACN,WAAN,CAAoBA,WAAW,CAAG,CAAlC,CACA,MAAOH,CAAAA,eAAe,CAACS,KAAD,CAAtB,CACD,CAEDS,MAAM,CAACC,OAAP,CAAiBlB,gBAAjB,C,gLAnFMA,gB,iJA6EGK,W","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst YellowBoxCategory = require('YellowBoxCategory');\nconst YellowBoxSymbolication = require('YellowBoxSymbolication');\n\nconst parseErrorStack = require('parseErrorStack');\n\nimport type {Category, Message} from 'YellowBoxCategory';\nimport type {Stack} from 'YellowBoxSymbolication';\n\nexport type SymbolicationRequest = $ReadOnly<{|\n  abort: () => void,\n|}>;\n\nclass YellowBoxWarning {\n  static parse({\n    args,\n    framesToPop,\n  }: $ReadOnly<{|\n    args: $ReadOnlyArray<mixed>,\n    framesToPop: number,\n  |}>): {|\n    category: Category,\n    message: Message,\n    stack: Stack,\n  |} {\n    return {\n      ...YellowBoxCategory.parse(args),\n      stack: createStack({framesToPop: framesToPop + 1}),\n    };\n  }\n\n  message: Message;\n  stack: Stack;\n  symbolicated:\n    | $ReadOnly<{|error: null, stack: null, status: 'NONE'|}>\n    | $ReadOnly<{|error: null, stack: null, status: 'PENDING'|}>\n    | $ReadOnly<{|error: null, stack: Stack, status: 'COMPLETE'|}>\n    | $ReadOnly<{|error: Error, stack: null, status: 'FAILED'|}> = {\n    error: null,\n    stack: null,\n    status: 'NONE',\n  };\n\n  constructor(message: Message, stack: Stack) {\n    this.message = message;\n    this.stack = stack;\n  }\n\n  getAvailableStack(): Stack {\n    return this.symbolicated.status === 'COMPLETE'\n      ? this.symbolicated.stack\n      : this.stack;\n  }\n\n  symbolicate(callback: () => void): SymbolicationRequest {\n    let aborted = false;\n\n    if (this.symbolicated.status !== 'COMPLETE') {\n      const updateStatus = (error: ?Error, stack: ?Stack): void => {\n        if (error != null) {\n          this.symbolicated = {error, stack: null, status: 'FAILED'};\n        } else if (stack != null) {\n          this.symbolicated = {error: null, stack, status: 'COMPLETE'};\n        } else {\n          this.symbolicated = {error: null, stack: null, status: 'PENDING'};\n        }\n        if (!aborted) {\n          callback();\n        }\n      };\n\n      updateStatus(null, null);\n      YellowBoxSymbolication.symbolicate(this.stack).then(\n        stack => {\n          updateStatus(null, stack);\n        },\n        error => {\n          updateStatus(error, null);\n        },\n      );\n    }\n\n    return {\n      abort(): void {\n        aborted = true;\n      },\n    };\n  }\n}\n\nfunction createStack({framesToPop}: $ReadOnly<{|framesToPop: number|}>): Stack {\n  const error: any = new Error();\n  error.framesToPop = framesToPop + 1;\n  return parseErrorStack(error);\n}\n\nmodule.exports = YellowBoxWarning;\n"]}]}
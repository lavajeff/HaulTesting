{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxCategory.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxCategory.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _jsxFileName=\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxCategory.js\";(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var React=require('React');var Text=require('Text');var UTFSequence=require('UTFSequence');var stringifySafe=require('stringifySafe');var SUBSTITUTION=UTFSequence.BOM+'%s';var YellowBoxCategory={parse:function parse(args){var categoryParts=[];var contentParts=[];var substitutionOffsets=[];var remaining=(0,_toConsumableArray2.default)(args);if(typeof remaining[0]==='string'){var formatString=String(remaining.shift());var formatStringParts=formatString.split('%s');var substitutionCount=formatStringParts.length-1;var substitutions=remaining.splice(0,substitutionCount);var categoryString='';var contentString='';var substitutionIndex=0;for(var _iterator=formatStringParts,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref;if(_isArray){if(_i>=_iterator.length)break;_ref=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref=_i.value;}var _formatStringPart=_ref;categoryString+=_formatStringPart;contentString+=_formatStringPart;if(substitutionIndex<substitutionCount){if(substitutionIndex<substitutions.length){var substitution=stringifySafe(substitutions[substitutionIndex]);substitutionOffsets.push({length:substitution.length,offset:contentString.length});categoryString+=SUBSTITUTION;contentString+=substitution;}else{substitutionOffsets.push({length:2,offset:contentString.length});categoryString+='%s';contentString+='%s';}substitutionIndex++;}}categoryParts.push(categoryString);contentParts.push(contentString);}var remainingArgs=remaining.map(stringifySafe);categoryParts.push.apply(categoryParts,(0,_toConsumableArray2.default)(remainingArgs));contentParts.push.apply(contentParts,(0,_toConsumableArray2.default)(remainingArgs));return{category:categoryParts.join(' '),message:{content:contentParts.join(' '),substitutions:substitutionOffsets}};},render:function render(_ref2,substitutionStyle){var content=_ref2.content,substitutions=_ref2.substitutions;var elements=[];var lastOffset=substitutions.reduce(function(prevOffset,substitution,index){var key=String(index);if(substitution.offset>prevOffset){var prevPart=content.substr(prevOffset,substitution.offset-prevOffset);elements.push(React.createElement(Text,{key:key,__source:{fileName:_jsxFileName,lineNumber:119}},prevPart));}var substititionPart=content.substr(substitution.offset,substitution.length);elements.push(React.createElement(Text,{key:key+'.5',style:substitutionStyle,__source:{fileName:_jsxFileName,lineNumber:127}},substititionPart));return substitution.offset+substitution.length;},0);if(lastOffset<content.length){var lastPart=content.substr(lastOffset);elements.push(React.createElement(Text,{key:\"-1\",__source:{fileName:_jsxFileName,lineNumber:139}},lastPart));}return elements;}};module.exports=YellowBoxCategory;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(SUBSTITUTION,\"SUBSTITUTION\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxCategory.js\");reactHotLoader.register(YellowBoxCategory,\"YellowBoxCategory\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxCategory.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxCategory.js"],"names":["React","require","Text","UTFSequence","stringifySafe","SUBSTITUTION","BOM","YellowBoxCategory","parse","args","categoryParts","contentParts","substitutionOffsets","remaining","formatString","String","shift","formatStringParts","split","substitutionCount","length","substitutions","splice","categoryString","contentString","substitutionIndex","formatStringPart","substitution","push","offset","remainingArgs","map","category","join","message","content","render","substitutionStyle","elements","lastOffset","reduce","prevOffset","index","key","prevPart","substr","substititionPart","lastPart","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst React = require('React');\nconst Text = require('Text');\nconst UTFSequence = require('UTFSequence');\n\nconst stringifySafe = require('stringifySafe');\n\nimport type {TextStyleProp} from 'StyleSheet';\n\nexport type Category = string;\nexport type Message = $ReadOnly<{|\n  content: string,\n  substitutions: $ReadOnlyArray<\n    $ReadOnly<{|\n      length: number,\n      offset: number,\n    |}>,\n  >,\n|}>;\n\nconst SUBSTITUTION = UTFSequence.BOM + '%s';\n\nconst YellowBoxCategory = {\n  parse(\n    args: $ReadOnlyArray<mixed>,\n  ): $ReadOnly<{|\n    category: Category,\n    message: Message,\n  |}> {\n    const categoryParts = [];\n    const contentParts = [];\n    const substitutionOffsets = [];\n\n    const remaining = [...args];\n\n    if (typeof remaining[0] === 'string') {\n      const formatString = String(remaining.shift());\n      const formatStringParts = formatString.split('%s');\n      const substitutionCount = formatStringParts.length - 1;\n      const substitutions = remaining.splice(0, substitutionCount);\n\n      let categoryString = '';\n      let contentString = '';\n\n      let substitutionIndex = 0;\n      for (const formatStringPart of formatStringParts) {\n        categoryString += formatStringPart;\n        contentString += formatStringPart;\n\n        if (substitutionIndex < substitutionCount) {\n          if (substitutionIndex < substitutions.length) {\n            const substitution = stringifySafe(\n              substitutions[substitutionIndex],\n            );\n            substitutionOffsets.push({\n              length: substitution.length,\n              offset: contentString.length,\n            });\n\n            categoryString += SUBSTITUTION;\n            contentString += substitution;\n          } else {\n            substitutionOffsets.push({\n              length: 2,\n              offset: contentString.length,\n            });\n\n            categoryString += '%s';\n            contentString += '%s';\n          }\n\n          substitutionIndex++;\n        }\n      }\n\n      categoryParts.push(categoryString);\n      contentParts.push(contentString);\n    }\n\n    const remainingArgs = remaining.map(stringifySafe);\n    categoryParts.push(...remainingArgs);\n    contentParts.push(...remainingArgs);\n\n    return {\n      category: categoryParts.join(' '),\n      message: {\n        content: contentParts.join(' '),\n        substitutions: substitutionOffsets,\n      },\n    };\n  },\n\n  render(\n    {content, substitutions}: Message,\n    substitutionStyle: TextStyleProp,\n  ): React.Node {\n    const elements = [];\n\n    const lastOffset = substitutions.reduce(\n      (prevOffset, substitution, index) => {\n        const key = String(index);\n\n        if (substitution.offset > prevOffset) {\n          const prevPart = content.substr(\n            prevOffset,\n            substitution.offset - prevOffset,\n          );\n          elements.push(<Text key={key}>{prevPart}</Text>);\n        }\n\n        const substititionPart = content.substr(\n          substitution.offset,\n          substitution.length,\n        );\n        elements.push(\n          <Text key={key + '.5'} style={substitutionStyle}>\n            {substititionPart}\n          </Text>,\n        );\n\n        return substitution.offset + substitution.length;\n      },\n      0,\n    );\n\n    if (lastOffset < content.length) {\n      const lastPart = content.substr(lastOffset);\n      elements.push(<Text key=\"-1\">{lastPart}</Text>);\n    }\n\n    return elements;\n  },\n};\n\nmodule.exports = YellowBoxCategory;\n"]}]}
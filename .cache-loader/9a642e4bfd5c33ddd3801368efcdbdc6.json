{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var BatchedBridge=require('BatchedBridge');var EventEmitter=require('EventEmitter');var Set=require('Set');var TaskQueue=require('TaskQueue');var infoLog=require('infoLog');var invariant=require('fbjs/lib/invariant');var keyMirror=require('fbjs/lib/keyMirror');var _emitter=new EventEmitter();var DEBUG_DELAY=0;var DEBUG=false;var InteractionManager={Events:keyMirror({interactionStart:true,interactionComplete:true}),runAfterInteractions:function runAfterInteractions(task){var tasks=[];var promise=new Promise(function(resolve){_scheduleUpdate();if(task){tasks.push(task);}tasks.push({run:resolve,name:'resolve '+(task&&task.name||'?')});_taskQueue.enqueueTasks(tasks);});return{then:promise.then.bind(promise),done:function done(){if(promise.done){return promise.done.apply(promise,arguments);}else{console.warn('Tried to call done when not supported by current Promise implementation.');}},cancel:function cancel(){_taskQueue.cancelTasks(tasks);}};},createInteractionHandle:function createInteractionHandle(){DEBUG&&infoLog('create interaction handle');_scheduleUpdate();var handle=++_inc;_addInteractionSet.add(handle);return handle;},clearInteractionHandle:function clearInteractionHandle(handle){DEBUG&&infoLog('clear interaction handle');invariant(!!handle,'Must provide a handle to clear.');_scheduleUpdate();_addInteractionSet.delete(handle);_deleteInteractionSet.add(handle);},addListener:_emitter.addListener.bind(_emitter),setDeadline:function setDeadline(deadline){_deadline=deadline;}};var _interactionSet=new Set();var _addInteractionSet=new Set();var _deleteInteractionSet=new Set();var _taskQueue=new TaskQueue({onMoreTasks:_scheduleUpdate});var _nextUpdateHandle=0;var _inc=0;var _deadline=-1;function _scheduleUpdate(){if(!_nextUpdateHandle){if(_deadline>0){_nextUpdateHandle=setTimeout(_processUpdate,0+DEBUG_DELAY);}else{_nextUpdateHandle=setImmediate(_processUpdate);}}}function _processUpdate(){_nextUpdateHandle=0;var interactionCount=_interactionSet.size;_addInteractionSet.forEach(function(handle){return _interactionSet.add(handle);});_deleteInteractionSet.forEach(function(handle){return _interactionSet.delete(handle);});var nextInteractionCount=_interactionSet.size;if(interactionCount!==0&&nextInteractionCount===0){_emitter.emit(InteractionManager.Events.interactionComplete);}else if(interactionCount===0&&nextInteractionCount!==0){_emitter.emit(InteractionManager.Events.interactionStart);}if(nextInteractionCount===0){while(_taskQueue.hasTasksToProcess()){_taskQueue.processNext();if(_deadline>0&&BatchedBridge.getEventLoopRunningTime()>=_deadline){_scheduleUpdate();break;}}}_addInteractionSet.clear();_deleteInteractionSet.clear();}module.exports=InteractionManager;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(_emitter,\"_emitter\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js\");reactHotLoader.register(DEBUG_DELAY,\"DEBUG_DELAY\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js\");reactHotLoader.register(DEBUG,\"DEBUG\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js\");reactHotLoader.register(InteractionManager,\"InteractionManager\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js\");reactHotLoader.register(_interactionSet,\"_interactionSet\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js\");reactHotLoader.register(_addInteractionSet,\"_addInteractionSet\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js\");reactHotLoader.register(_deleteInteractionSet,\"_deleteInteractionSet\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js\");reactHotLoader.register(_taskQueue,\"_taskQueue\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js\");reactHotLoader.register(_nextUpdateHandle,\"_nextUpdateHandle\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js\");reactHotLoader.register(_inc,\"_inc\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js\");reactHotLoader.register(_deadline,\"_deadline\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js\");reactHotLoader.register(_scheduleUpdate,\"_scheduleUpdate\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js\");reactHotLoader.register(_processUpdate,\"_processUpdate\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Interaction/InteractionManager.js"],"names":["BatchedBridge","require","EventEmitter","Set","TaskQueue","infoLog","invariant","keyMirror","_emitter","DEBUG_DELAY","DEBUG","InteractionManager","Events","interactionStart","interactionComplete","runAfterInteractions","task","tasks","promise","Promise","resolve","_scheduleUpdate","push","run","name","_taskQueue","enqueueTasks","then","bind","done","console","warn","cancel","cancelTasks","createInteractionHandle","handle","_inc","_addInteractionSet","add","clearInteractionHandle","delete","_deleteInteractionSet","addListener","setDeadline","deadline","_deadline","_interactionSet","onMoreTasks","_nextUpdateHandle","setTimeout","_processUpdate","setImmediate","interactionCount","size","forEach","nextInteractionCount","emit","hasTasksToProcess","processNext","getEventLoopRunningTime","clear","module","exports"],"mappings":"AAUA,a,0GAEA,GAAMA,CAAAA,aAAa,CAAGC,OAAO,CAAC,eAAD,CAA7B,CACA,GAAMC,CAAAA,YAAY,CAAGD,OAAO,CAAC,cAAD,CAA5B,CACA,GAAME,CAAAA,GAAG,CAAGF,OAAO,CAAC,KAAD,CAAnB,CACA,GAAMG,CAAAA,SAAS,CAAGH,OAAO,CAAC,WAAD,CAAzB,CAEA,GAAMI,CAAAA,OAAO,CAAGJ,OAAO,CAAC,SAAD,CAAvB,CACA,GAAMK,CAAAA,SAAS,CAAGL,OAAO,CAAC,oBAAD,CAAzB,CAIA,GAAMM,CAAAA,SAAS,CAAGN,OAAO,CAAC,oBAAD,CAAzB,CAKA,GAAMO,CAAAA,QAAQ,CAAG,GAAIN,CAAAA,YAAJ,EAAjB,CAEA,GAAMO,CAAAA,WAAW,CAAG,CAApB,CACA,GAAMC,CAAAA,KAAK,CAAG,KAAd,CAmDA,GAAMC,CAAAA,kBAAkB,CAAG,CACzBC,MAAM,CAAEL,SAAS,CAAC,CAChBM,gBAAgB,CAAE,IADF,CAEhBC,mBAAmB,CAAE,IAFL,CAAD,CADQ,CAUzBC,oBAVyB,+BAWvBC,IAXuB,CAY6B,CACpD,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACA,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAY,SAAAC,OAAO,CAAI,CACrCC,eAAe,GACf,GAAIL,IAAJ,CAAU,CACRC,KAAK,CAACK,IAAN,CAAWN,IAAX,EACD,CACDC,KAAK,CAACK,IAAN,CAAW,CACTC,GAAG,CAAEH,OADI,CAETI,IAAI,CAAE,YAAeR,IAAI,EAAIA,IAAI,CAACQ,IAAd,EAAuB,GAArC,CAFG,CAAX,EAIAC,UAAU,CAACC,YAAX,CAAwBT,KAAxB,EACD,CAVe,CAAhB,CAWA,MAAO,CACLU,IAAI,CAAET,OAAO,CAACS,IAAR,CAAaC,IAAb,CAAkBV,OAAlB,CADD,CAELW,IAAI,CAAE,eAAa,CACjB,GAAIX,OAAO,CAACW,IAAZ,CAAkB,CAChB,MAAOX,CAAAA,OAAO,CAACW,IAAR,OAAAX,OAAO,WAAd,CACD,CAFD,IAEO,CACLY,OAAO,CAACC,IAAR,CACE,0EADF,EAGD,CACF,CAVI,CAWLC,MAAM,CAAE,iBAAW,CACjBP,UAAU,CAACQ,WAAX,CAAuBhB,KAAvB,EACD,CAbI,CAAP,CAeD,CAxCwB,CA6CzBiB,uBA7CyB,mCA6CS,CAChCxB,KAAK,EAAIL,OAAO,CAAC,2BAAD,CAAhB,CACAgB,eAAe,GACf,GAAMc,CAAAA,MAAM,CAAG,EAAEC,IAAjB,CACAC,kBAAkB,CAACC,GAAnB,CAAuBH,MAAvB,EACA,MAAOA,CAAAA,MAAP,CACD,CAnDwB,CAwDzBI,sBAxDyB,iCAwDFJ,MAxDE,CAwDc,CACrCzB,KAAK,EAAIL,OAAO,CAAC,0BAAD,CAAhB,CACAC,SAAS,CAAC,CAAC,CAAC6B,MAAH,CAAW,iCAAX,CAAT,CACAd,eAAe,GACfgB,kBAAkB,CAACG,MAAnB,CAA0BL,MAA1B,EACAM,qBAAqB,CAACH,GAAtB,CAA0BH,MAA1B,EACD,CA9DwB,CAgEzBO,WAAW,CAAElC,QAAQ,CAACkC,WAAT,CAAqBd,IAArB,CAA0BpB,QAA1B,CAhEY,CAuEzBmC,WAvEyB,sBAuEbC,QAvEa,CAuEK,CAC5BC,SAAS,CAAGD,QAAZ,CACD,CAzEwB,CAA3B,CA4EA,GAAME,CAAAA,eAAe,CAAG,GAAI3C,CAAAA,GAAJ,EAAxB,CACA,GAAMkC,CAAAA,kBAAkB,CAAG,GAAIlC,CAAAA,GAAJ,EAA3B,CACA,GAAMsC,CAAAA,qBAAqB,CAAG,GAAItC,CAAAA,GAAJ,EAA9B,CACA,GAAMsB,CAAAA,UAAU,CAAG,GAAIrB,CAAAA,SAAJ,CAAc,CAAC2C,WAAW,CAAE1B,eAAd,CAAd,CAAnB,CACA,GAAI2B,CAAAA,iBAAiB,CAAG,CAAxB,CACA,GAAIZ,CAAAA,IAAI,CAAG,CAAX,CACA,GAAIS,CAAAA,SAAS,CAAG,CAAC,CAAjB,CAOA,QAASxB,CAAAA,eAAT,EAA2B,CACzB,GAAI,CAAC2B,iBAAL,CAAwB,CACtB,GAAIH,SAAS,CAAG,CAAhB,CAAmB,CAIjBG,iBAAiB,CAAGC,UAAU,CAACC,cAAD,CAAiB,EAAIzC,WAArB,CAA9B,CACD,CALD,IAKO,CACLuC,iBAAiB,CAAGG,YAAY,CAACD,cAAD,CAAhC,CACD,CACF,CACF,CAKD,QAASA,CAAAA,cAAT,EAA0B,CACxBF,iBAAiB,CAAG,CAApB,CAEA,GAAMI,CAAAA,gBAAgB,CAAGN,eAAe,CAACO,IAAzC,CACAhB,kBAAkB,CAACiB,OAAnB,CAA2B,SAAAnB,MAAM,QAAIW,CAAAA,eAAe,CAACR,GAAhB,CAAoBH,MAApB,CAAJ,EAAjC,EACAM,qBAAqB,CAACa,OAAtB,CAA8B,SAAAnB,MAAM,QAAIW,CAAAA,eAAe,CAACN,MAAhB,CAAuBL,MAAvB,CAAJ,EAApC,EACA,GAAMoB,CAAAA,oBAAoB,CAAGT,eAAe,CAACO,IAA7C,CAEA,GAAID,gBAAgB,GAAK,CAArB,EAA0BG,oBAAoB,GAAK,CAAvD,CAA0D,CAExD/C,QAAQ,CAACgD,IAAT,CAAc7C,kBAAkB,CAACC,MAAnB,CAA0BE,mBAAxC,EACD,CAHD,IAGO,IAAIsC,gBAAgB,GAAK,CAArB,EAA0BG,oBAAoB,GAAK,CAAvD,CAA0D,CAE/D/C,QAAQ,CAACgD,IAAT,CAAc7C,kBAAkB,CAACC,MAAnB,CAA0BC,gBAAxC,EACD,CAGD,GAAI0C,oBAAoB,GAAK,CAA7B,CAAgC,CAC9B,MAAO9B,UAAU,CAACgC,iBAAX,EAAP,CAAuC,CACrChC,UAAU,CAACiC,WAAX,GACA,GACEb,SAAS,CAAG,CAAZ,EACA7C,aAAa,CAAC2D,uBAAd,IAA2Cd,SAF7C,CAGE,CAEAxB,eAAe,GACf,MACD,CACF,CACF,CACDgB,kBAAkB,CAACuB,KAAnB,GACAnB,qBAAqB,CAACmB,KAAtB,GACD,CAEDC,MAAM,CAACC,OAAP,CAAiBnD,kBAAjB,C,gLAjMMH,Q,wIAEAC,W,2IACAC,K,qIAmDAC,kB,kJA4EAmC,e,+IACAT,kB,kJACAI,qB,qJACAhB,U,0IACFuB,iB,iJACAZ,I,oIACAS,S,yIAOKxB,e,+IAgBA6B,c","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst BatchedBridge = require('BatchedBridge');\nconst EventEmitter = require('EventEmitter');\nconst Set = require('Set');\nconst TaskQueue = require('TaskQueue');\n\nconst infoLog = require('infoLog');\nconst invariant = require('fbjs/lib/invariant');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst keyMirror = require('fbjs/lib/keyMirror');\n\ntype Handle = number;\nimport type {Task} from 'TaskQueue';\n\nconst _emitter = new EventEmitter();\n\nconst DEBUG_DELAY = 0;\nconst DEBUG = false;\n\n/**\n * InteractionManager allows long-running work to be scheduled after any\n * interactions/animations have completed. In particular, this allows JavaScript\n * animations to run smoothly.\n *\n * Applications can schedule tasks to run after interactions with the following:\n *\n * ```\n * InteractionManager.runAfterInteractions(() => {\n *   // ...long-running synchronous task...\n * });\n * ```\n *\n * Compare this to other scheduling alternatives:\n *\n * - requestAnimationFrame(): for code that animates a view over time.\n * - setImmediate/setTimeout(): run code later, note this may delay animations.\n * - runAfterInteractions(): run code later, without delaying active animations.\n *\n * The touch handling system considers one or more active touches to be an\n * 'interaction' and will delay `runAfterInteractions()` callbacks until all\n * touches have ended or been cancelled.\n *\n * InteractionManager also allows applications to register animations by\n * creating an interaction 'handle' on animation start, and clearing it upon\n * completion:\n *\n * ```\n * var handle = InteractionManager.createInteractionHandle();\n * // run animation... (`runAfterInteractions` tasks are queued)\n * // later, on animation completion:\n * InteractionManager.clearInteractionHandle(handle);\n * // queued tasks run if all handles were cleared\n * ```\n *\n * `runAfterInteractions` takes either a plain callback function, or a\n * `PromiseTask` object with a `gen` method that returns a `Promise`.  If a\n * `PromiseTask` is supplied, then it is fully resolved (including asynchronous\n * dependencies that also schedule more tasks via `runAfterInteractions`) before\n * starting on the next task that might have been queued up synchronously\n * earlier.\n *\n * By default, queued tasks are executed together in a loop in one\n * `setImmediate` batch. If `setDeadline` is called with a positive number, then\n * tasks will only be executed until the deadline (in terms of js event loop run\n * time) approaches, at which point execution will yield via setTimeout,\n * allowing events such as touches to start interactions and block queued tasks\n * from executing, making apps more responsive.\n */\nconst InteractionManager = {\n  Events: keyMirror({\n    interactionStart: true,\n    interactionComplete: true,\n  }),\n\n  /**\n   * Schedule a function to run after all interactions have completed. Returns a cancellable\n   * \"promise\".\n   */\n  runAfterInteractions(\n    task: ?Task,\n  ): {then: Function, done: Function, cancel: Function} {\n    const tasks = [];\n    const promise = new Promise(resolve => {\n      _scheduleUpdate();\n      if (task) {\n        tasks.push(task);\n      }\n      tasks.push({\n        run: resolve,\n        name: 'resolve ' + ((task && task.name) || '?'),\n      });\n      _taskQueue.enqueueTasks(tasks);\n    });\n    return {\n      then: promise.then.bind(promise),\n      done: (...args) => {\n        if (promise.done) {\n          return promise.done(...args);\n        } else {\n          console.warn(\n            'Tried to call done when not supported by current Promise implementation.',\n          );\n        }\n      },\n      cancel: function() {\n        _taskQueue.cancelTasks(tasks);\n      },\n    };\n  },\n\n  /**\n   * Notify manager that an interaction has started.\n   */\n  createInteractionHandle(): Handle {\n    DEBUG && infoLog('create interaction handle');\n    _scheduleUpdate();\n    const handle = ++_inc;\n    _addInteractionSet.add(handle);\n    return handle;\n  },\n\n  /**\n   * Notify manager that an interaction has completed.\n   */\n  clearInteractionHandle(handle: Handle) {\n    DEBUG && infoLog('clear interaction handle');\n    invariant(!!handle, 'Must provide a handle to clear.');\n    _scheduleUpdate();\n    _addInteractionSet.delete(handle);\n    _deleteInteractionSet.add(handle);\n  },\n\n  addListener: _emitter.addListener.bind(_emitter),\n\n  /**\n   * A positive number will use setTimeout to schedule any tasks after the\n   * eventLoopRunningTime hits the deadline value, otherwise all tasks will be\n   * executed in one setImmediate batch (default).\n   */\n  setDeadline(deadline: number) {\n    _deadline = deadline;\n  },\n};\n\nconst _interactionSet = new Set();\nconst _addInteractionSet = new Set();\nconst _deleteInteractionSet = new Set();\nconst _taskQueue = new TaskQueue({onMoreTasks: _scheduleUpdate});\nlet _nextUpdateHandle = 0;\nlet _inc = 0;\nlet _deadline = -1;\n\ndeclare function setImmediate(callback: any, ...args: Array<any>): number;\n\n/**\n * Schedule an asynchronous update to the interaction state.\n */\nfunction _scheduleUpdate() {\n  if (!_nextUpdateHandle) {\n    if (_deadline > 0) {\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete this\n       * comment and run Flow. */\n      _nextUpdateHandle = setTimeout(_processUpdate, 0 + DEBUG_DELAY);\n    } else {\n      _nextUpdateHandle = setImmediate(_processUpdate);\n    }\n  }\n}\n\n/**\n * Notify listeners, process queue, etc\n */\nfunction _processUpdate() {\n  _nextUpdateHandle = 0;\n\n  const interactionCount = _interactionSet.size;\n  _addInteractionSet.forEach(handle => _interactionSet.add(handle));\n  _deleteInteractionSet.forEach(handle => _interactionSet.delete(handle));\n  const nextInteractionCount = _interactionSet.size;\n\n  if (interactionCount !== 0 && nextInteractionCount === 0) {\n    // transition from 1+ --> 0 interactions\n    _emitter.emit(InteractionManager.Events.interactionComplete);\n  } else if (interactionCount === 0 && nextInteractionCount !== 0) {\n    // transition from 0 --> 1+ interactions\n    _emitter.emit(InteractionManager.Events.interactionStart);\n  }\n\n  // process the queue regardless of a transition\n  if (nextInteractionCount === 0) {\n    while (_taskQueue.hasTasksToProcess()) {\n      _taskQueue.processNext();\n      if (\n        _deadline > 0 &&\n        BatchedBridge.getEventLoopRunningTime() >= _deadline\n      ) {\n        // Hit deadline before processing all tasks, so process more later.\n        _scheduleUpdate();\n        break;\n      }\n    }\n  }\n  _addInteractionSet.clear();\n  _deleteInteractionSet.clear();\n}\n\nmodule.exports = InteractionManager;\n"]}]}
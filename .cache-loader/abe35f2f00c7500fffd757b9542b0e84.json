{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _jsxFileName=\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js\";(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var BoundingDimensions=require('BoundingDimensions');var Platform=require('Platform');var Position=require('Position');var React=require('React');var ReactNative=require('ReactNative');var TVEventHandler=require('TVEventHandler');var TouchEventUtils=require('fbjs/lib/TouchEventUtils');var UIManager=require('UIManager');var View=require('View');var keyMirror=require('fbjs/lib/keyMirror');var normalizeColor=require('normalizeColor');var States=keyMirror({NOT_RESPONDER:null,RESPONDER_INACTIVE_PRESS_IN:null,RESPONDER_INACTIVE_PRESS_OUT:null,RESPONDER_ACTIVE_PRESS_IN:null,RESPONDER_ACTIVE_PRESS_OUT:null,RESPONDER_ACTIVE_LONG_PRESS_IN:null,RESPONDER_ACTIVE_LONG_PRESS_OUT:null,ERROR:null});var IsActive={RESPONDER_ACTIVE_PRESS_OUT:true,RESPONDER_ACTIVE_PRESS_IN:true};var IsPressingIn={RESPONDER_INACTIVE_PRESS_IN:true,RESPONDER_ACTIVE_PRESS_IN:true,RESPONDER_ACTIVE_LONG_PRESS_IN:true};var IsLongPressingIn={RESPONDER_ACTIVE_LONG_PRESS_IN:true};var Signals=keyMirror({DELAY:null,RESPONDER_GRANT:null,RESPONDER_RELEASE:null,RESPONDER_TERMINATED:null,ENTER_PRESS_RECT:null,LEAVE_PRESS_RECT:null,LONG_PRESS_DETECTED:null});var Transitions={NOT_RESPONDER:{DELAY:States.ERROR,RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,RESPONDER_RELEASE:States.ERROR,RESPONDER_TERMINATED:States.ERROR,ENTER_PRESS_RECT:States.ERROR,LEAVE_PRESS_RECT:States.ERROR,LONG_PRESS_DETECTED:States.ERROR},RESPONDER_INACTIVE_PRESS_IN:{DELAY:States.RESPONDER_ACTIVE_PRESS_IN,RESPONDER_GRANT:States.ERROR,RESPONDER_RELEASE:States.NOT_RESPONDER,RESPONDER_TERMINATED:States.NOT_RESPONDER,ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,LONG_PRESS_DETECTED:States.ERROR},RESPONDER_INACTIVE_PRESS_OUT:{DELAY:States.RESPONDER_ACTIVE_PRESS_OUT,RESPONDER_GRANT:States.ERROR,RESPONDER_RELEASE:States.NOT_RESPONDER,RESPONDER_TERMINATED:States.NOT_RESPONDER,ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,LONG_PRESS_DETECTED:States.ERROR},RESPONDER_ACTIVE_PRESS_IN:{DELAY:States.ERROR,RESPONDER_GRANT:States.ERROR,RESPONDER_RELEASE:States.NOT_RESPONDER,RESPONDER_TERMINATED:States.NOT_RESPONDER,ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},RESPONDER_ACTIVE_PRESS_OUT:{DELAY:States.ERROR,RESPONDER_GRANT:States.ERROR,RESPONDER_RELEASE:States.NOT_RESPONDER,RESPONDER_TERMINATED:States.NOT_RESPONDER,ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,LONG_PRESS_DETECTED:States.ERROR},RESPONDER_ACTIVE_LONG_PRESS_IN:{DELAY:States.ERROR,RESPONDER_GRANT:States.ERROR,RESPONDER_RELEASE:States.NOT_RESPONDER,RESPONDER_TERMINATED:States.NOT_RESPONDER,ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},RESPONDER_ACTIVE_LONG_PRESS_OUT:{DELAY:States.ERROR,RESPONDER_GRANT:States.ERROR,RESPONDER_RELEASE:States.NOT_RESPONDER,RESPONDER_TERMINATED:States.NOT_RESPONDER,ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,LONG_PRESS_DETECTED:States.ERROR},error:{DELAY:States.NOT_RESPONDER,RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,RESPONDER_RELEASE:States.NOT_RESPONDER,RESPONDER_TERMINATED:States.NOT_RESPONDER,ENTER_PRESS_RECT:States.NOT_RESPONDER,LEAVE_PRESS_RECT:States.NOT_RESPONDER,LONG_PRESS_DETECTED:States.NOT_RESPONDER}};var HIGHLIGHT_DELAY_MS=130;var PRESS_EXPAND_PX=20;var LONG_PRESS_THRESHOLD=500;var LONG_PRESS_DELAY_MS=LONG_PRESS_THRESHOLD-HIGHLIGHT_DELAY_MS;var LONG_PRESS_ALLOWED_MOVEMENT=10;var TouchableMixin={componentDidMount:function componentDidMount(){if(!Platform.isTV){return;}this._tvEventHandler=new TVEventHandler();this._tvEventHandler.enable(this,function(cmp,evt){var myTag=ReactNative.findNodeHandle(cmp);evt.dispatchConfig={};if(myTag===evt.tag){if(evt.eventType==='focus'){cmp.touchableHandleFocus(evt);}else if(evt.eventType==='blur'){cmp.touchableHandleBlur(evt);}else if(evt.eventType==='select'){cmp.touchableHandlePress&&!cmp.props.disabled&&cmp.touchableHandlePress(evt);}}});},componentWillUnmount:function componentWillUnmount(){if(this._tvEventHandler){this._tvEventHandler.disable();delete this._tvEventHandler;}this.touchableDelayTimeout&&clearTimeout(this.touchableDelayTimeout);this.longPressDelayTimeout&&clearTimeout(this.longPressDelayTimeout);this.pressOutDelayTimeout&&clearTimeout(this.pressOutDelayTimeout);},touchableGetInitialState:function touchableGetInitialState(){return{touchable:{touchState:undefined,responderID:null}};},touchableHandleResponderTerminationRequest:function touchableHandleResponderTerminationRequest(){return!this.props.rejectResponderTermination;},touchableHandleStartShouldSetResponder:function touchableHandleStartShouldSetResponder(){return!this.props.disabled;},touchableLongPressCancelsPress:function touchableLongPressCancelsPress(){return true;},touchableHandleResponderGrant:function touchableHandleResponderGrant(e){var dispatchID=e.currentTarget;e.persist();this.pressOutDelayTimeout&&clearTimeout(this.pressOutDelayTimeout);this.pressOutDelayTimeout=null;this.state.touchable.touchState=States.NOT_RESPONDER;this.state.touchable.responderID=dispatchID;this._receiveSignal(Signals.RESPONDER_GRANT,e);var delayMS=this.touchableGetHighlightDelayMS!==undefined?Math.max(this.touchableGetHighlightDelayMS(),0):HIGHLIGHT_DELAY_MS;delayMS=isNaN(delayMS)?HIGHLIGHT_DELAY_MS:delayMS;if(delayMS!==0){this.touchableDelayTimeout=setTimeout(this._handleDelay.bind(this,e),delayMS);}else{this._handleDelay(e);}var longDelayMS=this.touchableGetLongPressDelayMS!==undefined?Math.max(this.touchableGetLongPressDelayMS(),10):LONG_PRESS_DELAY_MS;longDelayMS=isNaN(longDelayMS)?LONG_PRESS_DELAY_MS:longDelayMS;this.longPressDelayTimeout=setTimeout(this._handleLongDelay.bind(this,e),longDelayMS+delayMS);},touchableHandleResponderRelease:function touchableHandleResponderRelease(e){this._receiveSignal(Signals.RESPONDER_RELEASE,e);},touchableHandleResponderTerminate:function touchableHandleResponderTerminate(e){this._receiveSignal(Signals.RESPONDER_TERMINATED,e);},touchableHandleResponderMove:function touchableHandleResponderMove(e){if(this.state.touchable.touchState===States.RESPONDER_INACTIVE_PRESS_IN){return;}if(!this.state.touchable.positionOnActivate){return;}var positionOnActivate=this.state.touchable.positionOnActivate;var dimensionsOnActivate=this.state.touchable.dimensionsOnActivate;var pressRectOffset=this.touchableGetPressRectOffset?this.touchableGetPressRectOffset():{left:PRESS_EXPAND_PX,right:PRESS_EXPAND_PX,top:PRESS_EXPAND_PX,bottom:PRESS_EXPAND_PX};var pressExpandLeft=pressRectOffset.left;var pressExpandTop=pressRectOffset.top;var pressExpandRight=pressRectOffset.right;var pressExpandBottom=pressRectOffset.bottom;var hitSlop=this.touchableGetHitSlop?this.touchableGetHitSlop():null;if(hitSlop){pressExpandLeft+=hitSlop.left;pressExpandTop+=hitSlop.top;pressExpandRight+=hitSlop.right;pressExpandBottom+=hitSlop.bottom;}var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);var pageX=touch&&touch.pageX;var pageY=touch&&touch.pageY;if(this.pressInLocation){var movedDistance=this._getDistanceBetweenPoints(pageX,pageY,this.pressInLocation.pageX,this.pressInLocation.pageY);if(movedDistance>LONG_PRESS_ALLOWED_MOVEMENT){this._cancelLongPressDelayTimeout();}}var isTouchWithinActive=pageX>positionOnActivate.left-pressExpandLeft&&pageY>positionOnActivate.top-pressExpandTop&&pageX<positionOnActivate.left+dimensionsOnActivate.width+pressExpandRight&&pageY<positionOnActivate.top+dimensionsOnActivate.height+pressExpandBottom;if(isTouchWithinActive){this._receiveSignal(Signals.ENTER_PRESS_RECT,e);var curState=this.state.touchable.touchState;if(curState===States.RESPONDER_INACTIVE_PRESS_IN){this._cancelLongPressDelayTimeout();}}else{this._cancelLongPressDelayTimeout();this._receiveSignal(Signals.LEAVE_PRESS_RECT,e);}},touchableHandleFocus:function touchableHandleFocus(e){this.props.onFocus&&this.props.onFocus(e);},touchableHandleBlur:function touchableHandleBlur(e){this.props.onBlur&&this.props.onBlur(e);},_remeasureMetricsOnActivation:function _remeasureMetricsOnActivation(){var tag=this.state.touchable.responderID;if(tag==null){return;}UIManager.measure(tag,this._handleQueryLayout);},_handleQueryLayout:function _handleQueryLayout(l,t,w,h,globalX,globalY){if(!l&&!t&&!w&&!h&&!globalX&&!globalY){return;}this.state.touchable.positionOnActivate&&Position.release(this.state.touchable.positionOnActivate);this.state.touchable.dimensionsOnActivate&&BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);this.state.touchable.positionOnActivate=Position.getPooled(globalX,globalY);this.state.touchable.dimensionsOnActivate=BoundingDimensions.getPooled(w,h);},_handleDelay:function _handleDelay(e){this.touchableDelayTimeout=null;this._receiveSignal(Signals.DELAY,e);},_handleLongDelay:function _handleLongDelay(e){this.longPressDelayTimeout=null;var curState=this.state.touchable.touchState;if(curState!==States.RESPONDER_ACTIVE_PRESS_IN&&curState!==States.RESPONDER_ACTIVE_LONG_PRESS_IN){console.error('Attempted to transition from state `'+curState+'` to `'+States.RESPONDER_ACTIVE_LONG_PRESS_IN+'`, which is not supported. This is '+'most likely due to `Touchable.longPressDelayTimeout` not being cancelled.');}else{this._receiveSignal(Signals.LONG_PRESS_DETECTED,e);}},_receiveSignal:function _receiveSignal(signal,e){var responderID=this.state.touchable.responderID;var curState=this.state.touchable.touchState;var nextState=Transitions[curState]&&Transitions[curState][signal];if(!responderID&&signal===Signals.RESPONDER_RELEASE){return;}if(!nextState){throw new Error('Unrecognized signal `'+signal+'` or state `'+curState+'` for Touchable responder `'+responderID+'`');}if(nextState===States.ERROR){throw new Error('Touchable cannot transition from `'+curState+'` to `'+signal+'` for responder `'+responderID+'`');}if(curState!==nextState){this._performSideEffectsForTransition(curState,nextState,signal,e);this.state.touchable.touchState=nextState;}},_cancelLongPressDelayTimeout:function _cancelLongPressDelayTimeout(){this.longPressDelayTimeout&&clearTimeout(this.longPressDelayTimeout);this.longPressDelayTimeout=null;},_isHighlight:function _isHighlight(state){return state===States.RESPONDER_ACTIVE_PRESS_IN||state===States.RESPONDER_ACTIVE_LONG_PRESS_IN;},_savePressInLocation:function _savePressInLocation(e){var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);var pageX=touch&&touch.pageX;var pageY=touch&&touch.pageY;var locationX=touch&&touch.locationX;var locationY=touch&&touch.locationY;this.pressInLocation={pageX:pageX,pageY:pageY,locationX:locationX,locationY:locationY};},_getDistanceBetweenPoints:function _getDistanceBetweenPoints(aX,aY,bX,bY){var deltaX=aX-bX;var deltaY=aY-bY;return Math.sqrt(deltaX*deltaX+deltaY*deltaY);},_performSideEffectsForTransition:function _performSideEffectsForTransition(curState,nextState,signal,e){var curIsHighlight=this._isHighlight(curState);var newIsHighlight=this._isHighlight(nextState);var isFinalSignal=signal===Signals.RESPONDER_TERMINATED||signal===Signals.RESPONDER_RELEASE;if(isFinalSignal){this._cancelLongPressDelayTimeout();}if(!IsActive[curState]&&IsActive[nextState]){this._remeasureMetricsOnActivation();}if(IsPressingIn[curState]&&signal===Signals.LONG_PRESS_DETECTED){this.touchableHandleLongPress&&this.touchableHandleLongPress(e);}if(newIsHighlight&&!curIsHighlight){this._startHighlight(e);}else if(!newIsHighlight&&curIsHighlight){this._endHighlight(e);}if(IsPressingIn[curState]&&signal===Signals.RESPONDER_RELEASE){var hasLongPressHandler=!!this.props.onLongPress;var pressIsLongButStillCallOnPress=IsLongPressingIn[curState]&&(!hasLongPressHandler||!this.touchableLongPressCancelsPress());var shouldInvokePress=!IsLongPressingIn[curState]||pressIsLongButStillCallOnPress;if(shouldInvokePress&&this.touchableHandlePress){if(!newIsHighlight&&!curIsHighlight){this._startHighlight(e);this._endHighlight(e);}if(Platform.OS==='android'){this._playTouchSound();}this.touchableHandlePress(e);}}this.touchableDelayTimeout&&clearTimeout(this.touchableDelayTimeout);this.touchableDelayTimeout=null;},_playTouchSound:function _playTouchSound(){UIManager.playTouchSound();},_startHighlight:function _startHighlight(e){this._savePressInLocation(e);this.touchableHandleActivePressIn&&this.touchableHandleActivePressIn(e);},_endHighlight:function _endHighlight(e){var _this=this;if(this.touchableHandleActivePressOut){if(this.touchableGetPressOutDelayMS&&this.touchableGetPressOutDelayMS()){this.pressOutDelayTimeout=setTimeout(function(){_this.touchableHandleActivePressOut(e);},this.touchableGetPressOutDelayMS());}else{this.touchableHandleActivePressOut(e);}}}};var Touchable={Mixin:TouchableMixin,TOUCH_TARGET_DEBUG:false,renderDebugView:function renderDebugView(_ref){var color=_ref.color,hitSlop=_ref.hitSlop;if(!Touchable.TOUCH_TARGET_DEBUG){return null;}if(!__DEV__){throw Error('Touchable.TOUCH_TARGET_DEBUG should not be enabled in prod!');}var debugHitSlopStyle={};hitSlop=hitSlop||{top:0,bottom:0,left:0,right:0};for(var key in hitSlop){debugHitSlopStyle[key]=-hitSlop[key];}var hexColor='#'+('00000000'+normalizeColor(color).toString(16)).substr(-8);return React.createElement(View,{pointerEvents:\"none\",style:(0,_objectSpread2.default)({position:'absolute',borderColor:hexColor.slice(0,-2)+'55',borderWidth:1,borderStyle:'dashed',backgroundColor:hexColor.slice(0,-2)+'0F'},debugHitSlopStyle),__source:{fileName:_jsxFileName,lineNumber:859}});}};module.exports=Touchable;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(States,\"States\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js\");reactHotLoader.register(IsActive,\"IsActive\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js\");reactHotLoader.register(IsPressingIn,\"IsPressingIn\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js\");reactHotLoader.register(IsLongPressingIn,\"IsLongPressingIn\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js\");reactHotLoader.register(Signals,\"Signals\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js\");reactHotLoader.register(Transitions,\"Transitions\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js\");reactHotLoader.register(HIGHLIGHT_DELAY_MS,\"HIGHLIGHT_DELAY_MS\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js\");reactHotLoader.register(PRESS_EXPAND_PX,\"PRESS_EXPAND_PX\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js\");reactHotLoader.register(LONG_PRESS_THRESHOLD,\"LONG_PRESS_THRESHOLD\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js\");reactHotLoader.register(LONG_PRESS_DELAY_MS,\"LONG_PRESS_DELAY_MS\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js\");reactHotLoader.register(LONG_PRESS_ALLOWED_MOVEMENT,\"LONG_PRESS_ALLOWED_MOVEMENT\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js\");reactHotLoader.register(TouchableMixin,\"TouchableMixin\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js\");reactHotLoader.register(Touchable,\"Touchable\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Touchable/Touchable.js"],"names":["BoundingDimensions","require","Platform","Position","React","ReactNative","TVEventHandler","TouchEventUtils","UIManager","View","keyMirror","normalizeColor","States","NOT_RESPONDER","RESPONDER_INACTIVE_PRESS_IN","RESPONDER_INACTIVE_PRESS_OUT","RESPONDER_ACTIVE_PRESS_IN","RESPONDER_ACTIVE_PRESS_OUT","RESPONDER_ACTIVE_LONG_PRESS_IN","RESPONDER_ACTIVE_LONG_PRESS_OUT","ERROR","IsActive","IsPressingIn","IsLongPressingIn","Signals","DELAY","RESPONDER_GRANT","RESPONDER_RELEASE","RESPONDER_TERMINATED","ENTER_PRESS_RECT","LEAVE_PRESS_RECT","LONG_PRESS_DETECTED","Transitions","error","HIGHLIGHT_DELAY_MS","PRESS_EXPAND_PX","LONG_PRESS_THRESHOLD","LONG_PRESS_DELAY_MS","LONG_PRESS_ALLOWED_MOVEMENT","TouchableMixin","componentDidMount","isTV","_tvEventHandler","enable","cmp","evt","myTag","findNodeHandle","dispatchConfig","tag","eventType","touchableHandleFocus","touchableHandleBlur","touchableHandlePress","props","disabled","componentWillUnmount","disable","touchableDelayTimeout","clearTimeout","longPressDelayTimeout","pressOutDelayTimeout","touchableGetInitialState","touchable","touchState","undefined","responderID","touchableHandleResponderTerminationRequest","rejectResponderTermination","touchableHandleStartShouldSetResponder","touchableLongPressCancelsPress","touchableHandleResponderGrant","e","dispatchID","currentTarget","persist","state","_receiveSignal","delayMS","touchableGetHighlightDelayMS","Math","max","isNaN","setTimeout","_handleDelay","bind","longDelayMS","touchableGetLongPressDelayMS","_handleLongDelay","touchableHandleResponderRelease","touchableHandleResponderTerminate","touchableHandleResponderMove","positionOnActivate","dimensionsOnActivate","pressRectOffset","touchableGetPressRectOffset","left","right","top","bottom","pressExpandLeft","pressExpandTop","pressExpandRight","pressExpandBottom","hitSlop","touchableGetHitSlop","touch","extractSingleTouch","nativeEvent","pageX","pageY","pressInLocation","movedDistance","_getDistanceBetweenPoints","_cancelLongPressDelayTimeout","isTouchWithinActive","width","height","curState","onFocus","onBlur","_remeasureMetricsOnActivation","measure","_handleQueryLayout","l","t","w","h","globalX","globalY","release","getPooled","console","signal","nextState","Error","_performSideEffectsForTransition","_isHighlight","_savePressInLocation","locationX","locationY","aX","aY","bX","bY","deltaX","deltaY","sqrt","curIsHighlight","newIsHighlight","isFinalSignal","touchableHandleLongPress","_startHighlight","_endHighlight","hasLongPressHandler","onLongPress","pressIsLongButStillCallOnPress","shouldInvokePress","OS","_playTouchSound","playTouchSound","touchableHandleActivePressIn","touchableHandleActivePressOut","touchableGetPressOutDelayMS","Touchable","Mixin","TOUCH_TARGET_DEBUG","renderDebugView","color","__DEV__","debugHitSlopStyle","key","hexColor","toString","substr","position","borderColor","slice","borderWidth","borderStyle","backgroundColor","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst BoundingDimensions = require('BoundingDimensions');\nconst Platform = require('Platform');\nconst Position = require('Position');\nconst React = require('React');\nconst ReactNative = require('ReactNative');\nconst TVEventHandler = require('TVEventHandler');\nconst TouchEventUtils = require('fbjs/lib/TouchEventUtils');\nconst UIManager = require('UIManager');\nconst View = require('View');\n\nconst keyMirror = require('fbjs/lib/keyMirror');\nconst normalizeColor = require('normalizeColor');\n\n/**\n * `Touchable`: Taps done right.\n *\n * You hook your `ResponderEventPlugin` events into `Touchable`. `Touchable`\n * will measure time/geometry and tells you when to give feedback to the user.\n *\n * ====================== Touchable Tutorial ===============================\n * The `Touchable` mixin helps you handle the \"press\" interaction. It analyzes\n * the geometry of elements, and observes when another responder (scroll view\n * etc) has stolen the touch lock. It notifies your component when it should\n * give feedback to the user. (bouncing/highlighting/unhighlighting).\n *\n * - When a touch was activated (typically you highlight)\n * - When a touch was deactivated (typically you unhighlight)\n * - When a touch was \"pressed\" - a touch ended while still within the geometry\n *   of the element, and no other element (like scroller) has \"stolen\" touch\n *   lock (\"responder\") (Typically you bounce the element).\n *\n * A good tap interaction isn't as simple as you might think. There should be a\n * slight delay before showing a highlight when starting a touch. If a\n * subsequent touch move exceeds the boundary of the element, it should\n * unhighlight, but if that same touch is brought back within the boundary, it\n * should rehighlight again. A touch can move in and out of that boundary\n * several times, each time toggling highlighting, but a \"press\" is only\n * triggered if that touch ends while within the element's boundary and no\n * scroller (or anything else) has stolen the lock on touches.\n *\n * To create a new type of component that handles interaction using the\n * `Touchable` mixin, do the following:\n *\n * - Initialize the `Touchable` state.\n *\n *   getInitialState: function() {\n *     return merge(this.touchableGetInitialState(), yourComponentState);\n *   }\n *\n * - Choose the rendered component who's touches should start the interactive\n *   sequence. On that rendered node, forward all `Touchable` responder\n *   handlers. You can choose any rendered node you like. Choose a node whose\n *   hit target you'd like to instigate the interaction sequence:\n *\n *   // In render function:\n *   return (\n *     <View\n *       onStartShouldSetResponder={this.touchableHandleStartShouldSetResponder}\n *       onResponderTerminationRequest={this.touchableHandleResponderTerminationRequest}\n *       onResponderGrant={this.touchableHandleResponderGrant}\n *       onResponderMove={this.touchableHandleResponderMove}\n *       onResponderRelease={this.touchableHandleResponderRelease}\n *       onResponderTerminate={this.touchableHandleResponderTerminate}>\n *       <View>\n *         Even though the hit detection/interactions are triggered by the\n *         wrapping (typically larger) node, we usually end up implementing\n *         custom logic that highlights this inner one.\n *       </View>\n *     </View>\n *   );\n *\n * - You may set up your own handlers for each of these events, so long as you\n *   also invoke the `touchable*` handlers inside of your custom handler.\n *\n * - Implement the handlers on your component class in order to provide\n *   feedback to the user. See documentation for each of these class methods\n *   that you should implement.\n *\n *   touchableHandlePress: function() {\n *      this.performBounceAnimation();  // or whatever you want to do.\n *   },\n *   touchableHandleActivePressIn: function() {\n *     this.beginHighlighting(...);  // Whatever you like to convey activation\n *   },\n *   touchableHandleActivePressOut: function() {\n *     this.endHighlighting(...);  // Whatever you like to convey deactivation\n *   },\n *\n * - There are more advanced methods you can implement (see documentation below):\n *   touchableGetHighlightDelayMS: function() {\n *     return 20;\n *   }\n *   // In practice, *always* use a predeclared constant (conserve memory).\n *   touchableGetPressRectOffset: function() {\n *     return {top: 20, left: 20, right: 20, bottom: 100};\n *   }\n */\n\n/**\n * Touchable states.\n */\nconst States = keyMirror({\n  NOT_RESPONDER: null, // Not the responder\n  RESPONDER_INACTIVE_PRESS_IN: null, // Responder, inactive, in the `PressRect`\n  RESPONDER_INACTIVE_PRESS_OUT: null, // Responder, inactive, out of `PressRect`\n  RESPONDER_ACTIVE_PRESS_IN: null, // Responder, active, in the `PressRect`\n  RESPONDER_ACTIVE_PRESS_OUT: null, // Responder, active, out of `PressRect`\n  RESPONDER_ACTIVE_LONG_PRESS_IN: null, // Responder, active, in the `PressRect`, after long press threshold\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: null, // Responder, active, out of `PressRect`, after long press threshold\n  ERROR: null,\n});\n\n/**\n * Quick lookup map for states that are considered to be \"active\"\n */\nconst IsActive = {\n  RESPONDER_ACTIVE_PRESS_OUT: true,\n  RESPONDER_ACTIVE_PRESS_IN: true,\n};\n\n/**\n * Quick lookup for states that are considered to be \"pressing\" and are\n * therefore eligible to result in a \"selection\" if the press stops.\n */\nconst IsPressingIn = {\n  RESPONDER_INACTIVE_PRESS_IN: true,\n  RESPONDER_ACTIVE_PRESS_IN: true,\n  RESPONDER_ACTIVE_LONG_PRESS_IN: true,\n};\n\nconst IsLongPressingIn = {\n  RESPONDER_ACTIVE_LONG_PRESS_IN: true,\n};\n\n/**\n * Inputs to the state machine.\n */\nconst Signals = keyMirror({\n  DELAY: null,\n  RESPONDER_GRANT: null,\n  RESPONDER_RELEASE: null,\n  RESPONDER_TERMINATED: null,\n  ENTER_PRESS_RECT: null,\n  LEAVE_PRESS_RECT: null,\n  LONG_PRESS_DETECTED: null,\n});\n\n/**\n * Mapping from States x Signals => States\n */\nconst Transitions = {\n  NOT_RESPONDER: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,\n    RESPONDER_RELEASE: States.ERROR,\n    RESPONDER_TERMINATED: States.ERROR,\n    ENTER_PRESS_RECT: States.ERROR,\n    LEAVE_PRESS_RECT: States.ERROR,\n    LONG_PRESS_DETECTED: States.ERROR,\n  },\n  RESPONDER_INACTIVE_PRESS_IN: {\n    DELAY: States.RESPONDER_ACTIVE_PRESS_IN,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR,\n  },\n  RESPONDER_INACTIVE_PRESS_OUT: {\n    DELAY: States.RESPONDER_ACTIVE_PRESS_OUT,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR,\n  },\n  RESPONDER_ACTIVE_PRESS_IN: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n  },\n  RESPONDER_ACTIVE_PRESS_OUT: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR,\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_IN: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR,\n  },\n  error: {\n    DELAY: States.NOT_RESPONDER,\n    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.NOT_RESPONDER,\n    LEAVE_PRESS_RECT: States.NOT_RESPONDER,\n    LONG_PRESS_DETECTED: States.NOT_RESPONDER,\n  },\n};\n\n// ==== Typical Constants for integrating into UI components ====\n// var HIT_EXPAND_PX = 20;\n// var HIT_VERT_OFFSET_PX = 10;\nconst HIGHLIGHT_DELAY_MS = 130;\n\nconst PRESS_EXPAND_PX = 20;\n\nconst LONG_PRESS_THRESHOLD = 500;\n\nconst LONG_PRESS_DELAY_MS = LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;\n\nconst LONG_PRESS_ALLOWED_MOVEMENT = 10;\n\n// Default amount \"active\" region protrudes beyond box\n\n/**\n * By convention, methods prefixed with underscores are meant to be @private,\n * and not @protected. Mixers shouldn't access them - not even to provide them\n * as callback handlers.\n *\n *\n * ========== Geometry =========\n * `Touchable` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n *  +--------------------------+\n *  |                          | - \"Start\" events in `HitRect` cause `HitRect`\n *  |  +--------------------+  |   to become the responder.\n *  |  |  +--------------+  |  | - `HitRect` is typically expanded around\n *  |  |  |              |  |  |   the `VisualRect`, but shifted downward.\n *  |  |  |  VisualRect  |  |  | - After pressing down, after some delay,\n *  |  |  |              |  |  |   and before letting up, the Visual React\n *  |  |  +--------------+  |  |   will become \"active\". This makes it eligible\n *  |  |     HitRect        |  |   for being highlighted (so long as the\n *  |  +--------------------+  |   press remains in the `PressRect`).\n *  |        PressRect     o   |\n *  +----------------------|---+\n *           Out Region    |\n *                         +-----+ This gap between the `HitRect` and\n *                                 `PressRect` allows a touch to move far away\n *                                 from the original hit rect, and remain\n *                                 highlighted, and eligible for a \"Press\".\n *                                 Customize this via\n *                                 `touchableGetPressRectOffset()`.\n *\n *\n *\n * ======= State Machine =======\n *\n * +-------------+ <---+ RESPONDER_RELEASE\n * |NOT_RESPONDER|\n * +-------------+ <---+ RESPONDER_TERMINATED\n *     +\n *     | RESPONDER_GRANT (HitRect)\n *     v\n * +---------------------------+  DELAY   +-------------------------+  T + DELAY     +------------------------------+\n * |RESPONDER_INACTIVE_PRESS_IN|+-------->|RESPONDER_ACTIVE_PRESS_IN| +------------> |RESPONDER_ACTIVE_LONG_PRESS_IN|\n * +---------------------------+          +-------------------------+                +------------------------------+\n *     +            ^                         +           ^                                 +           ^\n *     |LEAVE_      |ENTER_                   |LEAVE_     |ENTER_                           |LEAVE_     |ENTER_\n *     |PRESS_RECT  |PRESS_RECT               |PRESS_RECT |PRESS_RECT                       |PRESS_RECT |PRESS_RECT\n *     |            |                         |           |                                 |           |\n *     v            +                         v           +                                 v           +\n * +----------------------------+  DELAY  +--------------------------+               +-------------------------------+\n * |RESPONDER_INACTIVE_PRESS_OUT|+------->|RESPONDER_ACTIVE_PRESS_OUT|               |RESPONDER_ACTIVE_LONG_PRESS_OUT|\n * +----------------------------+         +--------------------------+               +-------------------------------+\n *\n * T + DELAY => LONG_PRESS_DELAY_MS + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the `touchableHandlePress` abstract method invocation that occurs\n * when a responder is released while in either of the \"Press\" states.\n *\n * The other important side effects are the highlight abstract method\n * invocations (internal callbacks) to be implemented by the mixer.\n *\n *\n * @lends Touchable.prototype\n */\nconst TouchableMixin = {\n  componentDidMount: function() {\n    if (!Platform.isTV) {\n      return;\n    }\n\n    this._tvEventHandler = new TVEventHandler();\n    this._tvEventHandler.enable(this, function(cmp, evt) {\n      const myTag = ReactNative.findNodeHandle(cmp);\n      evt.dispatchConfig = {};\n      if (myTag === evt.tag) {\n        if (evt.eventType === 'focus') {\n          cmp.touchableHandleFocus(evt);\n        } else if (evt.eventType === 'blur') {\n          cmp.touchableHandleBlur(evt);\n        } else if (evt.eventType === 'select') {\n          cmp.touchableHandlePress &&\n            !cmp.props.disabled &&\n            cmp.touchableHandlePress(evt);\n        }\n      }\n    });\n  },\n\n  /**\n   * Clear all timeouts on unmount\n   */\n  componentWillUnmount: function() {\n    if (this._tvEventHandler) {\n      this._tvEventHandler.disable();\n      delete this._tvEventHandler;\n    }\n    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);\n    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);\n    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);\n  },\n\n  /**\n   * It's prefer that mixins determine state in this way, having the class\n   * explicitly mix the state in the one and only `getInitialState` method.\n   *\n   * @return {object} State object to be placed inside of\n   * `this.state.touchable`.\n   */\n  touchableGetInitialState: function() {\n    return {\n      touchable: {touchState: undefined, responderID: null},\n    };\n  },\n\n  // ==== Hooks to Gesture Responder system ====\n  /**\n   * Must return true if embedded in a native platform scroll view.\n   */\n  touchableHandleResponderTerminationRequest: function() {\n    return !this.props.rejectResponderTermination;\n  },\n\n  /**\n   * Must return true to start the process of `Touchable`.\n   */\n  touchableHandleStartShouldSetResponder: function() {\n    return !this.props.disabled;\n  },\n\n  /**\n   * Return true to cancel press on long press.\n   */\n  touchableLongPressCancelsPress: function() {\n    return true;\n  },\n\n  /**\n   * Place as callback for a DOM element's `onResponderGrant` event.\n   * @param {SyntheticEvent} e Synthetic event from event system.\n   *\n   */\n  touchableHandleResponderGrant: function(e) {\n    const dispatchID = e.currentTarget;\n    // Since e is used in a callback invoked on another event loop\n    // (as in setTimeout etc), we need to call e.persist() on the\n    // event to make sure it doesn't get reused in the event object pool.\n    e.persist();\n\n    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);\n    this.pressOutDelayTimeout = null;\n\n    this.state.touchable.touchState = States.NOT_RESPONDER;\n    this.state.touchable.responderID = dispatchID;\n    this._receiveSignal(Signals.RESPONDER_GRANT, e);\n    let delayMS =\n      this.touchableGetHighlightDelayMS !== undefined\n        ? Math.max(this.touchableGetHighlightDelayMS(), 0)\n        : HIGHLIGHT_DELAY_MS;\n    delayMS = isNaN(delayMS) ? HIGHLIGHT_DELAY_MS : delayMS;\n    if (delayMS !== 0) {\n      this.touchableDelayTimeout = setTimeout(\n        this._handleDelay.bind(this, e),\n        delayMS,\n      );\n    } else {\n      this._handleDelay(e);\n    }\n\n    let longDelayMS =\n      this.touchableGetLongPressDelayMS !== undefined\n        ? Math.max(this.touchableGetLongPressDelayMS(), 10)\n        : LONG_PRESS_DELAY_MS;\n    longDelayMS = isNaN(longDelayMS) ? LONG_PRESS_DELAY_MS : longDelayMS;\n    this.longPressDelayTimeout = setTimeout(\n      this._handleLongDelay.bind(this, e),\n      longDelayMS + delayMS,\n    );\n  },\n\n  /**\n   * Place as callback for a DOM element's `onResponderRelease` event.\n   */\n  touchableHandleResponderRelease: function(e) {\n    this._receiveSignal(Signals.RESPONDER_RELEASE, e);\n  },\n\n  /**\n   * Place as callback for a DOM element's `onResponderTerminate` event.\n   */\n  touchableHandleResponderTerminate: function(e) {\n    this._receiveSignal(Signals.RESPONDER_TERMINATED, e);\n  },\n\n  /**\n   * Place as callback for a DOM element's `onResponderMove` event.\n   */\n  touchableHandleResponderMove: function(e) {\n    // Not enough time elapsed yet, wait for highlight -\n    // this is just a perf optimization.\n    if (\n      this.state.touchable.touchState === States.RESPONDER_INACTIVE_PRESS_IN\n    ) {\n      return;\n    }\n\n    // Measurement may not have returned yet.\n    if (!this.state.touchable.positionOnActivate) {\n      return;\n    }\n\n    const positionOnActivate = this.state.touchable.positionOnActivate;\n    const dimensionsOnActivate = this.state.touchable.dimensionsOnActivate;\n    const pressRectOffset = this.touchableGetPressRectOffset\n      ? this.touchableGetPressRectOffset()\n      : {\n          left: PRESS_EXPAND_PX,\n          right: PRESS_EXPAND_PX,\n          top: PRESS_EXPAND_PX,\n          bottom: PRESS_EXPAND_PX,\n        };\n\n    let pressExpandLeft = pressRectOffset.left;\n    let pressExpandTop = pressRectOffset.top;\n    let pressExpandRight = pressRectOffset.right;\n    let pressExpandBottom = pressRectOffset.bottom;\n\n    const hitSlop = this.touchableGetHitSlop\n      ? this.touchableGetHitSlop()\n      : null;\n\n    if (hitSlop) {\n      pressExpandLeft += hitSlop.left;\n      pressExpandTop += hitSlop.top;\n      pressExpandRight += hitSlop.right;\n      pressExpandBottom += hitSlop.bottom;\n    }\n\n    const touch = TouchEventUtils.extractSingleTouch(e.nativeEvent);\n    const pageX = touch && touch.pageX;\n    const pageY = touch && touch.pageY;\n\n    if (this.pressInLocation) {\n      const movedDistance = this._getDistanceBetweenPoints(\n        pageX,\n        pageY,\n        this.pressInLocation.pageX,\n        this.pressInLocation.pageY,\n      );\n      if (movedDistance > LONG_PRESS_ALLOWED_MOVEMENT) {\n        this._cancelLongPressDelayTimeout();\n      }\n    }\n\n    const isTouchWithinActive =\n      pageX > positionOnActivate.left - pressExpandLeft &&\n      pageY > positionOnActivate.top - pressExpandTop &&\n      pageX <\n        positionOnActivate.left +\n          dimensionsOnActivate.width +\n          pressExpandRight &&\n      pageY <\n        positionOnActivate.top +\n          dimensionsOnActivate.height +\n          pressExpandBottom;\n    if (isTouchWithinActive) {\n      this._receiveSignal(Signals.ENTER_PRESS_RECT, e);\n      const curState = this.state.touchable.touchState;\n      if (curState === States.RESPONDER_INACTIVE_PRESS_IN) {\n        // fix for t7967420\n        this._cancelLongPressDelayTimeout();\n      }\n    } else {\n      this._cancelLongPressDelayTimeout();\n      this._receiveSignal(Signals.LEAVE_PRESS_RECT, e);\n    }\n  },\n\n  /**\n   * Invoked when the item receives focus. Mixers might override this to\n   * visually distinguish the `VisualRect` so that the user knows that it\n   * currently has the focus. Most platforms only support a single element being\n   * focused at a time, in which case there may have been a previously focused\n   * element that was blurred just prior to this.\n   */\n  touchableHandleFocus: function(e: Event) {\n    this.props.onFocus && this.props.onFocus(e);\n  },\n\n  /**\n   * Invoked when the item loses focus. Mixers might override this to\n   * visually distinguish the `VisualRect` so that the user knows that it\n   * no longer has focus. Most platforms only support a single element being\n   * focused at a time, in which case the focus may have moved to another.\n   */\n  touchableHandleBlur: function(e: Event) {\n    this.props.onBlur && this.props.onBlur(e);\n  },\n\n  // ==== Abstract Application Callbacks ====\n\n  /**\n   * Invoked when the item should be highlighted. Mixers should implement this\n   * to visually distinguish the `VisualRect` so that the user knows that\n   * releasing a touch will result in a \"selection\" (analog to click).\n   *\n   * @abstract\n   * touchableHandleActivePressIn: function,\n   */\n\n  /**\n   * Invoked when the item is \"active\" (in that it is still eligible to become\n   * a \"select\") but the touch has left the `PressRect`. Usually the mixer will\n   * want to unhighlight the `VisualRect`. If the user (while pressing) moves\n   * back into the `PressRect` `touchableHandleActivePressIn` will be invoked\n   * again and the mixer should probably highlight the `VisualRect` again. This\n   * event will not fire on an `touchEnd/mouseUp` event, only move events while\n   * the user is depressing the mouse/touch.\n   *\n   * @abstract\n   * touchableHandleActivePressOut: function\n   */\n\n  /**\n   * Invoked when the item is \"selected\" - meaning the interaction ended by\n   * letting up while the item was either in the state\n   * `RESPONDER_ACTIVE_PRESS_IN` or `RESPONDER_INACTIVE_PRESS_IN`.\n   *\n   * @abstract\n   * touchableHandlePress: function\n   */\n\n  /**\n   * Invoked when the item is long pressed - meaning the interaction ended by\n   * letting up while the item was in `RESPONDER_ACTIVE_LONG_PRESS_IN`. If\n   * `touchableHandleLongPress` is *not* provided, `touchableHandlePress` will\n   * be called as it normally is. If `touchableHandleLongPress` is provided, by\n   * default any `touchableHandlePress` callback will not be invoked. To\n   * override this default behavior, override `touchableLongPressCancelsPress`\n   * to return false. As a result, `touchableHandlePress` will be called when\n   * lifting up, even if `touchableHandleLongPress` has also been called.\n   *\n   * @abstract\n   * touchableHandleLongPress: function\n   */\n\n  /**\n   * Returns the number of millis to wait before triggering a highlight.\n   *\n   * @abstract\n   * touchableGetHighlightDelayMS: function\n   */\n\n  /**\n   * Returns the amount to extend the `HitRect` into the `PressRect`. Positive\n   * numbers mean the size expands outwards.\n   *\n   * @abstract\n   * touchableGetPressRectOffset: function\n   */\n\n  // ==== Internal Logic ====\n\n  /**\n   * Measures the `HitRect` node on activation. The Bounding rectangle is with\n   * respect to viewport - not page, so adding the `pageXOffset/pageYOffset`\n   * should result in points that are in the same coordinate system as an\n   * event's `globalX/globalY` data values.\n   *\n   * - Consider caching this for the lifetime of the component, or possibly\n   *   being able to share this cache between any `ScrollMap` view.\n   *\n   * @sideeffects\n   * @private\n   */\n  _remeasureMetricsOnActivation: function() {\n    const tag = this.state.touchable.responderID;\n    if (tag == null) {\n      return;\n    }\n\n    UIManager.measure(tag, this._handleQueryLayout);\n  },\n\n  _handleQueryLayout: function(l, t, w, h, globalX, globalY) {\n    //don't do anything UIManager failed to measure node\n    if (!l && !t && !w && !h && !globalX && !globalY) {\n      return;\n    }\n    this.state.touchable.positionOnActivate &&\n      Position.release(this.state.touchable.positionOnActivate);\n    this.state.touchable.dimensionsOnActivate &&\n      BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);\n    this.state.touchable.positionOnActivate = Position.getPooled(\n      globalX,\n      globalY,\n    );\n    this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(\n      w,\n      h,\n    );\n  },\n\n  _handleDelay: function(e) {\n    this.touchableDelayTimeout = null;\n    this._receiveSignal(Signals.DELAY, e);\n  },\n\n  _handleLongDelay: function(e) {\n    this.longPressDelayTimeout = null;\n    const curState = this.state.touchable.touchState;\n    if (\n      curState !== States.RESPONDER_ACTIVE_PRESS_IN &&\n      curState !== States.RESPONDER_ACTIVE_LONG_PRESS_IN\n    ) {\n      console.error(\n        'Attempted to transition from state `' +\n          curState +\n          '` to `' +\n          States.RESPONDER_ACTIVE_LONG_PRESS_IN +\n          '`, which is not supported. This is ' +\n          'most likely due to `Touchable.longPressDelayTimeout` not being cancelled.',\n      );\n    } else {\n      this._receiveSignal(Signals.LONG_PRESS_DETECTED, e);\n    }\n  },\n\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   *\n   * @param {Signals} signal State machine signal.\n   * @throws Error if invalid state transition or unrecognized signal.\n   * @sideeffects\n   */\n  _receiveSignal: function(signal, e) {\n    const responderID = this.state.touchable.responderID;\n    const curState = this.state.touchable.touchState;\n    const nextState = Transitions[curState] && Transitions[curState][signal];\n    if (!responderID && signal === Signals.RESPONDER_RELEASE) {\n      return;\n    }\n    if (!nextState) {\n      throw new Error(\n        'Unrecognized signal `' +\n          signal +\n          '` or state `' +\n          curState +\n          '` for Touchable responder `' +\n          responderID +\n          '`',\n      );\n    }\n    if (nextState === States.ERROR) {\n      throw new Error(\n        'Touchable cannot transition from `' +\n          curState +\n          '` to `' +\n          signal +\n          '` for responder `' +\n          responderID +\n          '`',\n      );\n    }\n    if (curState !== nextState) {\n      this._performSideEffectsForTransition(curState, nextState, signal, e);\n      this.state.touchable.touchState = nextState;\n    }\n  },\n\n  _cancelLongPressDelayTimeout: function() {\n    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);\n    this.longPressDelayTimeout = null;\n  },\n\n  _isHighlight: function(state) {\n    return (\n      state === States.RESPONDER_ACTIVE_PRESS_IN ||\n      state === States.RESPONDER_ACTIVE_LONG_PRESS_IN\n    );\n  },\n\n  _savePressInLocation: function(e) {\n    const touch = TouchEventUtils.extractSingleTouch(e.nativeEvent);\n    const pageX = touch && touch.pageX;\n    const pageY = touch && touch.pageY;\n    const locationX = touch && touch.locationX;\n    const locationY = touch && touch.locationY;\n    this.pressInLocation = {pageX, pageY, locationX, locationY};\n  },\n\n  _getDistanceBetweenPoints: function(aX, aY, bX, bY) {\n    const deltaX = aX - bX;\n    const deltaY = aY - bY;\n    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  },\n\n  /**\n   * Will perform a transition between touchable states, and identify any\n   * highlighting or unhighlighting that must be performed for this particular\n   * transition.\n   *\n   * @param {States} curState Current Touchable state.\n   * @param {States} nextState Next Touchable state.\n   * @param {Signal} signal Signal that triggered the transition.\n   * @param {Event} e Native event.\n   * @sideeffects\n   */\n  _performSideEffectsForTransition: function(curState, nextState, signal, e) {\n    const curIsHighlight = this._isHighlight(curState);\n    const newIsHighlight = this._isHighlight(nextState);\n\n    const isFinalSignal =\n      signal === Signals.RESPONDER_TERMINATED ||\n      signal === Signals.RESPONDER_RELEASE;\n\n    if (isFinalSignal) {\n      this._cancelLongPressDelayTimeout();\n    }\n\n    if (!IsActive[curState] && IsActive[nextState]) {\n      this._remeasureMetricsOnActivation();\n    }\n\n    if (IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED) {\n      this.touchableHandleLongPress && this.touchableHandleLongPress(e);\n    }\n\n    if (newIsHighlight && !curIsHighlight) {\n      this._startHighlight(e);\n    } else if (!newIsHighlight && curIsHighlight) {\n      this._endHighlight(e);\n    }\n\n    if (IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE) {\n      const hasLongPressHandler = !!this.props.onLongPress;\n      const pressIsLongButStillCallOnPress =\n        IsLongPressingIn[curState] && // We *are* long pressing.. // But either has no long handler\n        (!hasLongPressHandler || !this.touchableLongPressCancelsPress()); // or we're told to ignore it.\n\n      const shouldInvokePress =\n        !IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;\n      if (shouldInvokePress && this.touchableHandlePress) {\n        if (!newIsHighlight && !curIsHighlight) {\n          // we never highlighted because of delay, but we should highlight now\n          this._startHighlight(e);\n          this._endHighlight(e);\n        }\n        if (Platform.OS === 'android') {\n          this._playTouchSound();\n        }\n        this.touchableHandlePress(e);\n      }\n    }\n\n    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);\n    this.touchableDelayTimeout = null;\n  },\n\n  _playTouchSound: function() {\n    UIManager.playTouchSound();\n  },\n\n  _startHighlight: function(e) {\n    this._savePressInLocation(e);\n    this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);\n  },\n\n  _endHighlight: function(e) {\n    if (this.touchableHandleActivePressOut) {\n      if (\n        this.touchableGetPressOutDelayMS &&\n        this.touchableGetPressOutDelayMS()\n      ) {\n        this.pressOutDelayTimeout = setTimeout(() => {\n          this.touchableHandleActivePressOut(e);\n        }, this.touchableGetPressOutDelayMS());\n      } else {\n        this.touchableHandleActivePressOut(e);\n      }\n    }\n  },\n};\n\nconst Touchable = {\n  Mixin: TouchableMixin,\n  TOUCH_TARGET_DEBUG: false, // Highlights all touchable targets. Toggle with Inspector.\n  /**\n   * Renders a debugging overlay to visualize touch target with hitSlop (might not work on Android).\n   */\n  renderDebugView: ({color, hitSlop}) => {\n    if (!Touchable.TOUCH_TARGET_DEBUG) {\n      return null;\n    }\n    if (!__DEV__) {\n      throw Error(\n        'Touchable.TOUCH_TARGET_DEBUG should not be enabled in prod!',\n      );\n    }\n    const debugHitSlopStyle = {};\n    hitSlop = hitSlop || {top: 0, bottom: 0, left: 0, right: 0};\n    for (const key in hitSlop) {\n      debugHitSlopStyle[key] = -hitSlop[key];\n    }\n    const hexColor =\n      '#' + ('00000000' + normalizeColor(color).toString(16)).substr(-8);\n    return (\n      <View\n        pointerEvents=\"none\"\n        style={{\n          position: 'absolute',\n          borderColor: hexColor.slice(0, -2) + '55', // More opaque\n          borderWidth: 1,\n          borderStyle: 'dashed',\n          backgroundColor: hexColor.slice(0, -2) + '0F', // Less opaque\n          ...debugHitSlopStyle,\n        }}\n      />\n    );\n  },\n};\n\nmodule.exports = Touchable;\n"]}]}
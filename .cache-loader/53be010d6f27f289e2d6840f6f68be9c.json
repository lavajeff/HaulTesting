{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/differ/deepDiffer.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/differ/deepDiffer.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var deepDiffer=function deepDiffer(one,two){var maxDepth=arguments.length>2&&arguments[2]!==undefined?arguments[2]:-1;if(maxDepth===0){return true;}if(one===two){return false;}if(typeof one==='function'&&typeof two==='function'){return false;}if(typeof one!=='object'||one===null){return one!==two;}if(typeof two!=='object'||two===null){return true;}if(one.constructor!==two.constructor){return true;}if(Array.isArray(one)){var len=one.length;if(two.length!==len){return true;}for(var ii=0;ii<len;ii++){if(deepDiffer(one[ii],two[ii],maxDepth-1)){return true;}}}else{for(var key in one){if(deepDiffer(one[key],two[key],maxDepth-1)){return true;}}for(var twoKey in two){if(one[twoKey]===undefined&&two[twoKey]!==undefined){return true;}}}return false;};module.exports=deepDiffer;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(deepDiffer,\"deepDiffer\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/differ/deepDiffer.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/differ/deepDiffer.js"],"names":["deepDiffer","one","two","maxDepth","constructor","Array","isArray","len","length","ii","key","twoKey","undefined","module","exports"],"mappings":"AAUA,a,0GAKA,GAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CACjBC,GADiB,CAEjBC,GAFiB,CAIR,IADTC,CAAAA,QACS,2DADU,CAAC,CACX,CACT,GAAIA,QAAQ,GAAK,CAAjB,CAAoB,CAClB,MAAO,KAAP,CACD,CACD,GAAIF,GAAG,GAAKC,GAAZ,CAAiB,CAEf,MAAO,MAAP,CACD,CACD,GAAI,MAAOD,CAAAA,GAAP,GAAe,UAAf,EAA6B,MAAOC,CAAAA,GAAP,GAAe,UAAhD,CAA4D,CAE1D,MAAO,MAAP,CACD,CACD,GAAI,MAAOD,CAAAA,GAAP,GAAe,QAAf,EAA2BA,GAAG,GAAK,IAAvC,CAA6C,CAE3C,MAAOA,CAAAA,GAAG,GAAKC,GAAf,CACD,CACD,GAAI,MAAOA,CAAAA,GAAP,GAAe,QAAf,EAA2BA,GAAG,GAAK,IAAvC,CAA6C,CAG3C,MAAO,KAAP,CACD,CACD,GAAID,GAAG,CAACG,WAAJ,GAAoBF,GAAG,CAACE,WAA5B,CAAyC,CACvC,MAAO,KAAP,CACD,CACD,GAAIC,KAAK,CAACC,OAAN,CAAcL,GAAd,CAAJ,CAAwB,CAEtB,GAAMM,CAAAA,GAAG,CAAGN,GAAG,CAACO,MAAhB,CACA,GAAIN,GAAG,CAACM,MAAJ,GAAeD,GAAnB,CAAwB,CACtB,MAAO,KAAP,CACD,CACD,IAAK,GAAIE,CAAAA,EAAE,CAAG,CAAd,CAAiBA,EAAE,CAAGF,GAAtB,CAA2BE,EAAE,EAA7B,CAAiC,CAC/B,GAAIT,UAAU,CAACC,GAAG,CAACQ,EAAD,CAAJ,CAAUP,GAAG,CAACO,EAAD,CAAb,CAAmBN,QAAQ,CAAG,CAA9B,CAAd,CAAgD,CAC9C,MAAO,KAAP,CACD,CACF,CACF,CAXD,IAWO,CACL,IAAK,GAAMO,CAAAA,GAAX,GAAkBT,CAAAA,GAAlB,CAAuB,CACrB,GAAID,UAAU,CAACC,GAAG,CAACS,GAAD,CAAJ,CAAWR,GAAG,CAACQ,GAAD,CAAd,CAAqBP,QAAQ,CAAG,CAAhC,CAAd,CAAkD,CAChD,MAAO,KAAP,CACD,CACF,CACD,IAAK,GAAMQ,CAAAA,MAAX,GAAqBT,CAAAA,GAArB,CAA0B,CAGxB,GAAID,GAAG,CAACU,MAAD,CAAH,GAAgBC,SAAhB,EAA6BV,GAAG,CAACS,MAAD,CAAH,GAAgBC,SAAjD,CAA4D,CAC1D,MAAO,KAAP,CACD,CACF,CACF,CACD,MAAO,MAAP,CACD,CAtDD,CAwDAC,MAAM,CAACC,OAAP,CAAiBd,UAAjB,C,gLAxDMA,U","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\n/*\n * @returns {bool} true if different, false if equal\n */\nconst deepDiffer = function(\n  one: any,\n  two: any,\n  maxDepth: number = -1,\n): boolean {\n  if (maxDepth === 0) {\n    return true;\n  }\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal\n    return false;\n  }\n  if (typeof one !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n  if (typeof two !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    const len = one.length;\n    if (two.length !== len) {\n      return true;\n    }\n    for (let ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {\n        return true;\n      }\n    }\n  } else {\n    for (const key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1)) {\n        return true;\n      }\n    }\n    for (const twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nmodule.exports = deepDiffer;\n"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Clipboard/Clipboard.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Clipboard/Clipboard.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var Clipboard=require('NativeModules').Clipboard;module.exports={getString:function getString(){return Clipboard.getString();},setString:function setString(content){Clipboard.setString(content);}};;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(Clipboard,\"Clipboard\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Clipboard/Clipboard.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Components/Clipboard/Clipboard.js"],"names":["Clipboard","require","module","exports","getString","setString","content"],"mappings":"AAUA,a,0GAEA,GAAMA,CAAAA,SAAS,CAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBD,SAA3C,CAKAE,MAAM,CAACC,OAAP,CAAiB,CASfC,SATe,qBASc,CAC3B,MAAOJ,CAAAA,SAAS,CAACI,SAAV,EAAP,CACD,CAXc,CAqBfC,SArBe,oBAqBLC,OArBK,CAqBY,CACzBN,SAAS,CAACK,SAAV,CAAoBC,OAApB,EACD,CAvBc,CAAjB,C,gLALMN,S","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst Clipboard = require('NativeModules').Clipboard;\n\n/**\n * `Clipboard` gives you an interface for setting and getting content from Clipboard on both iOS and Android\n */\nmodule.exports = {\n  /**\n   * Get content of string type, this method returns a `Promise`, so you can use following code to get clipboard content\n   * ```javascript\n   * async _getContent() {\n   *   var content = await Clipboard.getString();\n   * }\n   * ```\n   */\n  getString(): Promise<string> {\n    return Clipboard.getString();\n  },\n  /**\n   * Set content of string type. You can use following code to set clipboard content\n   * ```javascript\n   * _setContent() {\n   *   Clipboard.setString('hello world');\n   * }\n   * ```\n   * @param the content to be stored in the clipboard.\n   */\n  setString(content: string) {\n    Clipboard.setString(content);\n  },\n};\n"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxRegistry.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxRegistry.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var YellowBoxWarning=require('YellowBoxWarning');var observers=new Set();var ignorePatterns=new Set();var registry=new Map();var disabled=false;var projection=new Map();var updateTimeout=null;function isWarningIgnored(warning){for(var _iterator=ignorePatterns,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref;if(_isArray){if(_i>=_iterator.length)break;_ref=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref=_i.value;}var _pattern=_ref;if(warning.message.content.includes(_pattern)){return true;}}return false;}function handleUpdate(){projection=new Map();if(!disabled){for(var _iterator2=registry,_isArray2=Array.isArray(_iterator2),_i2=0,_iterator2=_isArray2?_iterator2:_iterator2[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref4;if(_isArray2){if(_i2>=_iterator2.length)break;_ref4=_iterator2[_i2++];}else{_i2=_iterator2.next();if(_i2.done)break;_ref4=_i2.value;}var _ref5=_ref4;var _ref3=(0,_slicedToArray2.default)(_ref5,2);var _category=_ref3[0];var _warnings=_ref3[1];var filtered=_warnings.filter(function(warning){return!isWarningIgnored(warning);});if(filtered.length>0){projection.set(_category,filtered);}}}if(updateTimeout==null){updateTimeout=setImmediate(function(){updateTimeout=null;for(var _iterator3=observers,_isArray3=Array.isArray(_iterator3),_i3=0,_iterator3=_isArray3?_iterator3:_iterator3[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref7;if(_isArray3){if(_i3>=_iterator3.length)break;_ref7=_iterator3[_i3++];}else{_i3=_iterator3.next();if(_i3.done)break;_ref7=_i3.value;}var _ref8=_ref7;var _observer=_ref8.observer;_observer(projection);}});}}var YellowBoxRegistry={add:function add(_ref9){var args=_ref9.args,framesToPop=_ref9.framesToPop;if(typeof args[0]==='string'&&args[0].startsWith('(ADVICE)')){return;}var _YellowBoxWarning$par=YellowBoxWarning.parse({args:args,framesToPop:framesToPop+1}),category=_YellowBoxWarning$par.category,message=_YellowBoxWarning$par.message,stack=_YellowBoxWarning$par.stack;var warnings=registry.get(category);if(warnings==null){warnings=[];}warnings=(0,_toConsumableArray2.default)(warnings).concat([new YellowBoxWarning(message,stack)]);registry.delete(category);registry.set(category,warnings);handleUpdate();},delete:function _delete(category){if(registry.has(category)){registry.delete(category);handleUpdate();}},clear:function clear(){if(registry.size>0){registry.clear();handleUpdate();}},addIgnorePatterns:function addIgnorePatterns(patterns){var newPatterns=patterns.filter(function(pattern){return!ignorePatterns.has(pattern);});if(newPatterns.length===0){return;}for(var _iterator4=newPatterns,_isArray4=Array.isArray(_iterator4),_i4=0,_iterator4=_isArray4?_iterator4:_iterator4[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref10;if(_isArray4){if(_i4>=_iterator4.length)break;_ref10=_iterator4[_i4++];}else{_i4=_iterator4.next();if(_i4.done)break;_ref10=_i4.value;}var _pattern2=_ref10;ignorePatterns.add(_pattern2);}handleUpdate();},setDisabled:function setDisabled(value){if(value===disabled){return;}disabled=value;handleUpdate();},isDisabled:function isDisabled(){return disabled;},observe:function observe(observer){var subscription={observer:observer};observers.add(subscription);observer(projection);return{unsubscribe:function unsubscribe(){observers.delete(subscription);}};}};module.exports=YellowBoxRegistry;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(observers,\"observers\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxRegistry.js\");reactHotLoader.register(ignorePatterns,\"ignorePatterns\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxRegistry.js\");reactHotLoader.register(registry,\"registry\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxRegistry.js\");reactHotLoader.register(disabled,\"disabled\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxRegistry.js\");reactHotLoader.register(projection,\"projection\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxRegistry.js\");reactHotLoader.register(updateTimeout,\"updateTimeout\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxRegistry.js\");reactHotLoader.register(isWarningIgnored,\"isWarningIgnored\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxRegistry.js\");reactHotLoader.register(handleUpdate,\"handleUpdate\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxRegistry.js\");reactHotLoader.register(YellowBoxRegistry,\"YellowBoxRegistry\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxRegistry.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxRegistry.js"],"names":["YellowBoxWarning","require","observers","Set","ignorePatterns","registry","Map","disabled","projection","updateTimeout","isWarningIgnored","warning","pattern","message","content","includes","handleUpdate","category","warnings","filtered","filter","length","set","setImmediate","observer","YellowBoxRegistry","add","args","framesToPop","startsWith","parse","stack","get","delete","has","clear","size","addIgnorePatterns","patterns","newPatterns","setDisabled","value","isDisabled","observe","subscription","unsubscribe","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst YellowBoxWarning = require('YellowBoxWarning');\n\nimport type {Category} from 'YellowBoxCategory';\n\nexport type Registry = Map<Category, $ReadOnlyArray<YellowBoxWarning>>;\n\nexport type Observer = (registry: Registry) => void;\n\nexport type Subscription = $ReadOnly<{|\n  unsubscribe: () => void,\n|}>;\n\nconst observers: Set<{observer: Observer}> = new Set();\nconst ignorePatterns: Set<string> = new Set();\nconst registry: Registry = new Map();\n\nlet disabled = false;\nlet projection = new Map();\nlet updateTimeout = null;\n\nfunction isWarningIgnored(warning: YellowBoxWarning): boolean {\n  for (const pattern of ignorePatterns) {\n    if (warning.message.content.includes(pattern)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction handleUpdate(): void {\n  projection = new Map();\n  if (!disabled) {\n    for (const [category, warnings] of registry) {\n      const filtered = warnings.filter(warning => !isWarningIgnored(warning));\n      if (filtered.length > 0) {\n        projection.set(category, filtered);\n      }\n    }\n  }\n  if (updateTimeout == null) {\n    updateTimeout = setImmediate(() => {\n      updateTimeout = null;\n      for (const {observer} of observers) {\n        observer(projection);\n      }\n    });\n  }\n}\n\nconst YellowBoxRegistry = {\n  add({\n    args,\n    framesToPop,\n  }: $ReadOnly<{|\n    args: $ReadOnlyArray<mixed>,\n    framesToPop: number,\n  |}>): void {\n    if (typeof args[0] === 'string' && args[0].startsWith('(ADVICE)')) {\n      return;\n    }\n    const {category, message, stack} = YellowBoxWarning.parse({\n      args,\n      framesToPop: framesToPop + 1,\n    });\n\n    let warnings = registry.get(category);\n    if (warnings == null) {\n      warnings = [];\n    }\n    warnings = [...warnings, new YellowBoxWarning(message, stack)];\n\n    registry.delete(category);\n    registry.set(category, warnings);\n\n    handleUpdate();\n  },\n\n  delete(category: Category): void {\n    if (registry.has(category)) {\n      registry.delete(category);\n      handleUpdate();\n    }\n  },\n\n  clear(): void {\n    if (registry.size > 0) {\n      registry.clear();\n      handleUpdate();\n    }\n  },\n\n  addIgnorePatterns(patterns: $ReadOnlyArray<string>): void {\n    const newPatterns = patterns.filter(\n      pattern => !ignorePatterns.has(pattern),\n    );\n    if (newPatterns.length === 0) {\n      return;\n    }\n    for (const pattern of newPatterns) {\n      ignorePatterns.add(pattern);\n    }\n    handleUpdate();\n  },\n\n  setDisabled(value: boolean): void {\n    if (value === disabled) {\n      return;\n    }\n    disabled = value;\n    handleUpdate();\n  },\n\n  isDisabled(): boolean {\n    return disabled;\n  },\n\n  observe(observer: Observer): Subscription {\n    const subscription = {observer};\n    observers.add(subscription);\n    observer(projection);\n    return {\n      unsubscribe(): void {\n        observers.delete(subscription);\n      },\n    };\n  },\n};\n\nmodule.exports = YellowBoxRegistry;\n"]}]}
{"remainingRequest":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/differ/insetsDiffer.js","dependencies":[{"path":"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/differ/insetsDiffer.js","mtime":1539700108130},{"path":"/Users/jeffrey/HaulTesting/node_modules/cache-loader/dist/cjs.js","mtime":1539652983212},{"path":"/Users/jeffrey/HaulTesting/node_modules/thread-loader/dist/cjs.js","mtime":1539652983315},{"path":"/Users/jeffrey/HaulTesting/node_modules/babel-loader/lib/index.js","mtime":1539615827828}],"contextDependencies":[],"result":["'use strict';(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();var dummyInsets={top:undefined,left:undefined,right:undefined,bottom:undefined};var insetsDiffer=function insetsDiffer(one,two){one=one||dummyInsets;two=two||dummyInsets;return one!==two&&(one.top!==two.top||one.left!==two.left||one.right!==two.right||one.bottom!==two.bottom);};module.exports=insetsDiffer;;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(dummyInsets,\"dummyInsets\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/differ/insetsDiffer.js\");reactHotLoader.register(insetsDiffer,\"insetsDiffer\",\"/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/differ/insetsDiffer.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/jeffrey/HaulTesting/node_modules/react-native/Libraries/Utilities/differ/insetsDiffer.js"],"names":["dummyInsets","top","undefined","left","right","bottom","insetsDiffer","one","two","module","exports"],"mappings":"AAUA,a,0GASA,GAAMA,CAAAA,WAAW,CAAG,CAClBC,GAAG,CAAEC,SADa,CAElBC,IAAI,CAAED,SAFY,CAGlBE,KAAK,CAAEF,SAHW,CAIlBG,MAAM,CAAEH,SAJU,CAApB,CAOA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAASC,GAAT,CAAsBC,GAAtB,CAA4C,CAC/DD,GAAG,CAAGA,GAAG,EAAIP,WAAb,CACAQ,GAAG,CAAGA,GAAG,EAAIR,WAAb,CACA,MACEO,CAAAA,GAAG,GAAKC,GAAR,GACCD,GAAG,CAACN,GAAJ,GAAYO,GAAG,CAACP,GAAhB,EACCM,GAAG,CAACJ,IAAJ,GAAaK,GAAG,CAACL,IADlB,EAECI,GAAG,CAACH,KAAJ,GAAcI,GAAG,CAACJ,KAFnB,EAGCG,GAAG,CAACF,MAAJ,GAAeG,GAAG,CAACH,MAJrB,CADF,CAOD,CAVD,CAYAI,MAAM,CAACC,OAAP,CAAiBJ,YAAjB,C,gLAnBMN,W,0IAOAM,Y","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\ntype Inset = {\n  top: ?number,\n  left: ?number,\n  right: ?number,\n  bottom: ?number,\n};\n\nconst dummyInsets = {\n  top: undefined,\n  left: undefined,\n  right: undefined,\n  bottom: undefined,\n};\n\nconst insetsDiffer = function(one: ?Inset, two: ?Inset): boolean {\n  one = one || dummyInsets;\n  two = two || dummyInsets;\n  return (\n    one !== two &&\n    (one.top !== two.top ||\n      one.left !== two.left ||\n      one.right !== two.right ||\n      one.bottom !== two.bottom)\n  );\n};\n\nmodule.exports = insetsDiffer;\n"]}]}